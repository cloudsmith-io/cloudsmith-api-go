/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.121.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// ReposRsaCreate struct for ReposRsaCreate
type ReposRsaCreate struct {
	// The RSA passphrase used for signing.
	RsaPassphrase *string `json:"rsa_passphrase,omitempty"`
	// The RSA private key.
	RsaPrivateKey string `json:"rsa_private_key"`
}

// NewReposRsaCreate instantiates a new ReposRsaCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposRsaCreate(rsaPrivateKey string) *ReposRsaCreate {
	this := ReposRsaCreate{}
	this.RsaPrivateKey = rsaPrivateKey
	return &this
}

// NewReposRsaCreateWithDefaults instantiates a new ReposRsaCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposRsaCreateWithDefaults() *ReposRsaCreate {
	this := ReposRsaCreate{}
	return &this
}

// GetRsaPassphrase returns the RsaPassphrase field value if set, zero value otherwise.
func (o *ReposRsaCreate) GetRsaPassphrase() string {
	if o == nil || o.RsaPassphrase == nil {
		var ret string
		return ret
	}
	return *o.RsaPassphrase
}

// GetRsaPassphraseOk returns a tuple with the RsaPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposRsaCreate) GetRsaPassphraseOk() (*string, bool) {
	if o == nil || o.RsaPassphrase == nil {
		return nil, false
	}
	return o.RsaPassphrase, true
}

// HasRsaPassphrase returns a boolean if a field has been set.
func (o *ReposRsaCreate) HasRsaPassphrase() bool {
	if o != nil && o.RsaPassphrase != nil {
		return true
	}

	return false
}

// SetRsaPassphrase gets a reference to the given string and assigns it to the RsaPassphrase field.
func (o *ReposRsaCreate) SetRsaPassphrase(v string) {
	o.RsaPassphrase = &v
}

// GetRsaPrivateKey returns the RsaPrivateKey field value
func (o *ReposRsaCreate) GetRsaPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RsaPrivateKey
}

// GetRsaPrivateKeyOk returns a tuple with the RsaPrivateKey field value
// and a boolean to check if the value has been set.
func (o *ReposRsaCreate) GetRsaPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RsaPrivateKey, true
}

// SetRsaPrivateKey sets field value
func (o *ReposRsaCreate) SetRsaPrivateKey(v string) {
	o.RsaPrivateKey = v
}

func (o ReposRsaCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RsaPassphrase != nil {
		toSerialize["rsa_passphrase"] = o.RsaPassphrase
	}
	if true {
		toSerialize["rsa_private_key"] = o.RsaPrivateKey
	}
	return json.Marshal(toSerialize)
}

type NullableReposRsaCreate struct {
	value *ReposRsaCreate
	isSet bool
}

func (v NullableReposRsaCreate) Get() *ReposRsaCreate {
	return v.value
}

func (v *NullableReposRsaCreate) Set(val *ReposRsaCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableReposRsaCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableReposRsaCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposRsaCreate(val *ReposRsaCreate) *NullableReposRsaCreate {
	return &NullableReposRsaCreate{value: val, isSet: true}
}

func (v NullableReposRsaCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposRsaCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
