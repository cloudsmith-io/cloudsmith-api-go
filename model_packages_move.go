/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.121.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackagesMove struct for PackagesMove
type PackagesMove struct {
	// None
	Destination string `json:"destination"`
}

// NewPackagesMove instantiates a new PackagesMove object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackagesMove(destination string) *PackagesMove {
	this := PackagesMove{}
	this.Destination = destination
	return &this
}

// NewPackagesMoveWithDefaults instantiates a new PackagesMove object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackagesMoveWithDefaults() *PackagesMove {
	this := PackagesMove{}
	return &this
}

// GetDestination returns the Destination field value
func (o *PackagesMove) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *PackagesMove) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *PackagesMove) SetDestination(v string) {
	o.Destination = v
}

func (o PackagesMove) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destination"] = o.Destination
	}
	return json.Marshal(toSerialize)
}

type NullablePackagesMove struct {
	value *PackagesMove
	isSet bool
}

func (v NullablePackagesMove) Get() *PackagesMove {
	return v.value
}

func (v *NullablePackagesMove) Set(val *PackagesMove) {
	v.value = val
	v.isSet = true
}

func (v NullablePackagesMove) IsSet() bool {
	return v.isSet
}

func (v *NullablePackagesMove) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackagesMove(val *PackagesMove) *NullablePackagesMove {
	return &NullablePackagesMove{value: val, isSet: true}
}

func (v NullablePackagesMove) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackagesMove) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
