/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.417.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// checks if the ProviderSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProviderSettingsRequest{}

// ProviderSettingsRequest struct for ProviderSettingsRequest
type ProviderSettingsRequest struct {
	// The set of claims that any received tokens from the provider must contain to authenticate as the configured service account.
	Claims map[string]interface{} `json:"claims"`
	// Whether the provider settings should be used for incoming OIDC requests.
	Enabled bool `json:"enabled"`
	// The name of the provider settings are being configured for
	Name string `json:"name"`
	// The URL from the provider that serves as the base for the OpenID configuration. For example, if the OpenID configuration is available at https://token.actions.githubusercontent.com/.well-known/openid-configuration, the provider URL would be https://token.actions.githubusercontent.com/
	ProviderUrl string `json:"provider_url"`
	// The service accounts associated with these provider settings
	ServiceAccounts []string `json:"service_accounts"`
}

// NewProviderSettingsRequest instantiates a new ProviderSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderSettingsRequest(claims map[string]interface{}, enabled bool, name string, providerUrl string, serviceAccounts []string) *ProviderSettingsRequest {
	this := ProviderSettingsRequest{}
	this.Claims = claims
	this.Enabled = enabled
	this.Name = name
	this.ProviderUrl = providerUrl
	this.ServiceAccounts = serviceAccounts
	return &this
}

// NewProviderSettingsRequestWithDefaults instantiates a new ProviderSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderSettingsRequestWithDefaults() *ProviderSettingsRequest {
	this := ProviderSettingsRequest{}
	return &this
}

// GetClaims returns the Claims field value
func (o *ProviderSettingsRequest) GetClaims() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value
// and a boolean to check if the value has been set.
func (o *ProviderSettingsRequest) GetClaimsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Claims, true
}

// SetClaims sets field value
func (o *ProviderSettingsRequest) SetClaims(v map[string]interface{}) {
	o.Claims = v
}

// GetEnabled returns the Enabled field value
func (o *ProviderSettingsRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ProviderSettingsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ProviderSettingsRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetName returns the Name field value
func (o *ProviderSettingsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProviderSettingsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProviderSettingsRequest) SetName(v string) {
	o.Name = v
}

// GetProviderUrl returns the ProviderUrl field value
func (o *ProviderSettingsRequest) GetProviderUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderUrl
}

// GetProviderUrlOk returns a tuple with the ProviderUrl field value
// and a boolean to check if the value has been set.
func (o *ProviderSettingsRequest) GetProviderUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderUrl, true
}

// SetProviderUrl sets field value
func (o *ProviderSettingsRequest) SetProviderUrl(v string) {
	o.ProviderUrl = v
}

// GetServiceAccounts returns the ServiceAccounts field value
func (o *ProviderSettingsRequest) GetServiceAccounts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ServiceAccounts
}

// GetServiceAccountsOk returns a tuple with the ServiceAccounts field value
// and a boolean to check if the value has been set.
func (o *ProviderSettingsRequest) GetServiceAccountsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceAccounts, true
}

// SetServiceAccounts sets field value
func (o *ProviderSettingsRequest) SetServiceAccounts(v []string) {
	o.ServiceAccounts = v
}

func (o ProviderSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProviderSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["claims"] = o.Claims
	toSerialize["enabled"] = o.Enabled
	toSerialize["name"] = o.Name
	toSerialize["provider_url"] = o.ProviderUrl
	toSerialize["service_accounts"] = o.ServiceAccounts
	return toSerialize, nil
}

type NullableProviderSettingsRequest struct {
	value *ProviderSettingsRequest
	isSet bool
}

func (v NullableProviderSettingsRequest) Get() *ProviderSettingsRequest {
	return v.value
}

func (v *NullableProviderSettingsRequest) Set(val *ProviderSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderSettingsRequest(val *ProviderSettingsRequest) *NullableProviderSettingsRequest {
	return &NullableProviderSettingsRequest{value: val, isSet: true}
}

func (v NullableProviderSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
