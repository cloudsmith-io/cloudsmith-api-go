/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackageFilePartsUploadResponse struct for PackageFilePartsUploadResponse
type PackageFilePartsUploadResponse struct {
	// The identifier for the file to use uploading parts.
	Identifier *string `json:"identifier,omitempty"`
	// The querystring to use for the next-step PUT upload.
	UploadQuerystring NullableString `json:"upload_querystring,omitempty"`
	// The URL to use for the next-step PUT upload
	UploadUrl *string `json:"upload_url,omitempty"`
}

// NewPackageFilePartsUploadResponse instantiates a new PackageFilePartsUploadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageFilePartsUploadResponse() *PackageFilePartsUploadResponse {
	this := PackageFilePartsUploadResponse{}
	return &this
}

// NewPackageFilePartsUploadResponseWithDefaults instantiates a new PackageFilePartsUploadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageFilePartsUploadResponseWithDefaults() *PackageFilePartsUploadResponse {
	this := PackageFilePartsUploadResponse{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *PackageFilePartsUploadResponse) GetIdentifier() string {
	if o == nil || isNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFilePartsUploadResponse) GetIdentifierOk() (*string, bool) {
	if o == nil || isNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *PackageFilePartsUploadResponse) HasIdentifier() bool {
	if o != nil && !isNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *PackageFilePartsUploadResponse) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetUploadQuerystring returns the UploadQuerystring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFilePartsUploadResponse) GetUploadQuerystring() string {
	if o == nil || isNil(o.UploadQuerystring.Get()) {
		var ret string
		return ret
	}
	return *o.UploadQuerystring.Get()
}

// GetUploadQuerystringOk returns a tuple with the UploadQuerystring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFilePartsUploadResponse) GetUploadQuerystringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UploadQuerystring.Get(), o.UploadQuerystring.IsSet()
}

// HasUploadQuerystring returns a boolean if a field has been set.
func (o *PackageFilePartsUploadResponse) HasUploadQuerystring() bool {
	if o != nil && o.UploadQuerystring.IsSet() {
		return true
	}

	return false
}

// SetUploadQuerystring gets a reference to the given NullableString and assigns it to the UploadQuerystring field.
func (o *PackageFilePartsUploadResponse) SetUploadQuerystring(v string) {
	o.UploadQuerystring.Set(&v)
}

// SetUploadQuerystringNil sets the value for UploadQuerystring to be an explicit nil
func (o *PackageFilePartsUploadResponse) SetUploadQuerystringNil() {
	o.UploadQuerystring.Set(nil)
}

// UnsetUploadQuerystring ensures that no value is present for UploadQuerystring, not even an explicit nil
func (o *PackageFilePartsUploadResponse) UnsetUploadQuerystring() {
	o.UploadQuerystring.Unset()
}

// GetUploadUrl returns the UploadUrl field value if set, zero value otherwise.
func (o *PackageFilePartsUploadResponse) GetUploadUrl() string {
	if o == nil || isNil(o.UploadUrl) {
		var ret string
		return ret
	}
	return *o.UploadUrl
}

// GetUploadUrlOk returns a tuple with the UploadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFilePartsUploadResponse) GetUploadUrlOk() (*string, bool) {
	if o == nil || isNil(o.UploadUrl) {
		return nil, false
	}
	return o.UploadUrl, true
}

// HasUploadUrl returns a boolean if a field has been set.
func (o *PackageFilePartsUploadResponse) HasUploadUrl() bool {
	if o != nil && !isNil(o.UploadUrl) {
		return true
	}

	return false
}

// SetUploadUrl gets a reference to the given string and assigns it to the UploadUrl field.
func (o *PackageFilePartsUploadResponse) SetUploadUrl(v string) {
	o.UploadUrl = &v
}

func (o PackageFilePartsUploadResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if o.UploadQuerystring.IsSet() {
		toSerialize["upload_querystring"] = o.UploadQuerystring.Get()
	}
	if !isNil(o.UploadUrl) {
		toSerialize["upload_url"] = o.UploadUrl
	}
	return json.Marshal(toSerialize)
}

type NullablePackageFilePartsUploadResponse struct {
	value *PackageFilePartsUploadResponse
	isSet bool
}

func (v NullablePackageFilePartsUploadResponse) Get() *PackageFilePartsUploadResponse {
	return v.value
}

func (v *NullablePackageFilePartsUploadResponse) Set(val *PackageFilePartsUploadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageFilePartsUploadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageFilePartsUploadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageFilePartsUploadResponse(val *PackageFilePartsUploadResponse) *NullablePackageFilePartsUploadResponse {
	return &NullablePackageFilePartsUploadResponse{value: val, isSet: true}
}

func (v NullablePackageFilePartsUploadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageFilePartsUploadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
