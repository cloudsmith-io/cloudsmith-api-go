/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.247.7
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// RepositoryGeoIPRulesRequest struct for RepositoryGeoIPRulesRequest
type RepositoryGeoIPRulesRequest struct {
	Cidr        RepositoryGeoIPCidr        `json:"cidr"`
	CountryCode RepositoryGeoIPCountryCode `json:"country_code"`
}

// NewRepositoryGeoIPRulesRequest instantiates a new RepositoryGeoIPRulesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryGeoIPRulesRequest(cidr RepositoryGeoIPCidr, countryCode RepositoryGeoIPCountryCode) *RepositoryGeoIPRulesRequest {
	this := RepositoryGeoIPRulesRequest{}
	this.Cidr = cidr
	this.CountryCode = countryCode
	return &this
}

// NewRepositoryGeoIPRulesRequestWithDefaults instantiates a new RepositoryGeoIPRulesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryGeoIPRulesRequestWithDefaults() *RepositoryGeoIPRulesRequest {
	this := RepositoryGeoIPRulesRequest{}
	return &this
}

// GetCidr returns the Cidr field value
func (o *RepositoryGeoIPRulesRequest) GetCidr() RepositoryGeoIPCidr {
	if o == nil {
		var ret RepositoryGeoIPCidr
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *RepositoryGeoIPRulesRequest) GetCidrOk() (*RepositoryGeoIPCidr, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *RepositoryGeoIPRulesRequest) SetCidr(v RepositoryGeoIPCidr) {
	o.Cidr = v
}

// GetCountryCode returns the CountryCode field value
func (o *RepositoryGeoIPRulesRequest) GetCountryCode() RepositoryGeoIPCountryCode {
	if o == nil {
		var ret RepositoryGeoIPCountryCode
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *RepositoryGeoIPRulesRequest) GetCountryCodeOk() (*RepositoryGeoIPCountryCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *RepositoryGeoIPRulesRequest) SetCountryCode(v RepositoryGeoIPCountryCode) {
	o.CountryCode = v
}

func (o RepositoryGeoIPRulesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if true {
		toSerialize["country_code"] = o.CountryCode
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryGeoIPRulesRequest struct {
	value *RepositoryGeoIPRulesRequest
	isSet bool
}

func (v NullableRepositoryGeoIPRulesRequest) Get() *RepositoryGeoIPRulesRequest {
	return v.value
}

func (v *NullableRepositoryGeoIPRulesRequest) Set(val *RepositoryGeoIPRulesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryGeoIPRulesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryGeoIPRulesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryGeoIPRulesRequest(val *RepositoryGeoIPRulesRequest) *NullableRepositoryGeoIPRulesRequest {
	return &NullableRepositoryGeoIPRulesRequest{value: val, isSet: true}
}

func (v NullableRepositoryGeoIPRulesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryGeoIPRulesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
