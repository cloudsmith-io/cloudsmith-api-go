/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.703.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the VulnerabilityScanResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityScanResults{}

// VulnerabilityScanResults struct for VulnerabilityScanResults
type VulnerabilityScanResults struct {
	// The time this scan result was stored.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Do the results contain any known vulnerabilities?
	HasVulnerabilities *bool                `json:"has_vulnerabilities,omitempty"`
	Identifier         string               `json:"identifier"`
	MaxSeverity        *string              `json:"max_severity,omitempty"`
	NumVulnerabilities *int64               `json:"num_vulnerabilities,omitempty"`
	Package            PackageVulnerability `json:"package"`
	// Deprecated (23-05-15): Please use 'identifier' instead. Previously: A monotonically increasing number that identified a scan within a repository.
	ScanId               NullableInt64       `json:"scan_id"`
	Scans                []VulnerabilityScan `json:"scans"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityScanResults VulnerabilityScanResults

// NewVulnerabilityScanResults instantiates a new VulnerabilityScanResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityScanResults(identifier string, package_ PackageVulnerability, scanId NullableInt64, scans []VulnerabilityScan) *VulnerabilityScanResults {
	this := VulnerabilityScanResults{}
	this.Identifier = identifier
	var maxSeverity string = "Unknown"
	this.MaxSeverity = &maxSeverity
	this.Package = package_
	this.ScanId = scanId
	this.Scans = scans
	return &this
}

// NewVulnerabilityScanResultsWithDefaults instantiates a new VulnerabilityScanResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityScanResultsWithDefaults() *VulnerabilityScanResults {
	this := VulnerabilityScanResults{}
	var maxSeverity string = "Unknown"
	this.MaxSeverity = &maxSeverity
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VulnerabilityScanResults) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VulnerabilityScanResults) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VulnerabilityScanResults) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetHasVulnerabilities returns the HasVulnerabilities field value if set, zero value otherwise.
func (o *VulnerabilityScanResults) GetHasVulnerabilities() bool {
	if o == nil || IsNil(o.HasVulnerabilities) {
		var ret bool
		return ret
	}
	return *o.HasVulnerabilities
}

// GetHasVulnerabilitiesOk returns a tuple with the HasVulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetHasVulnerabilitiesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasVulnerabilities) {
		return nil, false
	}
	return o.HasVulnerabilities, true
}

// HasHasVulnerabilities returns a boolean if a field has been set.
func (o *VulnerabilityScanResults) HasHasVulnerabilities() bool {
	if o != nil && !IsNil(o.HasVulnerabilities) {
		return true
	}

	return false
}

// SetHasVulnerabilities gets a reference to the given bool and assigns it to the HasVulnerabilities field.
func (o *VulnerabilityScanResults) SetHasVulnerabilities(v bool) {
	o.HasVulnerabilities = &v
}

// GetIdentifier returns the Identifier field value
func (o *VulnerabilityScanResults) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *VulnerabilityScanResults) SetIdentifier(v string) {
	o.Identifier = v
}

// GetMaxSeverity returns the MaxSeverity field value if set, zero value otherwise.
func (o *VulnerabilityScanResults) GetMaxSeverity() string {
	if o == nil || IsNil(o.MaxSeverity) {
		var ret string
		return ret
	}
	return *o.MaxSeverity
}

// GetMaxSeverityOk returns a tuple with the MaxSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetMaxSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.MaxSeverity) {
		return nil, false
	}
	return o.MaxSeverity, true
}

// HasMaxSeverity returns a boolean if a field has been set.
func (o *VulnerabilityScanResults) HasMaxSeverity() bool {
	if o != nil && !IsNil(o.MaxSeverity) {
		return true
	}

	return false
}

// SetMaxSeverity gets a reference to the given string and assigns it to the MaxSeverity field.
func (o *VulnerabilityScanResults) SetMaxSeverity(v string) {
	o.MaxSeverity = &v
}

// GetNumVulnerabilities returns the NumVulnerabilities field value if set, zero value otherwise.
func (o *VulnerabilityScanResults) GetNumVulnerabilities() int64 {
	if o == nil || IsNil(o.NumVulnerabilities) {
		var ret int64
		return ret
	}
	return *o.NumVulnerabilities
}

// GetNumVulnerabilitiesOk returns a tuple with the NumVulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetNumVulnerabilitiesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumVulnerabilities) {
		return nil, false
	}
	return o.NumVulnerabilities, true
}

// HasNumVulnerabilities returns a boolean if a field has been set.
func (o *VulnerabilityScanResults) HasNumVulnerabilities() bool {
	if o != nil && !IsNil(o.NumVulnerabilities) {
		return true
	}

	return false
}

// SetNumVulnerabilities gets a reference to the given int64 and assigns it to the NumVulnerabilities field.
func (o *VulnerabilityScanResults) SetNumVulnerabilities(v int64) {
	o.NumVulnerabilities = &v
}

// GetPackage returns the Package field value
func (o *VulnerabilityScanResults) GetPackage() PackageVulnerability {
	if o == nil {
		var ret PackageVulnerability
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetPackageOk() (*PackageVulnerability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *VulnerabilityScanResults) SetPackage(v PackageVulnerability) {
	o.Package = v
}

// GetScanId returns the ScanId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *VulnerabilityScanResults) GetScanId() int64 {
	if o == nil || o.ScanId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ScanId.Get()
}

// GetScanIdOk returns a tuple with the ScanId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VulnerabilityScanResults) GetScanIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScanId.Get(), o.ScanId.IsSet()
}

// SetScanId sets field value
func (o *VulnerabilityScanResults) SetScanId(v int64) {
	o.ScanId.Set(&v)
}

// GetScans returns the Scans field value
func (o *VulnerabilityScanResults) GetScans() []VulnerabilityScan {
	if o == nil {
		var ret []VulnerabilityScan
		return ret
	}

	return o.Scans
}

// GetScansOk returns a tuple with the Scans field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScanResults) GetScansOk() ([]VulnerabilityScan, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scans, true
}

// SetScans sets field value
func (o *VulnerabilityScanResults) SetScans(v []VulnerabilityScan) {
	o.Scans = v
}

func (o VulnerabilityScanResults) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityScanResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.HasVulnerabilities) {
		toSerialize["has_vulnerabilities"] = o.HasVulnerabilities
	}
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.MaxSeverity) {
		toSerialize["max_severity"] = o.MaxSeverity
	}
	if !IsNil(o.NumVulnerabilities) {
		toSerialize["num_vulnerabilities"] = o.NumVulnerabilities
	}
	toSerialize["package"] = o.Package
	toSerialize["scan_id"] = o.ScanId.Get()
	toSerialize["scans"] = o.Scans

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VulnerabilityScanResults) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"package",
		"scan_id",
		"scans",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVulnerabilityScanResults := _VulnerabilityScanResults{}

	err = json.Unmarshal(data, &varVulnerabilityScanResults)

	if err != nil {
		return err
	}

	*o = VulnerabilityScanResults(varVulnerabilityScanResults)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "has_vulnerabilities")
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "max_severity")
		delete(additionalProperties, "num_vulnerabilities")
		delete(additionalProperties, "package")
		delete(additionalProperties, "scan_id")
		delete(additionalProperties, "scans")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityScanResults struct {
	value *VulnerabilityScanResults
	isSet bool
}

func (v NullableVulnerabilityScanResults) Get() *VulnerabilityScanResults {
	return v.value
}

func (v *NullableVulnerabilityScanResults) Set(val *VulnerabilityScanResults) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityScanResults) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityScanResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityScanResults(val *VulnerabilityScanResults) *NullableVulnerabilityScanResults {
	return &NullableVulnerabilityScanResults{value: val, isSet: true}
}

func (v NullableVulnerabilityScanResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityScanResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
