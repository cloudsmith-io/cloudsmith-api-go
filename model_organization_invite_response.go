/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"time"
)

// OrganizationInviteResponse struct for OrganizationInviteResponse
type OrganizationInviteResponse struct {
	// The email of the user to be invited.
	Email      *string        `json:"email,omitempty"`
	ExpiresAt  *time.Time     `json:"expires_at,omitempty"`
	Inviter    *string        `json:"inviter,omitempty"`
	InviterUrl NullableString `json:"inviter_url,omitempty"`
	Org        *string        `json:"org,omitempty"`
	// The role to be assigned to the invited user.
	Role     *string `json:"role,omitempty"`
	SlugPerm *string `json:"slug_perm,omitempty"`
	// The slug of the user to be invited.
	User    *string        `json:"user,omitempty"`
	UserUrl NullableString `json:"user_url,omitempty"`
}

// NewOrganizationInviteResponse instantiates a new OrganizationInviteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationInviteResponse() *OrganizationInviteResponse {
	this := OrganizationInviteResponse{}
	var role string = "Member"
	this.Role = &role
	return &this
}

// NewOrganizationInviteResponseWithDefaults instantiates a new OrganizationInviteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationInviteResponseWithDefaults() *OrganizationInviteResponse {
	this := OrganizationInviteResponse{}
	var role string = "Member"
	this.Role = &role
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganizationInviteResponse) SetEmail(v string) {
	o.Email = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetExpiresAt() time.Time {
	if o == nil || isNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasExpiresAt() bool {
	if o != nil && !isNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *OrganizationInviteResponse) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetInviter returns the Inviter field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetInviter() string {
	if o == nil || isNil(o.Inviter) {
		var ret string
		return ret
	}
	return *o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetInviterOk() (*string, bool) {
	if o == nil || isNil(o.Inviter) {
		return nil, false
	}
	return o.Inviter, true
}

// HasInviter returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasInviter() bool {
	if o != nil && !isNil(o.Inviter) {
		return true
	}

	return false
}

// SetInviter gets a reference to the given string and assigns it to the Inviter field.
func (o *OrganizationInviteResponse) SetInviter(v string) {
	o.Inviter = &v
}

// GetInviterUrl returns the InviterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationInviteResponse) GetInviterUrl() string {
	if o == nil || isNil(o.InviterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.InviterUrl.Get()
}

// GetInviterUrlOk returns a tuple with the InviterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInviteResponse) GetInviterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InviterUrl.Get(), o.InviterUrl.IsSet()
}

// HasInviterUrl returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasInviterUrl() bool {
	if o != nil && o.InviterUrl.IsSet() {
		return true
	}

	return false
}

// SetInviterUrl gets a reference to the given NullableString and assigns it to the InviterUrl field.
func (o *OrganizationInviteResponse) SetInviterUrl(v string) {
	o.InviterUrl.Set(&v)
}

// SetInviterUrlNil sets the value for InviterUrl to be an explicit nil
func (o *OrganizationInviteResponse) SetInviterUrlNil() {
	o.InviterUrl.Set(nil)
}

// UnsetInviterUrl ensures that no value is present for InviterUrl, not even an explicit nil
func (o *OrganizationInviteResponse) UnsetInviterUrl() {
	o.InviterUrl.Unset()
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetOrg() string {
	if o == nil || isNil(o.Org) {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetOrgOk() (*string, bool) {
	if o == nil || isNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasOrg() bool {
	if o != nil && !isNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *OrganizationInviteResponse) SetOrg(v string) {
	o.Org = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrganizationInviteResponse) SetRole(v string) {
	o.Role = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetSlugPerm() string {
	if o == nil || isNil(o.SlugPerm) {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetSlugPermOk() (*string, bool) {
	if o == nil || isNil(o.SlugPerm) {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasSlugPerm() bool {
	if o != nil && !isNil(o.SlugPerm) {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *OrganizationInviteResponse) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OrganizationInviteResponse) GetUser() string {
	if o == nil || isNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetUserOk() (*string, bool) {
	if o == nil || isNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *OrganizationInviteResponse) SetUser(v string) {
	o.User = &v
}

// GetUserUrl returns the UserUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationInviteResponse) GetUserUrl() string {
	if o == nil || isNil(o.UserUrl.Get()) {
		var ret string
		return ret
	}
	return *o.UserUrl.Get()
}

// GetUserUrlOk returns a tuple with the UserUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInviteResponse) GetUserUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserUrl.Get(), o.UserUrl.IsSet()
}

// HasUserUrl returns a boolean if a field has been set.
func (o *OrganizationInviteResponse) HasUserUrl() bool {
	if o != nil && o.UserUrl.IsSet() {
		return true
	}

	return false
}

// SetUserUrl gets a reference to the given NullableString and assigns it to the UserUrl field.
func (o *OrganizationInviteResponse) SetUserUrl(v string) {
	o.UserUrl.Set(&v)
}

// SetUserUrlNil sets the value for UserUrl to be an explicit nil
func (o *OrganizationInviteResponse) SetUserUrlNil() {
	o.UserUrl.Set(nil)
}

// UnsetUserUrl ensures that no value is present for UserUrl, not even an explicit nil
func (o *OrganizationInviteResponse) UnsetUserUrl() {
	o.UserUrl.Unset()
}

func (o OrganizationInviteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !isNil(o.Inviter) {
		toSerialize["inviter"] = o.Inviter
	}
	if o.InviterUrl.IsSet() {
		toSerialize["inviter_url"] = o.InviterUrl.Get()
	}
	if !isNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.SlugPerm) {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	if o.UserUrl.IsSet() {
		toSerialize["user_url"] = o.UserUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationInviteResponse struct {
	value *OrganizationInviteResponse
	isSet bool
}

func (v NullableOrganizationInviteResponse) Get() *OrganizationInviteResponse {
	return v.value
}

func (v *NullableOrganizationInviteResponse) Set(val *OrganizationInviteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationInviteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationInviteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationInviteResponse(val *OrganizationInviteResponse) *NullableOrganizationInviteResponse {
	return &NullableOrganizationInviteResponse{value: val, isSet: true}
}

func (v NullableOrganizationInviteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationInviteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
