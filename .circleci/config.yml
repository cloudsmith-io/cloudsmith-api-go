version: 2.1

parameters:
  run-workflow:
    type: boolean
    default: true
  release-version:
    type: string
    default: ""
    description: "Version to release (e.g., 1.2.3)"

jobs:
  update_version:
    description: "Update the API version in configuration files"
    docker:
      - image: cimg/go:1.19
    steps:
      - checkout
      - run:
          name: Update Version
          command: |
            if [ -z "<< pipeline.parameters.release-version >>" ]; then
              echo "Error: release-version parameter is required"
              exit 1
            fi
            
            # Update PKG_VERSION in bin/generate
            sed -i "s/PKG_VERSION=.*/PKG_VERSION=\"<< pipeline.parameters.release-version >>\"/" bin/generate
            
            echo "Updated PKG_VERSION to << pipeline.parameters.release-version >> in bin/generate"
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  generate_bindings:
    description: "Generate bindings with the updated version"
    docker:
      - image: cimg/go:1.19
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Generate Bindings
          command: |
            bin/generate
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  create_pr:
    description: "Create a PR with the updated bindings"
    docker:
      - image: cimg/base:2022.06
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install GitHub CLI
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
      - run:
          name: Create PR
          command: |
            # Get version from PKG_VERSION in bin/generate
            PKG_VERSION=$(grep -oP 'PKG_VERSION=\K[^"]+' bin/generate)
            
            # Set up git config
            git config --global user.email "ci@yourdomain.com"
            git config --global user.name "CircleCI Automation"
            
            # Create branch
            BRANCH_NAME="update-api-bindings-v${PKG_VERSION}"
            git checkout -b ${BRANCH_NAME}
            
            # Check if there are changes to commit
            if git diff --quiet; then
              echo "No changes detected. Skipping PR creation."
              exit 0
            fi
            
            # Commit changes
            git add .
            git commit -m "Update API bindings to version ${PKG_VERSION}"
            
            # Push to remote
            git push origin ${BRANCH_NAME}
            
            # Create PR
            gh pr create --title "Update API bindings to version ${PKG_VERSION}" --body "This PR updates the API bindings to version ${PKG_VERSION}." --repo owner/cloudsmith-api-go
          environment:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    description: "Create a Git tag and GitHub release"
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - run:
          name: Install GitHub CLI
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
      - run:
          name: Create Release
          command: |
            # Get version from PKG_VERSION in bin/generate
            PKG_VERSION=$(grep -oP 'PKG_VERSION=\K[^"]+' bin/generate)
            
            # Create and push tag
            git tag -a "v${PKG_VERSION}" -m "Release version ${PKG_VERSION}"
            git push origin "v${PKG_VERSION}"
            
            # Create GitHub release
            gh release create "v${PKG_VERSION}" --title "Release v${PKG_VERSION}" --notes "Release of version ${PKG_VERSION}" --repo owner/cloudsmith-api-go
          environment:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

workflows:
  version: 2
  release_api_bindings:
    when:
      and:
        - << pipeline.parameters.run-workflow >>
        - not:
            equal: [ "", << pipeline.parameters.release-version >> ]
    jobs:
      - update_version
      - generate_bindings:
          requires:
            - update_version
      - create_pr:
          requires:
            - generate_bindings
      - approve_pr:
          type: approval
          requires:
            - create_pr
      - create_release:
          requires:
            - approve_pr