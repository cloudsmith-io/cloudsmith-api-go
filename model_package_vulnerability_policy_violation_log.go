/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.768.2
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PackageVulnerabilityPolicyViolationLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageVulnerabilityPolicyViolationLog{}

// PackageVulnerabilityPolicyViolationLog struct for PackageVulnerabilityPolicyViolationLog
type PackageVulnerabilityPolicyViolationLog struct {
	EventAt                  *time.Time                     `json:"event_at,omitempty"`
	Package                  PackageVulnerability           `json:"package"`
	Policy                   NestedVulnerabilityPolicy      `json:"policy"`
	Reasons                  []string                       `json:"reasons"`
	VulnerabilityScanResults NestedVulnerabilityScanResults `json:"vulnerability_scan_results"`
	AdditionalProperties     map[string]interface{}
}

type _PackageVulnerabilityPolicyViolationLog PackageVulnerabilityPolicyViolationLog

// NewPackageVulnerabilityPolicyViolationLog instantiates a new PackageVulnerabilityPolicyViolationLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageVulnerabilityPolicyViolationLog(package_ PackageVulnerability, policy NestedVulnerabilityPolicy, reasons []string, vulnerabilityScanResults NestedVulnerabilityScanResults) *PackageVulnerabilityPolicyViolationLog {
	this := PackageVulnerabilityPolicyViolationLog{}
	this.Package = package_
	this.Policy = policy
	this.Reasons = reasons
	this.VulnerabilityScanResults = vulnerabilityScanResults
	return &this
}

// NewPackageVulnerabilityPolicyViolationLogWithDefaults instantiates a new PackageVulnerabilityPolicyViolationLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageVulnerabilityPolicyViolationLogWithDefaults() *PackageVulnerabilityPolicyViolationLog {
	this := PackageVulnerabilityPolicyViolationLog{}
	return &this
}

// GetEventAt returns the EventAt field value if set, zero value otherwise.
func (o *PackageVulnerabilityPolicyViolationLog) GetEventAt() time.Time {
	if o == nil || IsNil(o.EventAt) {
		var ret time.Time
		return ret
	}
	return *o.EventAt
}

// GetEventAtOk returns a tuple with the EventAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageVulnerabilityPolicyViolationLog) GetEventAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EventAt) {
		return nil, false
	}
	return o.EventAt, true
}

// HasEventAt returns a boolean if a field has been set.
func (o *PackageVulnerabilityPolicyViolationLog) HasEventAt() bool {
	if o != nil && !IsNil(o.EventAt) {
		return true
	}

	return false
}

// SetEventAt gets a reference to the given time.Time and assigns it to the EventAt field.
func (o *PackageVulnerabilityPolicyViolationLog) SetEventAt(v time.Time) {
	o.EventAt = &v
}

// GetPackage returns the Package field value
func (o *PackageVulnerabilityPolicyViolationLog) GetPackage() PackageVulnerability {
	if o == nil {
		var ret PackageVulnerability
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *PackageVulnerabilityPolicyViolationLog) GetPackageOk() (*PackageVulnerability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *PackageVulnerabilityPolicyViolationLog) SetPackage(v PackageVulnerability) {
	o.Package = v
}

// GetPolicy returns the Policy field value
func (o *PackageVulnerabilityPolicyViolationLog) GetPolicy() NestedVulnerabilityPolicy {
	if o == nil {
		var ret NestedVulnerabilityPolicy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *PackageVulnerabilityPolicyViolationLog) GetPolicyOk() (*NestedVulnerabilityPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *PackageVulnerabilityPolicyViolationLog) SetPolicy(v NestedVulnerabilityPolicy) {
	o.Policy = v
}

// GetReasons returns the Reasons field value
func (o *PackageVulnerabilityPolicyViolationLog) GetReasons() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value
// and a boolean to check if the value has been set.
func (o *PackageVulnerabilityPolicyViolationLog) GetReasonsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reasons, true
}

// SetReasons sets field value
func (o *PackageVulnerabilityPolicyViolationLog) SetReasons(v []string) {
	o.Reasons = v
}

// GetVulnerabilityScanResults returns the VulnerabilityScanResults field value
func (o *PackageVulnerabilityPolicyViolationLog) GetVulnerabilityScanResults() NestedVulnerabilityScanResults {
	if o == nil {
		var ret NestedVulnerabilityScanResults
		return ret
	}

	return o.VulnerabilityScanResults
}

// GetVulnerabilityScanResultsOk returns a tuple with the VulnerabilityScanResults field value
// and a boolean to check if the value has been set.
func (o *PackageVulnerabilityPolicyViolationLog) GetVulnerabilityScanResultsOk() (*NestedVulnerabilityScanResults, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VulnerabilityScanResults, true
}

// SetVulnerabilityScanResults sets field value
func (o *PackageVulnerabilityPolicyViolationLog) SetVulnerabilityScanResults(v NestedVulnerabilityScanResults) {
	o.VulnerabilityScanResults = v
}

func (o PackageVulnerabilityPolicyViolationLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageVulnerabilityPolicyViolationLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventAt) {
		toSerialize["event_at"] = o.EventAt
	}
	toSerialize["package"] = o.Package
	toSerialize["policy"] = o.Policy
	toSerialize["reasons"] = o.Reasons
	toSerialize["vulnerability_scan_results"] = o.VulnerabilityScanResults

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PackageVulnerabilityPolicyViolationLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"package",
		"policy",
		"reasons",
		"vulnerability_scan_results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPackageVulnerabilityPolicyViolationLog := _PackageVulnerabilityPolicyViolationLog{}

	err = json.Unmarshal(data, &varPackageVulnerabilityPolicyViolationLog)

	if err != nil {
		return err
	}

	*o = PackageVulnerabilityPolicyViolationLog(varPackageVulnerabilityPolicyViolationLog)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "event_at")
		delete(additionalProperties, "package")
		delete(additionalProperties, "policy")
		delete(additionalProperties, "reasons")
		delete(additionalProperties, "vulnerability_scan_results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePackageVulnerabilityPolicyViolationLog struct {
	value *PackageVulnerabilityPolicyViolationLog
	isSet bool
}

func (v NullablePackageVulnerabilityPolicyViolationLog) Get() *PackageVulnerabilityPolicyViolationLog {
	return v.value
}

func (v *NullablePackageVulnerabilityPolicyViolationLog) Set(val *PackageVulnerabilityPolicyViolationLog) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageVulnerabilityPolicyViolationLog) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageVulnerabilityPolicyViolationLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageVulnerabilityPolicyViolationLog(val *PackageVulnerabilityPolicyViolationLog) *NullablePackageVulnerabilityPolicyViolationLog {
	return &NullablePackageVulnerabilityPolicyViolationLog{value: val, isSet: true}
}

func (v NullablePackageVulnerabilityPolicyViolationLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageVulnerabilityPolicyViolationLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
