/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.121.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// OrgsInvitesCreate struct for OrgsInvitesCreate
type OrgsInvitesCreate struct {
	// None
	Email *string `json:"email,omitempty"`
	// None
	Inviter *string `json:"inviter,omitempty"`
	// None
	Role *string `json:"role,omitempty"`
	// None
	SlugPerm *string `json:"slug_perm,omitempty"`
	// None
	User *string `json:"user,omitempty"`
}

// NewOrgsInvitesCreate instantiates a new OrgsInvitesCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsInvitesCreate() *OrgsInvitesCreate {
	this := OrgsInvitesCreate{}
	return &this
}

// NewOrgsInvitesCreateWithDefaults instantiates a new OrgsInvitesCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsInvitesCreateWithDefaults() *OrgsInvitesCreate {
	this := OrgsInvitesCreate{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgsInvitesCreate) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInvitesCreate) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgsInvitesCreate) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgsInvitesCreate) SetEmail(v string) {
	o.Email = &v
}

// GetInviter returns the Inviter field value if set, zero value otherwise.
func (o *OrgsInvitesCreate) GetInviter() string {
	if o == nil || o.Inviter == nil {
		var ret string
		return ret
	}
	return *o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInvitesCreate) GetInviterOk() (*string, bool) {
	if o == nil || o.Inviter == nil {
		return nil, false
	}
	return o.Inviter, true
}

// HasInviter returns a boolean if a field has been set.
func (o *OrgsInvitesCreate) HasInviter() bool {
	if o != nil && o.Inviter != nil {
		return true
	}

	return false
}

// SetInviter gets a reference to the given string and assigns it to the Inviter field.
func (o *OrgsInvitesCreate) SetInviter(v string) {
	o.Inviter = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrgsInvitesCreate) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInvitesCreate) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrgsInvitesCreate) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrgsInvitesCreate) SetRole(v string) {
	o.Role = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *OrgsInvitesCreate) GetSlugPerm() string {
	if o == nil || o.SlugPerm == nil {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInvitesCreate) GetSlugPermOk() (*string, bool) {
	if o == nil || o.SlugPerm == nil {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *OrgsInvitesCreate) HasSlugPerm() bool {
	if o != nil && o.SlugPerm != nil {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *OrgsInvitesCreate) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OrgsInvitesCreate) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInvitesCreate) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OrgsInvitesCreate) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *OrgsInvitesCreate) SetUser(v string) {
	o.User = &v
}

func (o OrgsInvitesCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Inviter != nil {
		toSerialize["inviter"] = o.Inviter
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.SlugPerm != nil {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableOrgsInvitesCreate struct {
	value *OrgsInvitesCreate
	isSet bool
}

func (v NullableOrgsInvitesCreate) Get() *OrgsInvitesCreate {
	return v.value
}

func (v *NullableOrgsInvitesCreate) Set(val *OrgsInvitesCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsInvitesCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsInvitesCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsInvitesCreate(val *OrgsInvitesCreate) *NullableOrgsInvitesCreate {
	return &NullableOrgsInvitesCreate{value: val, isSet: true}
}

func (v NullableOrgsInvitesCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsInvitesCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
