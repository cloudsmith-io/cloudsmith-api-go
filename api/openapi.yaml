openapi: 3.0.1
info:
  contact:
    email: support@cloudsmith.io
    name: Cloudsmith Support
    url: https://help.cloudsmith.io
  description: The API to the Cloudsmith Service
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://help.cloudsmith.io/docs/terms-and-conditions
  title: Cloudsmith API
  version: 1.121.3
externalDocs:
  description: Find out more info at the Cloudsmith Help Website
  url: https://help.cloudsmith.io
servers:
- url: https://api.cloudsmith.io/v1
paths:
  /audit-log/{owner}/:
    get:
      description: Lists audit log entries for a specific namespace.
      operationId: audit-log_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: A search term for querying events, actors, or timestamps of log
          records.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/NamespaceAuditLog'
                title: NamespaceAuditLogList
                type: array
          description: Retrieved the list of audit log entries
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Lists audit log entries for a specific namespace.
      tags:
      - audit-log
  /audit-log/{owner}/{repo}/:
    get:
      description: Lists audit log entries for a specific repository.
      operationId: audit-log_list_0
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: A search term for querying events, actors, or timestamps of log
          records.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryAuditLog'
                title: RepositoryAuditLogList
                type: array
          description: Retrieved the list of audit log entries
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Lists audit log entries for a specific repository.
      tags:
      - audit-log
  /badges/version/{owner}/{repo}/{package_format}/{package_name}/{package_version}/{package_identifiers}/:
    get:
      description: Get latest package version for a package or package group.
      operationId: badges_version_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: package_format
        required: true
        schema:
          type: string
      - in: path
        name: package_name
        required: true
        schema:
          type: string
      - in: path
        name: package_version
        required: true
        schema:
          type: string
      - in: path
        name: package_identifiers
        required: true
        schema:
          type: string
      - description: Badge token to authenticate for private packages
        in: query
        name: badge_token
        schema:
          type: string
      - description: Override the shields.io badge cacheSeconds value.
        in: query
        name: cacheSeconds
        schema:
          type: string
      - description: Override the shields.io badge color value.
        in: query
        name: color
        schema:
          type: string
      - description: Override the shields.io badge label value.
        in: query
        name: label
        schema:
          type: string
      - description: Override the shields.io badge labelColor value.
        in: query
        name: labelColor
        schema:
          type: string
      - description: Override the shields.io badge logoColor value.
        in: query
        name: logoColor
        schema:
          type: string
      - description: Override the shields.io badge logoWidth value.
        in: query
        name: logoWidth
        schema:
          type: string
      - description: If true, badge will be rendered
        in: query
        name: render
        schema:
          type: boolean
      - description: If true, a shields response will be generated
        in: query
        name: shields
        schema:
          type: boolean
      - description: If true, for latest version badges a '(latest)' suffix is added
        in: query
        name: show_latest
        schema:
          type: boolean
      - description: Override the shields.io badge style value.
        in: query
        name: style
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get latest package version for a package or package group.
      tags:
      - badges
  /distros/:
    get:
      description: Get a list of all supported distributions.
      operationId: distros_list
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Distribution'
                title: DistributionList
                type: array
          description: Available package formats retrieved
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all supported distributions.
      tags:
      - distros
  /distros/{slug}/:
    get:
      description: View for viewing/listing distributions.
      operationId: distros_read
      parameters:
      - in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Distribution'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: View for viewing/listing distributions.
      tags:
      - distros
  /entitlements/{owner}/{repo}/:
    get:
      description: Get a list of all entitlements in a repository.
      operationId: entitlements_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryToken'
                title: RepositoryTokenList
                type: array
          description: Retrieved the list of entitlement tokens
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all entitlements in a repository.
      tags:
      - entitlements
    post:
      description: Create a specific entitlement in a repository.
      operationId: entitlements_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/EntitlementsCreate'
        content:
          application/json:
            schema:
              example:
                limit_date_range_to: limit_date_range_to
                metadata: '{}'
                is_active: true
                limit_bandwidth_unit: Byte
                scheduled_reset_at: scheduled_reset_at
                limit_bandwidth: 0
                limit_num_clients: 6
                limit_package_query: limit_package_query
                limit_path_query: limit_path_query
                token: token
                name: name
                limit_date_range_from: limit_date_range_from
                limit_num_downloads: 1
                eula_required: true
                scheduled_reset_period: Never Reset
              properties:
                eula_required:
                  description: If checked, a EULA acceptance is required for this
                    token.
                  type: boolean
                is_active:
                  description: If enabled, the token will allow downloads based on
                    configured restrictions (if any).
                  type: boolean
                limit_bandwidth:
                  description: 'The maximum download bandwidth allowed for the token.
                    Values are expressed as the selected unit of bandwidth. Please
                    note that since downloads are calculated asynchronously (after
                    the download happens), the limit may not be imposed immediately
                    but at a later point. '
                  type: integer
                limit_bandwidth_unit:
                  description: None
                  enum:
                  - Byte
                  - Kilobyte
                  - Megabyte
                  - Gigabyte
                  - Terabyte
                  - Petabyte
                  - Exabyte
                  - Zettabyte
                  - Yottabyte
                  type: string
                limit_date_range_from:
                  description: The starting date/time the token is allowed to be used
                    from.
                  type: string
                limit_date_range_to:
                  description: The ending date/time the token is allowed to be used
                    until.
                  type: string
                limit_num_clients:
                  description: The maximum number of unique clients allowed for the
                    token. Please note that since clients are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_num_downloads:
                  description: The maximum number of downloads allowed for the token.
                    Please note that since downloads are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_package_query:
                  description: The package-based search query to apply to restrict
                    downloads to. This uses the same syntax as the standard search
                    used for repositories, and also supports boolean logic operators
                    such as OR/AND/NOT and parentheses for grouping. This will still
                    allow access to non-package files, such as metadata.
                  type: string
                limit_path_query:
                  description: The path-based search query to apply to restrict downloads
                    to. This supports boolean logic operators such as OR/AND/NOT and
                    parentheses for grouping. The path evaluated does not include
                    the domain name, the namespace, the entitlement code used, the
                    package format, etc. and it always starts with a forward slash.
                  type: string
                metadata:
                  description: None
                  properties: {}
                  type: object
                name:
                  description: None
                  type: string
                scheduled_reset_at:
                  description: The time at which the scheduled reset period has elapsed
                    and the token limits were automatically reset to zero.
                  type: string
                scheduled_reset_period:
                  description: None
                  enum:
                  - Never Reset
                  - Daily
                  - Weekly
                  - Fortnightly
                  - Monthly
                  - Bi-Monthly
                  - Quarterly
                  - Every 6 months
                  - Annual
                  type: string
                token:
                  description: None
                  type: string
              required:
              - name
              title: EntitlementsCreate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryToken'
          description: Created the specified entitlement
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a specific entitlement in a repository.
      tags:
      - entitlements
      x-codegen-request-body-name: data
  /entitlements/{owner}/{repo}/sync/:
    post:
      description: Synchronise tokens from a source repository.
      operationId: entitlements_sync
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/EntitlementsSync'
        content:
          application/json:
            schema:
              example:
                source: source
              properties:
                source:
                  description: The source repository slug (in the same owner namespace).
                  type: string
              required:
              - source
              title: EntitlementsSync
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryTokenSync'
          description: The tokens have been synchronised from the source repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Synchronise tokens from a source repository.
      tags:
      - entitlements
      x-codegen-request-body-name: data
  /entitlements/{owner}/{repo}/{identifier}/:
    delete:
      description: Delete a specific entitlement in a repository.
      operationId: entitlements_delete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Soft-deleted the specified entitlement token successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The entitlement cannot be deleted
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a specific entitlement in a repository.
      tags:
      - entitlements
    get:
      description: Get a specific entitlement in a repository.
      operationId: entitlements_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryToken'
          description: Retrieved the specified entitlement
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a specific entitlement in a repository.
      tags:
      - entitlements
    patch:
      description: Update a specific entitlement in a repository.
      operationId: entitlements_partial_update
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/EntitlementsPartialUpdate'
        content:
          application/json:
            schema:
              example:
                limit_date_range_to: limit_date_range_to
                metadata: '{}'
                is_active: true
                limit_bandwidth_unit: Byte
                scheduled_reset_at: scheduled_reset_at
                limit_bandwidth: 0
                limit_num_clients: 6
                limit_package_query: limit_package_query
                limit_path_query: limit_path_query
                token: token
                name: name
                limit_date_range_from: limit_date_range_from
                limit_num_downloads: 1
                eula_required: true
                scheduled_reset_period: Never Reset
              properties:
                eula_required:
                  description: If checked, a EULA acceptance is required for this
                    token.
                  type: boolean
                is_active:
                  description: If enabled, the token will allow downloads based on
                    configured restrictions (if any).
                  type: boolean
                limit_bandwidth:
                  description: 'The maximum download bandwidth allowed for the token.
                    Values are expressed as the selected unit of bandwidth. Please
                    note that since downloads are calculated asynchronously (after
                    the download happens), the limit may not be imposed immediately
                    but at a later point. '
                  type: integer
                limit_bandwidth_unit:
                  description: None
                  enum:
                  - Byte
                  - Kilobyte
                  - Megabyte
                  - Gigabyte
                  - Terabyte
                  - Petabyte
                  - Exabyte
                  - Zettabyte
                  - Yottabyte
                  type: string
                limit_date_range_from:
                  description: The starting date/time the token is allowed to be used
                    from.
                  type: string
                limit_date_range_to:
                  description: The ending date/time the token is allowed to be used
                    until.
                  type: string
                limit_num_clients:
                  description: The maximum number of unique clients allowed for the
                    token. Please note that since clients are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_num_downloads:
                  description: The maximum number of downloads allowed for the token.
                    Please note that since downloads are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_package_query:
                  description: The package-based search query to apply to restrict
                    downloads to. This uses the same syntax as the standard search
                    used for repositories, and also supports boolean logic operators
                    such as OR/AND/NOT and parentheses for grouping. This will still
                    allow access to non-package files, such as metadata.
                  type: string
                limit_path_query:
                  description: The path-based search query to apply to restrict downloads
                    to. This supports boolean logic operators such as OR/AND/NOT and
                    parentheses for grouping. The path evaluated does not include
                    the domain name, the namespace, the entitlement code used, the
                    package format, etc. and it always starts with a forward slash.
                  type: string
                metadata:
                  description: None
                  properties: {}
                  type: object
                name:
                  description: None
                  type: string
                scheduled_reset_at:
                  description: The time at which the scheduled reset period has elapsed
                    and the token limits were automatically reset to zero.
                  type: string
                scheduled_reset_period:
                  description: None
                  enum:
                  - Never Reset
                  - Daily
                  - Weekly
                  - Fortnightly
                  - Monthly
                  - Bi-Monthly
                  - Quarterly
                  - Every 6 months
                  - Annual
                  type: string
                token:
                  description: None
                  type: string
              title: EntitlementsPartialUpdate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryToken'
          description: Updated the specified entitlement
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The entitlement cannot be edited
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Update a specific entitlement in a repository.
      tags:
      - entitlements
      x-codegen-request-body-name: data
  /entitlements/{owner}/{repo}/{identifier}/disable/:
    post:
      description: Disable an entitlement token in a repository.
      operationId: entitlements_disable
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The entitlement token has been disabled
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Disable an entitlement token in a repository.
      tags:
      - entitlements
  /entitlements/{owner}/{repo}/{identifier}/enable/:
    post:
      description: Enable an entitlement token in a repository.
      operationId: entitlements_enable
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The entitlement token has been enabled
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Enable an entitlement token in a repository.
      tags:
      - entitlements
  /entitlements/{owner}/{repo}/{identifier}/refresh/:
    post:
      description: Refresh an entitlement token in a repository.
      operationId: entitlements_refresh
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/EntitlementsRefresh'
        content:
          application/json:
            schema:
              example:
                limit_date_range_to: limit_date_range_to
                metadata: '{}'
                is_active: true
                limit_bandwidth_unit: Byte
                scheduled_reset_at: scheduled_reset_at
                limit_bandwidth: 0
                limit_num_clients: 6
                limit_package_query: limit_package_query
                limit_path_query: limit_path_query
                token: token
                limit_date_range_from: limit_date_range_from
                limit_num_downloads: 1
                eula_required: true
                scheduled_reset_period: Never Reset
              properties:
                eula_required:
                  description: If checked, a EULA acceptance is required for this
                    token.
                  type: boolean
                is_active:
                  description: If enabled, the token will allow downloads based on
                    configured restrictions (if any).
                  type: boolean
                limit_bandwidth:
                  description: 'The maximum download bandwidth allowed for the token.
                    Values are expressed as the selected unit of bandwidth. Please
                    note that since downloads are calculated asynchronously (after
                    the download happens), the limit may not be imposed immediately
                    but at a later point. '
                  type: integer
                limit_bandwidth_unit:
                  description: None
                  enum:
                  - Byte
                  - Kilobyte
                  - Megabyte
                  - Gigabyte
                  - Terabyte
                  - Petabyte
                  - Exabyte
                  - Zettabyte
                  - Yottabyte
                  type: string
                limit_date_range_from:
                  description: The starting date/time the token is allowed to be used
                    from.
                  type: string
                limit_date_range_to:
                  description: The ending date/time the token is allowed to be used
                    until.
                  type: string
                limit_num_clients:
                  description: The maximum number of unique clients allowed for the
                    token. Please note that since clients are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_num_downloads:
                  description: The maximum number of downloads allowed for the token.
                    Please note that since downloads are calculated asynchronously
                    (after the download happens), the limit may not be imposed immediately
                    but at a later point.
                  type: integer
                limit_package_query:
                  description: The package-based search query to apply to restrict
                    downloads to. This uses the same syntax as the standard search
                    used for repositories, and also supports boolean logic operators
                    such as OR/AND/NOT and parentheses for grouping. This will still
                    allow access to non-package files, such as metadata.
                  type: string
                limit_path_query:
                  description: The path-based search query to apply to restrict downloads
                    to. This supports boolean logic operators such as OR/AND/NOT and
                    parentheses for grouping. The path evaluated does not include
                    the domain name, the namespace, the entitlement code used, the
                    package format, etc. and it always starts with a forward slash.
                  type: string
                metadata:
                  description: None
                  properties: {}
                  type: object
                scheduled_reset_at:
                  description: The time at which the scheduled reset period has elapsed
                    and the token limits were automatically reset to zero.
                  type: string
                scheduled_reset_period:
                  description: None
                  enum:
                  - Never Reset
                  - Daily
                  - Weekly
                  - Fortnightly
                  - Monthly
                  - Bi-Monthly
                  - Quarterly
                  - Every 6 months
                  - Annual
                  type: string
                token:
                  description: None
                  type: string
              title: EntitlementsRefresh
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryTokenRefresh'
          description: The entitlement token has been refreshed
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Refresh an entitlement token in a repository.
      tags:
      - entitlements
      x-codegen-request-body-name: data
  /entitlements/{owner}/{repo}/{identifier}/reset/:
    post:
      description: Reset the statistics for an entitlement token in a repository.
      operationId: entitlements_reset
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: Show entitlement token strings in results
        in: query
        name: show_tokens
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The entitlement token statistics have been reset
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Reset the statistics for an entitlement token in a repository.
      tags:
      - entitlements
  /files/{owner}/{repo}/:
    post:
      description: Request URL(s) to upload new package file upload(s) to.
      operationId: files_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FilesCreate'
        content:
          application/json:
            schema:
              example:
                sha256_checksum: sha256_checksum
                filename: filename
                method: put_parts
                md5_checksum: md5_checksum
              properties:
                filename:
                  description: Filename for the package file upload.
                  type: string
                md5_checksum:
                  description: MD5 checksum for a POST-based package file upload.
                  type: string
                method:
                  description: The method to use for package file upload.
                  enum:
                  - put_parts
                  - put
                  - post
                  - presigned
                  - unsigned_put
                  type: string
                sha256_checksum:
                  description: SHA256 checksum for a PUT-based package file upload.
                  type: string
              required:
              - filename
              title: FilesCreate
              type: object
        required: false
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageFileUpload'
          description: The upload request was accepted
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Request URL(s) to upload new package file upload(s) to.
      tags:
      - files
      x-codegen-request-body-name: data
  /files/{owner}/{repo}/validate/:
    post:
      description: Validate parameters used for create.
      operationId: files_validate
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FilesValidate'
        content:
          application/json:
            schema:
              example:
                sha256_checksum: sha256_checksum
                filename: filename
                method: put_parts
                md5_checksum: md5_checksum
              properties:
                filename:
                  description: Filename for the package file upload.
                  type: string
                md5_checksum:
                  description: MD5 checksum for a POST-based package file upload.
                  type: string
                method:
                  description: The method to use for package file upload.
                  enum:
                  - put_parts
                  - put
                  - post
                  - presigned
                  - unsigned_put
                  type: string
                sha256_checksum:
                  description: SHA256 checksum for a PUT-based package file upload.
                  type: string
              required:
              - filename
              title: FilesValidate
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters used for create.
      tags:
      - files
      x-codegen-request-body-name: data
  /files/{owner}/{repo}/{identifier}/abort/:
    post:
      description: Abort a multipart file upload.
      operationId: files_abort
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FilesAbort'
        content:
          application/json:
            schema:
              example:
                sha256_checksum: sha256_checksum
                filename: filename
                method: put_parts
                md5_checksum: md5_checksum
              properties:
                filename:
                  description: Filename for the package file upload.
                  type: string
                md5_checksum:
                  description: MD5 checksum for a POST-based package file upload.
                  type: string
                method:
                  description: The method to use for package file upload.
                  enum:
                  - put_parts
                  - put
                  - post
                  - presigned
                  - unsigned_put
                  type: string
                sha256_checksum:
                  description: SHA256 checksum for a PUT-based package file upload.
                  type: string
              required:
              - filename
              title: FilesAbort
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: The multipart upload was aborted successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The multipart upload could not be aborted
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner), repository or upload file not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Abort a multipart file upload.
      tags:
      - files
      x-codegen-request-body-name: data
  /files/{owner}/{repo}/{identifier}/complete/:
    post:
      description: Complete a multipart file upload.
      operationId: files_complete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FilesComplete'
        content:
          application/json:
            schema:
              example:
                sha256_checksum: sha256_checksum
                filename: filename
                method: put_parts
                md5_checksum: md5_checksum
              properties:
                filename:
                  description: Filename for the package file upload.
                  type: string
                md5_checksum:
                  description: MD5 checksum for a POST-based package file upload.
                  type: string
                method:
                  description: The method to use for package file upload.
                  enum:
                  - put_parts
                  - put
                  - post
                  - presigned
                  - unsigned_put
                  type: string
                sha256_checksum:
                  description: SHA256 checksum for a PUT-based package file upload.
                  type: string
              required:
              - filename
              title: FilesComplete
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageFileUpload'
          description: The multipart upload was completed successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The multipart upload could not be completed
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner), repository or upload file not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Complete a multipart file upload.
      tags:
      - files
      x-codegen-request-body-name: data
  /files/{owner}/{repo}/{identifier}/info/:
    get:
      description: Get upload information to perform a multipart file upload.
      operationId: files_info
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: The filename of the file being uploaded
        in: query
        name: filename
        required: true
        schema:
          type: string
      - description: The part number to be uploaded next
        in: query
        name: part_number
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageFilePartsUpload'
          description: Information for multipart uploaded retrieved successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The provided upload file was not a multipart upload
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner), repository or upload file not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get upload information to perform a multipart file upload.
      tags:
      - files
  /formats/:
    get:
      description: Get a list of all supported package formats.
      operationId: formats_list
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Format'
                title: FormatList
                type: array
          description: Available package formats retrieved
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all supported package formats.
      tags:
      - formats
  /formats/{slug}/:
    get:
      description: Get a specific supported package format.
      operationId: formats_read
      parameters:
      - in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Format'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a specific supported package format.
      tags:
      - formats
  /metrics/entitlements/{owner}/:
    get:
      description: View for listing entitlement token metrics, across an account.
      operationId: metrics_entitlements_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: Include metrics upto and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: finish
        schema:
          type: string
      - description: Include metrics from and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: start
        schema:
          type: string
      - description: A comma seperated list of tokens (slug perm) to include in the
          results.
        in: query
        name: tokens
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntitlementUsageMetrics'
          description: Retrieved the metrics for entitlements
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: View for listing entitlement token metrics, across an account.
      tags:
      - metrics
  /metrics/entitlements/{owner}/{repo}/:
    get:
      description: View for listing entitlement token metrics, for a repository.
      operationId: metrics_entitlements_list_0
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: Include metrics upto and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: finish
        schema:
          type: string
      - description: Include metrics from and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: start
        schema:
          type: string
      - description: A comma seperated list of tokens (slug perm) to include in the
          results.
        in: query
        name: tokens
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntitlementUsageMetrics'
          description: Retrieved the metrics for entitlements
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: View for listing entitlement token metrics, for a repository.
      tags:
      - metrics
  /metrics/packages/{owner}/{repo}/:
    get:
      description: View for listing package usage metrics, for a repository.
      operationId: metrics_packages_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: Include metrics upto and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: finish
        schema:
          type: string
      - description: A comma seperated list of packages (slug perm) to include in
          the results.
        in: query
        name: packages
        schema:
          type: string
      - description: Include metrics from and including this UTC date or UTC datetime.
          For example '2020-12-31' or '2021-12-13T00:00:00Z'.
        in: query
        name: start
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageUsageMetrics'
          description: Retrieved the metrics for packages
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: View for listing package usage metrics, for a repository.
      tags:
      - metrics
  /namespaces/:
    get:
      description: Get a list of all namespaces the user belongs to.
      operationId: namespaces_list
      parameters:
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Namespace'
                title: NamespaceList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all namespaces the user belongs to.
      tags:
      - namespaces
  /namespaces/{slug}/:
    get:
      description: Views for working with namespaces.
      operationId: namespaces_read
      parameters:
      - in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Namespace'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Views for working with namespaces.
      tags:
      - namespaces
  /orgs/:
    get:
      description: Get a list of all the organizations you are associated with.
      operationId: orgs_list
      parameters:
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                title: OrganizationList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all the organizations you are associated with.
      tags:
      - orgs
  /orgs/{org}/:
    get:
      description: Get the details for the specific organization.
      operationId: orgs_read
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the details for the specific organization.
      tags:
      - orgs
  /orgs/{org}/invites/:
    get:
      description: Get a list of all invites for an organization.
      operationId: orgs_invites_list
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationInvite'
                title: OrganizationInviteList
                type: array
          description: Retrieved the list of organization invites
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Organization invites not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all invites for an organization.
      tags:
      - orgs
    post:
      description: Create an organization invite for a specific user
      operationId: orgs_invites_create
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OrgsInvitesCreate'
        content:
          application/json:
            schema:
              example:
                role: Owner
                inviter: inviter
                slug_perm: slug_perm
                user: user
                email: email
              properties:
                email:
                  description: None
                  type: string
                inviter:
                  description: None
                  type: string
                role:
                  description: None
                  enum:
                  - Owner
                  - Manager
                  - Member
                  - Collaborator
                  type: string
                slug_perm:
                  description: None
                  type: string
                user:
                  description: None
                  type: string
              title: OrgsInvitesCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: Invite sent
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The invite cannot be created
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create an organization invite for a specific user
      tags:
      - orgs
      x-codegen-request-body-name: data
  /orgs/{org}/invites/{slug_perm}/:
    delete:
      description: Delete a specific organization invite
      operationId: orgs_invites_delete
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted the organization invite successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The organization invite cannot be deleted
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a specific organization invite
      tags:
      - orgs
  /orgs/{org}/invites/{slug_perm}/extend/:
    post:
      description: Extend an organization invite.
      operationId: orgs_invites_extend
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OrgsInvitesExtend'
        content:
          application/json:
            schema:
              example:
                role: Owner
                inviter: inviter
                user: user
                email: email
              properties:
                email:
                  description: None
                  type: string
                inviter:
                  description: None
                  type: string
                role:
                  description: None
                  enum:
                  - Owner
                  - Manager
                  - Member
                  - Collaborator
                  type: string
                user:
                  description: None
                  type: string
              title: OrgsInvitesExtend
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationInviteExtend'
          description: The invite has been extended
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Extend an organization invite.
      tags:
      - orgs
      x-codegen-request-body-name: data
  /orgs/{org}/members/:
    get:
      description: Get the details for all organization members.
      operationId: orgs_members_list
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationMembership'
                title: OrganizationMembershipList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the details for all organization members.
      tags:
      - orgs
  /orgs/{org}/members/{member}/:
    get:
      description: Get the details for a specific organization member.
      operationId: orgs_members_read
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: member
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationMembership'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the details for a specific organization member.
      tags:
      - orgs
  /orgs/{org}/members/{member}/remove/:
    get:
      description: Removes a member from the organization.
      operationId: orgs_members_remove
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: member
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationMembership'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Removes a member from the organization.
      tags:
      - orgs
  /orgs/{org}/saml-group-sync/:
    get:
      description: Get the details of all SAML Group Sync mapping within an organization.
      operationId: orgs_saml-group-sync_list
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationGroupSync'
                title: OrganizationGroupSyncList
                type: array
          description: Retrived the list of all SAML Group Sync mappings for this
            org
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Org namespace not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the details of all SAML Group Sync mapping within an organization.
      tags:
      - orgs
    post:
      description: Create a new SAML Group Sync mapping within an organization.
      operationId: orgs_saml-group-sync_create
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OrgsSaml_group_syncCreate'
        content:
          application/json:
            schema:
              properties:
                idp_key:
                  description: None
                  type: string
                idp_value:
                  description: None
                  type: string
                organization:
                  description: None
                  type: string
                role:
                  description: "\n       User role within the team.\n\n        A `manager`\
                    \ is capable of adding/removing others to/from the team, and\n\
                    \        can set the role of other users and other settings pertaining\
                    \ to the\n        team.\n\n        A 'member' is a normal user\
                    \ that inherits the settings and privileges\n        assigned\
                    \ to the team.\n        "
                  type: string
                team:
                  description: None
                  type: string
              required:
              - idp_key
              - idp_value
              - organization
              - team
              title: OrgsSaml-group-syncCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationGroupSync'
          description: The SAML Group Sync mapping was created
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Org namespace not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new SAML Group Sync mapping within an organization.
      tags:
      - orgs
      x-codegen-request-body-name: data
  /orgs/{org}/saml-group-sync/{slug_perm}/:
    delete:
      description: Delete a SAML Group Sync mapping from an organization.
      operationId: orgs_saml-group-sync_delete
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Mapping removed successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a SAML Group Sync mapping from an organization.
      tags:
      - orgs
  /orgs/{org}/teams/:
    get:
      description: Get the details of all teams within an organization.
      operationId: orgs_teams_list
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationTeam'
                title: OrganizationTeamList
                type: array
          description: Retrieved the list of teams within the org
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Org namespace not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the details of all teams within an organization.
      tags:
      - orgs
    post:
      description: Create a team for this organization.
      operationId: orgs_teams_create
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OrgsTeamsCreate'
        content:
          application/json:
            schema:
              example:
                visibility: Visible
                name: name
                description: description
                slug: slug
              properties:
                description:
                  description: None
                  type: string
                name:
                  description: None
                  type: string
                slug:
                  description: None
                  type: string
                visibility:
                  description: None
                  enum:
                  - Visible
                  - Hidden
                  type: string
              required:
              - name
              title: OrgsTeamsCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationTeam'
          description: Team created
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The team cannot be created
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a team for this organization.
      tags:
      - orgs
      x-codegen-request-body-name: data
  /orgs/{org}/teams/{slug_perm}/:
    delete:
      description: Delete a specific team in a organization.
      operationId: orgs_teams_delete
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted the team successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The team cannot be deleted
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Team not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a specific team in a organization.
      tags:
      - orgs
    get:
      description: Viewset for working with Organization teams.
      operationId: orgs_teams_read
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationTeam'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Viewset for working with Organization teams.
      tags:
      - orgs
    patch:
      description: Update a specific team in a organization.
      operationId: orgs_teams_partial_update
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: slug_perm
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OrgsTeamsPartialUpdate'
        content:
          application/json:
            schema:
              example:
                visibility: Visible
                name: name
                description: description
                slug: slug
              properties:
                description:
                  description: None
                  type: string
                name:
                  description: None
                  type: string
                slug:
                  description: None
                  type: string
                visibility:
                  description: None
                  enum:
                  - Visible
                  - Hidden
                  type: string
              title: OrgsTeamsPartialUpdate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationTeam'
          description: Updated the specified team
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The team cannot be edited
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Team not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Update a specific team in a organization.
      tags:
      - orgs
      x-codegen-request-body-name: data
  /orgs/{org}/teams/{team}/members:
    get:
      description: List all members for the team.
      operationId: orgs_teams_members_list
      parameters:
      - in: path
        name: org
        required: true
        schema:
          type: string
      - in: path
        name: team
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationTeamMembers'
          description: Retrieved users for the specified team
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Team not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: List all members for the team.
      tags:
      - orgs
  /packages/{owner}/{repo}/:
    get:
      description: Get a list of all packages associated with repository.
      operationId: packages_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      - description: A search term for querying names, filenames, versions, distributions,
          architectures, formats or statuses of packages.
        in: query
        name: query
        schema:
          type: string
      - description: A field for sorting objects in ascending or descending order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Package'
                title: PackageList
                type: array
          description: Retrieved the list of packages
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all packages associated with repository.
      tags:
      - packages
  /packages/{owner}/{repo}/upload/alpine/:
    post:
      description: Create a new Alpine package
      operationId: packages_upload_alpine
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadAlpine'
        content:
          application/json:
            schema:
              example:
                republish: true
                distribution: alpine/v3.8
                package_file: a123456789
                tags: tags
              properties:
                distribution:
                  description: The distribution to store the package for.
                  example: alpine/v3.8
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: a123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesUploadAlpine
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlpinePackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Alpine package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/cargo/:
    post:
      description: Create a new Cargo package
      operationId: packages_upload_cargo
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadCargo'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadCargo
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CargoPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Cargo package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/cocoapods/:
    post:
      description: Create a new CocoaPods package
      operationId: packages_upload_cocoapods
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadCocoapods'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: z123456789
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: z123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadCocoapods
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CocoapodsPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new CocoaPods package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/composer/:
    post:
      description: Create a new Composer package
      operationId: packages_upload_composer
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadComposer'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: y123456789
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadComposer
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ComposerPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Composer package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/conan/:
    post:
      description: Create a new Conan package
      operationId: packages_upload_conan
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadConan'
        content:
          application/json:
            schema:
              example:
                republish: true
                name: conan_package.tgz
                metadata_file: y1234456789a
                package_file: x123456789a
                conan_prefix: my-repository
                version: 1.0.0
                conan_channel: alpha
                info_file: y1234456789b
                manifest_file: y1234456789c
                tags: tags
              properties:
                conan_channel:
                  description: Conan channel.
                  example: alpha
                  type: string
                conan_prefix:
                  description: Conan prefix (User).
                  example: my-repository
                  type: string
                info_file:
                  description: The info file is an python file containing the package
                    metadata.
                  example: y1234456789b
                  type: string
                manifest_file:
                  description: The info file is an python file containing the package
                    metadata.
                  example: y1234456789c
                  type: string
                metadata_file:
                  description: The conan file is an python file containing the package
                    metadata.
                  example: y1234456789a
                  type: string
                name:
                  description: The name of this package.
                  example: conan_package.tgz
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: 1.0.0
                  type: string
              required:
              - info_file
              - manifest_file
              - metadata_file
              - package_file
              title: PackagesUploadConan
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConanPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Conan package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/conda/:
    post:
      description: Create a new Conda package
      operationId: packages_upload_conda
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadConda'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadConda
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CondaPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Conda package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/cran/:
    post:
      description: Create a new CRAN package
      operationId: packages_upload_cran
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadCran'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadCran
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CranPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new CRAN package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/dart/:
    post:
      description: Create a new Dart package
      operationId: packages_upload_dart
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadDart'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadDart
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DartPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Dart package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/deb/:
    post:
      description: Create a new Debian package
      operationId: packages_upload_deb
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadDeb'
        content:
          application/json:
            schema:
              example:
                sources_file: y123456789
                republish: true
                changes_file: y123456789
                distribution: ubuntu/xenial
                package_file: y123456789
                tags: tags
              properties:
                changes_file:
                  description: The changes archive containing the changes made to
                    the source and debian packaging files
                  example: y123456789
                  type: string
                distribution:
                  description: The distribution to store the package for.
                  example: ubuntu/xenial
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                sources_file:
                  description: The sources archive containing the source code for
                    the binary
                  example: y123456789
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesUploadDeb
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DebPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Debian package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/docker/:
    post:
      description: Create a new Docker package
      operationId: packages_upload_docker
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadDocker'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: y123456789
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadDocker
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DockerPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Docker package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/go/:
    post:
      description: Create a new Go package
      operationId: packages_upload_go
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadGo'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadGo
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Go package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/helm/:
    post:
      description: Create a new Helm package
      operationId: packages_upload_helm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadHelm'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadHelm
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HelmPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Helm package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/luarocks/:
    post:
      description: Create a new LuaRocks package
      operationId: packages_upload_luarocks
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadLuarocks'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: x123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadLuarocks
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LuarocksPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new LuaRocks package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/maven/:
    post:
      description: Create a new Maven package
      operationId: packages_upload_maven
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadMaven'
        content:
          application/json:
            schema:
              example:
                sources_file: y1234456789d
                tests_file: y1234456789e
                republish: true
                group_id: io.cloudsmith.example
                javadoc_file: y1234456789c
                packaging: packaging
                artifact_id: cloudsmith-example
                package_file: y1234456789a
                version: version
                pom_file: y1234456789b
                tags: tags
              properties:
                artifact_id:
                  description: The ID of the artifact.
                  example: cloudsmith-example
                  type: string
                group_id:
                  description: Artifact's group ID.
                  example: io.cloudsmith.example
                  type: string
                javadoc_file:
                  description: Adds bundled Java documentation to the Maven package
                  example: y1234456789c
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y1234456789a
                  type: string
                packaging:
                  description: Artifact's Maven packaging type.
                  type: string
                pom_file:
                  description: The POM file is an XML file containing the Maven coordinates.
                  example: y1234456789b
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                sources_file:
                  description: Adds bundled Java source code to the Maven package.
                  example: y1234456789d
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                tests_file:
                  description: Adds bundled Java tests to the Maven package.
                  example: y1234456789e
                  type: string
                version:
                  description: The raw version for this package.
                  type: string
              required:
              - package_file
              title: PackagesUploadMaven
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MavenPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Maven package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/npm/:
    post:
      description: Create a new npm package
      operationId: packages_upload_npm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadNpm'
        content:
          application/json:
            schema:
              example:
                republish: true
                npm_dist_tag: latest
                package_file: y123456789
                tags: tags
              properties:
                npm_dist_tag:
                  description: The default npm dist-tag for this package/version -
                    This will replace any other package/version if they are using
                    the same tag.
                  example: latest
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadNpm
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NpmPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new npm package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/nuget/:
    post:
      description: Create a new NuGet package
      operationId: packages_upload_nuget
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadNuget'
        content:
          application/json:
            schema:
              example:
                republish: true
                symbols_file: y1234456789b
                package_file: y1234456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y1234456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                symbols_file:
                  description: Attaches a symbols file to the package.
                  example: y1234456789b
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadNuget
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NugetPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new NuGet package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/p2/:
    post:
      description: Create a new P2 package
      operationId: packages_upload_p2
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadP2'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: package_file
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadP2
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/P2PackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new P2 package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/python/:
    post:
      description: Create a new Python package
      operationId: packages_upload_python
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadPython'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: y123456789
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadPython
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PythonPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Python package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/raw/:
    post:
      description: Create a new Raw package
      operationId: packages_upload_raw
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadRaw'
        content:
          application/json:
            schema:
              example:
                summary: My Package File
                content_type: content_type
                republish: true
                name: my-package
                description: Everything about packaging files.
                package_file: y123456789
                version: "1.0"
                tags: tags
              properties:
                content_type:
                  description: A custom content/media (also known as MIME) type to
                    be sent when downloading this file. By default Cloudsmith will
                    attempt to detect the type, but if you need to override it, you
                    can specify it here.
                  type: string
                description:
                  description: A textual description of this package.
                  example: Everything about packaging files.
                  type: string
                name:
                  description: The name of this package.
                  example: my-package
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                summary:
                  description: A one-liner synopsis of this package.
                  example: My Package File
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: "1.0"
                  type: string
              required:
              - package_file
              title: PackagesUploadRaw
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RawPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Raw package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/rpm/:
    post:
      description: Create a new RedHat package
      operationId: packages_upload_rpm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadRpm'
        content:
          application/json:
            schema:
              example:
                republish: true
                distribution: el/7
                package_file: y123456789
                tags: tags
              properties:
                distribution:
                  description: The distribution to store the package for.
                  example: el/7
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesUploadRpm
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RpmPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new RedHat package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/ruby/:
    post:
      description: Create a new Ruby package
      operationId: packages_upload_ruby
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadRuby'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: y123456789
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadRuby
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RubyPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Ruby package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/terraform/:
    post:
      description: Create a new Terraform package
      operationId: packages_upload_terraform
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadTerraform'
        content:
          application/json:
            schema:
              example:
                republish: true
                package_file: z123456789a
                tags: tags
              properties:
                package_file:
                  description: The primary file for the package.
                  example: z123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesUploadTerraform
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TerraformPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Terraform package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/upload/vagrant/:
    post:
      description: Create a new Vagrant package
      operationId: packages_upload_vagrant
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesUploadVagrant'
        content:
          application/json:
            schema:
              example:
                republish: true
                provider: virtualbox
                name: tcl
                package_file: y123456789x
                version: "1.0"
                tags: tags
              properties:
                name:
                  description: The name of this package.
                  example: tcl
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789x
                  type: string
                provider:
                  description: The virtual machine provider for the box.
                  example: virtualbox
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: "1.0"
                  type: string
              required:
              - name
              - package_file
              - provider
              - version
              title: PackagesUploadVagrant
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VagrantPackageUpload'
          description: Upload acknowledged and queued for synchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new Vagrant package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/alpine/:
    post:
      description: Validate parameters for create Alpine package
      operationId: packages_validate-upload_alpine
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadAlpine'
        content:
          application/json:
            schema:
              properties:
                distribution:
                  description: The distribution to store the package for.
                  example: alpine/v3.8
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: a123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesValidate-uploadAlpine
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Alpine package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/cargo/:
    post:
      description: Validate parameters for create Cargo package
      operationId: packages_validate-upload_cargo
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadCargo'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadCargo
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Cargo package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/cocoapods/:
    post:
      description: Validate parameters for create CocoaPods package
      operationId: packages_validate-upload_cocoapods
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadCocoapods'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: z123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadCocoapods
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create CocoaPods package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/composer/:
    post:
      description: Validate parameters for create Composer package
      operationId: packages_validate-upload_composer
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadComposer'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadComposer
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Composer package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/conan/:
    post:
      description: Validate parameters for create Conan package
      operationId: packages_validate-upload_conan
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadConan'
        content:
          application/json:
            schema:
              properties:
                conan_channel:
                  description: Conan channel.
                  example: alpha
                  type: string
                conan_prefix:
                  description: Conan prefix (User).
                  example: my-repository
                  type: string
                info_file:
                  description: The info file is an python file containing the package
                    metadata.
                  example: y1234456789b
                  type: string
                manifest_file:
                  description: The info file is an python file containing the package
                    metadata.
                  example: y1234456789c
                  type: string
                metadata_file:
                  description: The conan file is an python file containing the package
                    metadata.
                  example: y1234456789a
                  type: string
                name:
                  description: The name of this package.
                  example: conan_package.tgz
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: 1.0.0
                  type: string
              required:
              - info_file
              - manifest_file
              - metadata_file
              - package_file
              title: PackagesValidate-uploadConan
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Conan package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/conda/:
    post:
      description: Validate parameters for create Conda package
      operationId: packages_validate-upload_conda
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadConda'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadConda
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Conda package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/cran/:
    post:
      description: Validate parameters for create CRAN package
      operationId: packages_validate-upload_cran
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadCran'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadCran
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create CRAN package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/dart/:
    post:
      description: Validate parameters for create Dart package
      operationId: packages_validate-upload_dart
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadDart'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadDart
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Dart package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/deb/:
    post:
      description: Validate parameters for create Debian package
      operationId: packages_validate-upload_deb
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadDeb'
        content:
          application/json:
            schema:
              properties:
                changes_file:
                  description: The changes archive containing the changes made to
                    the source and debian packaging files
                  example: y123456789
                  type: string
                distribution:
                  description: The distribution to store the package for.
                  example: ubuntu/xenial
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                sources_file:
                  description: The sources archive containing the source code for
                    the binary
                  example: y123456789
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesValidate-uploadDeb
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Debian package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/docker/:
    post:
      description: Validate parameters for create Docker package
      operationId: packages_validate-upload_docker
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadDocker'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadDocker
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Docker package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/go/:
    post:
      description: Validate parameters for create Go package
      operationId: packages_validate-upload_go
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadGo'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadGo
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Go package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/helm/:
    post:
      description: Validate parameters for create Helm package
      operationId: packages_validate-upload_helm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadHelm'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadHelm
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Helm package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/luarocks/:
    post:
      description: Validate parameters for create LuaRocks package
      operationId: packages_validate-upload_luarocks
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadLuarocks'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: x123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadLuarocks
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create LuaRocks package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/maven/:
    post:
      description: Validate parameters for create Maven package
      operationId: packages_validate-upload_maven
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadMaven'
        content:
          application/json:
            schema:
              properties:
                artifact_id:
                  description: The ID of the artifact.
                  example: cloudsmith-example
                  type: string
                group_id:
                  description: Artifact's group ID.
                  example: io.cloudsmith.example
                  type: string
                javadoc_file:
                  description: Adds bundled Java documentation to the Maven package
                  example: y1234456789c
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y1234456789a
                  type: string
                packaging:
                  description: Artifact's Maven packaging type.
                  type: string
                pom_file:
                  description: The POM file is an XML file containing the Maven coordinates.
                  example: y1234456789b
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                sources_file:
                  description: Adds bundled Java source code to the Maven package.
                  example: y1234456789d
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                tests_file:
                  description: Adds bundled Java tests to the Maven package.
                  example: y1234456789e
                  type: string
                version:
                  description: The raw version for this package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadMaven
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Maven package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/npm/:
    post:
      description: Validate parameters for create npm package
      operationId: packages_validate-upload_npm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadNpm'
        content:
          application/json:
            schema:
              properties:
                npm_dist_tag:
                  description: The default npm dist-tag for this package/version -
                    This will replace any other package/version if they are using
                    the same tag.
                  example: latest
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadNpm
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create npm package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/nuget/:
    post:
      description: Validate parameters for create NuGet package
      operationId: packages_validate-upload_nuget
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadNuget'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y1234456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                symbols_file:
                  description: Attaches a symbols file to the package.
                  example: y1234456789b
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadNuget
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create NuGet package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/p2/:
    post:
      description: Validate parameters for create P2 package
      operationId: packages_validate-upload_p2
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadP2'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadP2
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create P2 package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/python/:
    post:
      description: Validate parameters for create Python package
      operationId: packages_validate-upload_python
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadPython'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadPython
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Python package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/raw/:
    post:
      description: Validate parameters for create Raw package
      operationId: packages_validate-upload_raw
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadRaw'
        content:
          application/json:
            schema:
              properties:
                content_type:
                  description: A custom content/media (also known as MIME) type to
                    be sent when downloading this file. By default Cloudsmith will
                    attempt to detect the type, but if you need to override it, you
                    can specify it here.
                  type: string
                description:
                  description: A textual description of this package.
                  example: Everything about packaging files.
                  type: string
                name:
                  description: The name of this package.
                  example: my-package
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                summary:
                  description: A one-liner synopsis of this package.
                  example: My Package File
                  type: string
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: "1.0"
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadRaw
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Raw package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/rpm/:
    post:
      description: Validate parameters for create RedHat package
      operationId: packages_validate-upload_rpm
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadRpm'
        content:
          application/json:
            schema:
              properties:
                distribution:
                  description: The distribution to store the package for.
                  example: el/7
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - distribution
              - package_file
              title: PackagesValidate-uploadRpm
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create RedHat package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/ruby/:
    post:
      description: Validate parameters for create Ruby package
      operationId: packages_validate-upload_ruby
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadRuby'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: y123456789
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadRuby
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Ruby package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/terraform/:
    post:
      description: Validate parameters for create Terraform package
      operationId: packages_validate-upload_terraform
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadTerraform'
        content:
          application/json:
            schema:
              properties:
                package_file:
                  description: The primary file for the package.
                  example: z123456789a
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
              required:
              - package_file
              title: PackagesValidate-uploadTerraform
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Terraform package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/validate-upload/vagrant/:
    post:
      description: Validate parameters for create Vagrant package
      operationId: packages_validate-upload_vagrant
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesValidate_uploadVagrant'
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of this package.
                  example: tcl
                  type: string
                package_file:
                  description: The primary file for the package.
                  example: y123456789x
                  type: string
                provider:
                  description: The virtual machine provider for the box.
                  example: virtualbox
                  type: string
                republish:
                  description: If true, the uploaded package will overwrite any others
                    with the same attributes (e.g. same version); otherwise, it will
                    be flagged as a duplicate.
                  type: boolean
                tags:
                  description: A comma-separated values list of tags to add to the
                    package.
                  type: string
                version:
                  description: The raw version for this package.
                  example: "1.0"
                  type: string
              required:
              - name
              - package_file
              - provider
              - version
              title: PackagesValidate-uploadVagrant
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: Validation was successful, parameters are OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Namespace (owner) or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Validate parameters for create Vagrant package
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/{identifier}/:
    delete:
      description: Delete a specific package in a repository.
      operationId: packages_delete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted the specified package successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The package cannot be deleted
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a specific package in a repository.
      tags:
      - packages
    get:
      description: Get a specific package in a repository.
      operationId: packages_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Package'
          description: Retrieved the specified package successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a specific package in a repository.
      tags:
      - packages
  /packages/{owner}/{repo}/{identifier}/copy/:
    post:
      description: Copy a package to another repository.
      operationId: packages_copy
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesCopy'
        content:
          application/json:
            schema:
              example:
                republish: true
                destination: destination
              properties:
                destination:
                  description: None
                  type: string
                republish:
                  description: If true, the package will overwrite any others with
                    the same attributes (e.g. same version); otherwise, it will be
                    flagged as a duplicate.
                  type: boolean
              required:
              - destination
              title: PackagesCopy
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageCopy'
          description: Copied specified package to destination repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Copy a package to another repository.
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/{identifier}/dependencies/:
    get:
      description: Get the direct (non-transitive) dependencies list for a package.
      operationId: packages_dependencies
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageDependencies'
          description: Retrieved direct dependencies for specified package
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the direct (non-transitive) dependencies list for a package.
      tags:
      - packages
  /packages/{owner}/{repo}/{identifier}/move/:
    post:
      description: Move a package to another repository.
      operationId: packages_move
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesMove'
        content:
          application/json:
            schema:
              example:
                destination: destination
              properties:
                destination:
                  description: None
                  type: string
              required:
              - destination
              title: PackagesMove
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageMove'
          description: Moved specified package to destination repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Move a package to another repository.
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/{identifier}/quarantine/:
    post:
      description: Quarantine or restore a package.
      operationId: packages_quarantine
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesQuarantine'
        content:
          application/json:
            schema:
              example:
                restore: true
              properties:
                restore:
                  description: If true, the package be restored from quarantine.
                  type: boolean
              title: PackagesQuarantine
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageQuarantine'
          description: Changed the package's quarantine status
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The package is in the wrong state for the requested operation
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Quarantine or restore a package.
      tags:
      - packages
      x-codegen-request-body-name: data
  /packages/{owner}/{repo}/{identifier}/resync/:
    post:
      description: Schedule a package for resynchronisation.
      operationId: packages_resync
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageResync'
          description: Scheduled the package for resynchronisation
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Schedule a package for resynchronisation.
      tags:
      - packages
  /packages/{owner}/{repo}/{identifier}/scan/:
    post:
      description: Schedule a package for scanning.
      operationId: packages_scan
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Package'
          description: Scheduled the package for scanning
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Schedule a package for scanning.
      tags:
      - packages
  /packages/{owner}/{repo}/{identifier}/status/:
    get:
      description: Get the synchronisation status for a package.
      operationId: packages_status
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PackageStatus'
          description: Retrieved status for specified package
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get the synchronisation status for a package.
      tags:
      - packages
  /packages/{owner}/{repo}/{identifier}/tag/:
    post:
      description: Add/Replace/Remove tags for a package.
      operationId: packages_tag
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PackagesTag'
        content:
          application/json:
            schema:
              example:
                is_immutable: true
                action: add
                tags:
                - tags
                - tags
              properties:
                action:
                  description: None
                  enum:
                  - add
                  - clear
                  - remove
                  - replace
                  type: string
                is_immutable:
                  description: If true, created tags will be immutable. An immutable
                    flag is a tag that cannot be removed from a package.
                  type: boolean
                tags:
                  description: A list of tags to apply the action to. Not required
                    for clears.
                  items:
                    description: ""
                    type: string
                  title: TagsList
                  type: array
              title: PackagesTag
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Package'
          description: Modified tags for the package
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Add/Replace/Remove tags for a package.
      tags:
      - packages
      x-codegen-request-body-name: data
  /quota/history/{owner}/:
    get:
      description: Quota history for a given namespace.
      operationId: quota_history_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QuotaHistory'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Quota history for a given namespace.
      tags:
      - quota
  /quota/oss/history/{owner}/:
    get:
      description: Open-source Quota history for a given namespace.
      operationId: quota_oss_history_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QuotaHistory'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Open-source Quota history for a given namespace.
      tags:
      - quota
  /quota/oss/{owner}/:
    get:
      description: Open-source Quota usage for a given namespace.
      operationId: quota_oss_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Quota'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Open-source Quota usage for a given namespace.
      tags:
      - quota
  /quota/{owner}/:
    get:
      description: Quota usage for a given namespace.
      operationId: quota_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Quota'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Quota usage for a given namespace.
      tags:
      - quota
  /rates/limits/:
    get:
      description: Endpoint to check rate limits for current user.
      operationId: rates_limits_list
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourcesRateCheck'
          description: Rate check was successful
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Endpoint to check rate limits for current user.
      tags:
      - rates
  /repos/:
    get:
      description: Get a list of all repositories associated with current user.
      operationId: repos_all_list
      parameters:
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                title: RepositoryList
                type: array
          description: Retrieved the list of repositories
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all repositories associated with current user.
      tags:
      - repos
  /repos/{owner}/:
    get:
      description: Get a list of all repositories within a namespace.
      operationId: repos_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                title: RepositoryList
                type: array
          description: Retrieved the list of repositories
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all repositories within a namespace.
      tags:
      - repos
    post:
      description: Create a new repository in a given namespace.
      operationId: repos_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ReposCreate'
        content:
          application/json:
            schema:
              example:
                delete_own: true
                move_packages: Admin
                scan_packages: Admin
                show_setup_all: true
                description: description
                index_files: true
                use_source_packages: true
                docker_refresh_tokens_enabled: true
                proxy_npmjs: true
                move_own: true
                delete_packages: Admin
                repository_type_str: repository_type_str
                use_vulnerability_scanning: true
                resync_own: true
                slug: slug
                copy_own: true
                proxy_pypi: true
                raw_package_index_enabled: true
                contextual_auth_realm: true
                resync_packages: Admin
                view_statistics: Admin
                copy_packages: Admin
                replace_packages: Admin
                user_entitlements_enabled: true
                use_noarch_packages: true
                use_default_cargo_upstream: true
                storage_region: storage_region
                scan_own: true
                name: name
                use_debian_labels: true
                replace_packages_by_default: true
                strict_npm_validation: true
                default_privilege: Admin
                raw_package_index_signatures_enabled: true
              properties:
                contextual_auth_realm:
                  description: If checked, missing credentials for this repository
                    where basic authentication is required shall present an enriched
                    value in the 'WWW-Authenticate' header containing the namespace
                    and repository. This can be useful for tooling such as SBT where
                    the authentication realm is used to distinguish and disambiguate
                    credentials.
                  type: boolean
                copy_own:
                  description: If checked, users can copy any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                copy_packages:
                  description: This defines the minimum level of privilege required
                    for a user to copy packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    copy setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                default_privilege:
                  description: This defines the default level of privilege that all
                    of your organization members have for this repository. This does
                    not include collaborators, but applies to any member of the org
                    regardless of their own membership role (i.e. it applies to owners,
                    managers and members). Be careful if setting this to admin, because
                    any member will be able to change settings.
                  enum:
                  - Admin
                  - Write
                  - Read
                  - None
                  type: string
                delete_own:
                  description: If checked, users can delete any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                delete_packages:
                  description: This defines the minimum level of privilege required
                    for a user to delete packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific delete setting.
                  enum:
                  - Admin
                  - Write
                  type: string
                description:
                  description: A description of the repository's purpose/contents.
                  type: string
                docker_refresh_tokens_enabled:
                  description: If checked, refresh tokens will be issued in addition
                    to access tokens for Docker authentication. This allows unlimited
                    extension of the lifetime of access tokens.
                  type: boolean
                index_files:
                  description: If checked, files contained in packages will be indexed,
                    which increase the synchronisation time required for packages.
                    Note that it is recommended you keep this enabled unless the synchronisation
                    time is significantly impacted.
                  type: boolean
                move_own:
                  description: If checked, users can move any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                move_packages:
                  description: This defines the minimum level of privilege required
                    for a user to move packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    move setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                name:
                  description: A descriptive name for the repository.
                  type: string
                proxy_npmjs:
                  description: If checked, Npm packages that are not in the repository
                    when requested by clients will automatically be proxied from the
                    public npmjs.org registry. If there is at least one version for
                    a package, others will not be proxied.
                  type: boolean
                proxy_pypi:
                  description: If checked, Python packages that are not in the repository
                    when requested by clients will automatically be proxied from the
                    public pypi.python.org registry. If there is at least one version
                    for a package, others will not be proxied.
                  type: boolean
                raw_package_index_enabled:
                  description: If checked, HTML and JSON indexes will be generated
                    that list all available raw packages in the repository.
                  type: boolean
                raw_package_index_signatures_enabled:
                  description: If checked, the HTML and JSON indexes will display
                    raw package GPG signatures alongside the index packages.
                  type: boolean
                replace_packages:
                  description: This defines the minimum level of privilege required
                    for a user to republish packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific republish setting. Please note that the user still
                    requires the privilege to delete packages that will be replaced
                    by the new package; otherwise the republish will fail.
                  enum:
                  - Admin
                  - Write
                  type: string
                replace_packages_by_default:
                  description: If checked, uploaded packages will overwrite/replace
                    any others with the same attributes (e.g. same version) by default.
                    This only applies if the user has the required privilege for the
                    republishing AND has the required privilege to delete existing
                    packages that they don't own.
                  type: boolean
                repository_type_str:
                  description: |-
                    The repository type changes how it is accessed and billed.
                    Private repositories can only be used on paid plans, but are visible
                    only to you or authorised delegates. Public repositories are free to
                    use on all plans and visible to all Cloudsmith users.
                  type: string
                resync_own:
                  description: If checked, users can resync any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                resync_packages:
                  description: This defines the minimum level of privilege required
                    for a user to resync packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific resync setting.
                  enum:
                  - Admin
                  - Write
                  type: string
                scan_own:
                  description: If checked, users can scan any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                scan_packages:
                  description: This defines the minimum level of privilege required
                    for a user to scan packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    scan setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                show_setup_all:
                  description: If checked, the Set Me Up help for all formats will
                    always be shown, even if you don't have packages of that type
                    uploaded. Otherwise, help will only be shown for packages that
                    are in the repository. For example, if you have uploaded only
                    NuGet packages, then the Set Me Up help for NuGet packages will
                    be shown only.
                  type: boolean
                slug:
                  description: The slug identifies the repository in URIs.
                  type: string
                storage_region:
                  description: The Cloudsmith region in which package files are stored.
                  type: string
                strict_npm_validation:
                  description: If checked, npm packages will be validated strictly
                    to ensure the package matches specifcation. You can turn this
                    off if you have packages that are old or otherwise mildly off-spec,
                    but we can't guarantee the packages will work with npm-cli or
                    other tooling correctly. Turn off at your own risk!
                  type: boolean
                use_debian_labels:
                  description: If checked, a 'Label' field will be present in Debian-based
                    repositories. It will contain a string that identifies the entitlement
                    token used to authenticate the repository, in the form of 'source=t-<identifier>';
                    or 'source=none' if no token was used. You can use this to help
                    with pinning.
                  type: boolean
                use_default_cargo_upstream:
                  description: If checked, dependencies of uploaded Cargo crates which
                    do not set an explicit value for "registry" will be assumed to
                    be available from crates.io. If unchecked, dependencies with unspecified
                    "registry" values will be assumed to be available in the registry
                    being uploaded to. Uncheck this if you want to ensure that dependencies
                    are only ever installed from Cloudsmith unless explicitly specified
                    as belong to another registry.
                  type: boolean
                use_noarch_packages:
                  description: If checked, noarch packages (if supported) are enabled
                    in installations/configurations. A noarch package is one that
                    is not tied to specific system architecture (like i686).
                  type: boolean
                use_source_packages:
                  description: If checked, source packages (if supported) are enabled
                    in installations/configurations. A source package is one that
                    contains source code rather than built binaries.
                  type: boolean
                use_vulnerability_scanning:
                  description: If checked, vulnerability scanning will be enabled
                    for all supported packages within this repository.
                  type: boolean
                user_entitlements_enabled:
                  description: If checked, users can use and manage their own user-specific
                    entitlement token for the repository (if private). Otherwise,
                    user-specific entitlements are disabled for all users.
                  type: boolean
                view_statistics:
                  description: This defines the minimum level of privilege required
                    for a user to view repository statistics, to include entitlement-based
                    usage, if applciable. If a user does not have the permission,
                    they won't be able to view any statistics, either via the UI,
                    API or CLI.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
              required:
              - name
              title: ReposCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryCreate'
          description: The repository was created
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a new repository in a given namespace.
      tags:
      - repos
      x-codegen-request-body-name: data
  /repos/{owner}/{identifier}/:
    delete:
      description: Delete a repository in a given namespace.
      operationId: repos_delete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The repository has been scheduled for deletion
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Unable to find repository with that name in the provided namespace
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a repository in a given namespace.
      tags:
      - repos
    get:
      description: Get a specific repository.
      operationId: repos_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Repository'
          description: Retrieved the specified repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a specific repository.
      tags:
      - repos
    patch:
      description: Update details about a repository in a given namespace.
      operationId: repos_partial_update
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ReposPartialUpdate'
        content:
          application/json:
            schema:
              example:
                delete_own: true
                move_packages: Admin
                scan_packages: Admin
                show_setup_all: true
                description: description
                index_files: true
                use_source_packages: true
                docker_refresh_tokens_enabled: true
                proxy_npmjs: true
                move_own: true
                delete_packages: Admin
                repository_type_str: Public
                use_vulnerability_scanning: true
                resync_own: true
                slug: slug
                copy_own: true
                proxy_pypi: true
                raw_package_index_enabled: true
                contextual_auth_realm: true
                resync_packages: Admin
                view_statistics: Admin
                copy_packages: Admin
                replace_packages: Admin
                user_entitlements_enabled: true
                use_noarch_packages: true
                use_default_cargo_upstream: true
                scan_own: true
                name: name
                use_debian_labels: true
                replace_packages_by_default: true
                strict_npm_validation: true
                default_privilege: Admin
                raw_package_index_signatures_enabled: true
              properties:
                contextual_auth_realm:
                  description: If checked, missing credentials for this repository
                    where basic authentication is required shall present an enriched
                    value in the 'WWW-Authenticate' header containing the namespace
                    and repository. This can be useful for tooling such as SBT where
                    the authentication realm is used to distinguish and disambiguate
                    credentials.
                  type: boolean
                copy_own:
                  description: If checked, users can copy any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                copy_packages:
                  description: This defines the minimum level of privilege required
                    for a user to copy packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    copy setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                default_privilege:
                  description: This defines the default level of privilege that all
                    of your organization members have for this repository. This does
                    not include collaborators, but applies to any member of the org
                    regardless of their own membership role (i.e. it applies to owners,
                    managers and members). Be careful if setting this to admin, because
                    any member will be able to change settings.
                  enum:
                  - Admin
                  - Write
                  - Read
                  - None
                  type: string
                delete_own:
                  description: If checked, users can delete any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                delete_packages:
                  description: This defines the minimum level of privilege required
                    for a user to delete packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific delete setting.
                  enum:
                  - Admin
                  - Write
                  type: string
                description:
                  description: A description of the repository's purpose/contents.
                  type: string
                docker_refresh_tokens_enabled:
                  description: If checked, refresh tokens will be issued in addition
                    to access tokens for Docker authentication. This allows unlimited
                    extension of the lifetime of access tokens.
                  type: boolean
                index_files:
                  description: If checked, files contained in packages will be indexed,
                    which increase the synchronisation time required for packages.
                    Note that it is recommended you keep this enabled unless the synchronisation
                    time is significantly impacted.
                  type: boolean
                move_own:
                  description: If checked, users can move any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                move_packages:
                  description: This defines the minimum level of privilege required
                    for a user to move packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    move setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                name:
                  description: A descriptive name for the repository.
                  type: string
                proxy_npmjs:
                  description: If checked, Npm packages that are not in the repository
                    when requested by clients will automatically be proxied from the
                    public npmjs.org registry. If there is at least one version for
                    a package, others will not be proxied.
                  type: boolean
                proxy_pypi:
                  description: If checked, Python packages that are not in the repository
                    when requested by clients will automatically be proxied from the
                    public pypi.python.org registry. If there is at least one version
                    for a package, others will not be proxied.
                  type: boolean
                raw_package_index_enabled:
                  description: If checked, HTML and JSON indexes will be generated
                    that list all available raw packages in the repository.
                  type: boolean
                raw_package_index_signatures_enabled:
                  description: If checked, the HTML and JSON indexes will display
                    raw package GPG signatures alongside the index packages.
                  type: boolean
                replace_packages:
                  description: This defines the minimum level of privilege required
                    for a user to republish packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific republish setting. Please note that the user still
                    requires the privilege to delete packages that will be replaced
                    by the new package; otherwise the republish will fail.
                  enum:
                  - Admin
                  - Write
                  type: string
                replace_packages_by_default:
                  description: If checked, uploaded packages will overwrite/replace
                    any others with the same attributes (e.g. same version) by default.
                    This only applies if the user has the required privilege for the
                    republishing AND has the required privilege to delete existing
                    packages that they don't own.
                  type: boolean
                repository_type_str:
                  description: The repository type changes how it is accessed and
                    billed. Private repositories can only be used on paid plans, but
                    are visible only to you or authorised delegates. Public repositories
                    are free to use on all plans and visible to all Cloudsmith users.
                  enum:
                  - Public
                  - Private
                  - Open-Source
                  type: string
                resync_own:
                  description: If checked, users can resync any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                resync_packages:
                  description: This defines the minimum level of privilege required
                    for a user to resync packages. Unless the package was uploaded
                    by that user, in which the permission may be overridden by the
                    user-specific resync setting.
                  enum:
                  - Admin
                  - Write
                  type: string
                scan_own:
                  description: If checked, users can scan any of their own packages
                    that they have uploaded, assuming that they still have write privilege
                    for the repository. This takes precedence over privileges configured
                    in the 'Access Controls' section of the repository, and any inherited
                    from the org.
                  type: boolean
                scan_packages:
                  description: This defines the minimum level of privilege required
                    for a user to scan packages. Unless the package was uploaded by
                    that user, in which the permission may be overridden by the user-specific
                    scan setting.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
                show_setup_all:
                  description: If checked, the Set Me Up help for all formats will
                    always be shown, even if you don't have packages of that type
                    uploaded. Otherwise, help will only be shown for packages that
                    are in the repository. For example, if you have uploaded only
                    NuGet packages, then the Set Me Up help for NuGet packages will
                    be shown only.
                  type: boolean
                slug:
                  description: The slug identifies the repository in URIs.
                  type: string
                strict_npm_validation:
                  description: If checked, npm packages will be validated strictly
                    to ensure the package matches specifcation. You can turn this
                    off if you have packages that are old or otherwise mildly off-spec,
                    but we can't guarantee the packages will work with npm-cli or
                    other tooling correctly. Turn off at your own risk!
                  type: boolean
                use_debian_labels:
                  description: If checked, a 'Label' field will be present in Debian-based
                    repositories. It will contain a string that identifies the entitlement
                    token used to authenticate the repository, in the form of 'source=t-<identifier>';
                    or 'source=none' if no token was used. You can use this to help
                    with pinning.
                  type: boolean
                use_default_cargo_upstream:
                  description: If checked, dependencies of uploaded Cargo crates which
                    do not set an explicit value for "registry" will be assumed to
                    be available from crates.io. If unchecked, dependencies with unspecified
                    "registry" values will be assumed to be available in the registry
                    being uploaded to. Uncheck this if you want to ensure that dependencies
                    are only ever installed from Cloudsmith unless explicitly specified
                    as belong to another registry.
                  type: boolean
                use_noarch_packages:
                  description: If checked, noarch packages (if supported) are enabled
                    in installations/configurations. A noarch package is one that
                    is not tied to specific system architecture (like i686).
                  type: boolean
                use_source_packages:
                  description: If checked, source packages (if supported) are enabled
                    in installations/configurations. A source package is one that
                    contains source code rather than built binaries.
                  type: boolean
                use_vulnerability_scanning:
                  description: If checked, vulnerability scanning will be enabled
                    for all supported packages within this repository.
                  type: boolean
                user_entitlements_enabled:
                  description: If checked, users can use and manage their own user-specific
                    entitlement token for the repository (if private). Otherwise,
                    user-specific entitlements are disabled for all users.
                  type: boolean
                view_statistics:
                  description: This defines the minimum level of privilege required
                    for a user to view repository statistics, to include entitlement-based
                    usage, if applciable. If a user does not have the permission,
                    they won't be able to view any statistics, either via the UI,
                    API or CLI.
                  enum:
                  - Admin
                  - Write
                  - Read
                  type: string
              title: ReposPartialUpdate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Repository'
          description: The repository was updated
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Unable to find repository with that name in the provided namespace
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Update details about a repository in a given namespace.
      tags:
      - repos
      x-codegen-request-body-name: data
  /repos/{owner}/{identifier}/gpg/:
    get:
      description: Retrieve the active GPG key for the Repository.
      operationId: repos_gpg_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryGpgKey'
          description: Retrieved the active GPG key
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Retrieve the active GPG key for the Repository.
      tags:
      - repos
    post:
      description: Set the active GPG key for the Repository.
      operationId: repos_gpg_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ReposGpgCreate'
        content:
          application/json:
            schema:
              example:
                gpg_passphrase: gpg_passphrase
                gpg_private_key: gpg_private_key
              properties:
                gpg_passphrase:
                  description: The GPG passphrase used for signing.
                  type: string
                gpg_private_key:
                  description: The GPG private key.
                  type: string
              required:
              - gpg_private_key
              title: ReposGpgCreate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryGpgKey'
          description: The provided GPG key is the same as the current GPG key
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryGpgKey'
          description: The provided GPG key was assigned to the Repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The provided GPG key is not valid
        "402":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Custom GPG keys are not active; upgrade your account!
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Organizaition/Repository does not exist, or you do not have
            permissions
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Set the active GPG key for the Repository.
      tags:
      - repos
      x-codegen-request-body-name: data
  /repos/{owner}/{identifier}/gpg/regenerate/:
    post:
      description: Regenerate GPG Key for the Repository.
      operationId: repos_gpg_regenerate
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryGpgKey'
          description: A GPG key was generated for the Repository
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Regenerate GPG Key for the Repository.
      tags:
      - repos
  /repos/{owner}/{identifier}/privileges:
    delete:
      description: Remove the specified repository privileges.
      operationId: repos_privileges_delete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The specified user and/or team repository privileges have been
            removed
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Remove the specified repository privileges.
      tags:
      - repos
    get:
      description: List all explicity created privileges for the repository.
      operationId: repos_privileges_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryPrivilegeList'
                title: RepositoryPrivilegeListList
                type: array
          description: Retrieved privileges for the specified repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: List all explicity created privileges for the repository.
      tags:
      - repos
    patch:
      description: Update the specified repository privileges.
      operationId: repos_privileges_partial_update
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Repository privileges updated
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Update the specified repository privileges.
      tags:
      - repos
    put:
      description: Replace all existing repository privileges with those specified.
      operationId: repos_privileges_update
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryPrivilegeList'
          description: Repository privileges replaced
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Replace all existing repository privileges with those specified.
      tags:
      - repos
  /repos/{owner}/{identifier}/rsa/:
    get:
      description: Retrieve the active RSA key for the Repository.
      operationId: repos_rsa_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryRsaKey'
          description: Retrieved the active RSA key
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Retrieve the active RSA key for the Repository.
      tags:
      - repos
    post:
      description: Set the active RSA key for the Repository.
      operationId: repos_rsa_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ReposRsaCreate'
        content:
          application/json:
            schema:
              example:
                rsa_private_key: rsa_private_key
                rsa_passphrase: rsa_passphrase
              properties:
                rsa_passphrase:
                  description: The RSA passphrase used for signing.
                  type: string
                rsa_private_key:
                  description: The RSA private key.
                  type: string
              required:
              - rsa_private_key
              title: ReposRsaCreate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryRsaKey'
          description: The provided RSA key is the same as the current RSA key
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryRsaKey'
          description: The provided RSA key was assigned to the Repository
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The provided RSA key is not valid
        "402":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Custom RSA keys are not active; upgrade your account!
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Organization/Repository does not exist, or you do not have
            permissions
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Set the active RSA key for the Repository.
      tags:
      - repos
      x-codegen-request-body-name: data
  /repos/{owner}/{identifier}/rsa/regenerate/:
    post:
      description: Regenerate RSA Key for the Repository.
      operationId: repos_rsa_regenerate
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryRsaKey'
          description: An RSA key was generated for the Repository
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Regenerate RSA Key for the Repository.
      tags:
      - repos
  /status/check/basic/:
    get:
      description: Endpoint to check basic API connectivity.
      operationId: status_check_basic
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatusBasic'
          description: Status check was successful
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      summary: Endpoint to check basic API connectivity.
      tags:
      - status
  /storage-regions/:
    get:
      description: Get a list of all available storage regions.
      operationId: storage-regions_list
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/StorageRegion'
                title: StorageRegionList
                type: array
          description: Available storage regions retrieved
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all available storage regions.
      tags:
      - storage-regions
  /storage-regions/{slug}/:
    get:
      description: Get a specific storage region.
      operationId: storage-regions_read
      parameters:
      - in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageRegion'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a specific storage region.
      tags:
      - storage-regions
  /user/self/:
    get:
      description: Provide a brief for the current user (if any).
      operationId: user_self
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserBrief'
          description: Retrieved brief for the current user
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Provide a brief for the current user (if any).
      tags:
      - user
  /user/token/:
    post:
      description: Retrieve the API key/token for the authenticated user.
      operationId: user_token_create
      requestBody:
        $ref: '#/components/requestBodies/UserTokenCreate'
        content:
          application/json:
            schema:
              example:
                password: password
                email: email
              properties:
                email:
                  description: Email address to authenticate with
                  type: string
                password:
                  description: Password to authenticate with
                  type: string
              title: UserTokenCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAuthToken'
          description: Retrieved/created user API token/key
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Locked out
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Failed to authenticate
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Retrieve the API key/token for the authenticated user.
      tags:
      - user
      x-codegen-request-body-name: data
  /users/profile/{slug}/:
    get:
      description: Provide a brief for the specified user (if any).
      operationId: users_profile_read
      parameters:
      - in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: Retrieved details for the specified user (or current user,
            if none was specified)
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Provide a brief for the specified user (if any).
      tags:
      - users
  /vulnerabilities/{owner}/:
    get:
      description: Lists scan results for a specific namespace.
      operationId: vulnerabilities_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/VulnerabilityScanResultsList'
                title: VulnerabilityScanResultsListList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Lists scan results for a specific namespace.
      tags:
      - vulnerabilities
  /vulnerabilities/{owner}/{repo}/:
    get:
      description: Lists scan results for a specific repository.
      operationId: vulnerabilities_list_0
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/VulnerabilityScanResultsList'
                title: VulnerabilityScanResultsListList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Lists scan results for a specific repository.
      tags:
      - vulnerabilities
  /vulnerabilities/{owner}/{repo}/{package}/:
    get:
      description: Lists scan results for a specific package.
      operationId: vulnerabilities_list_1
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: package
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/VulnerabilityScanResultsList'
                title: VulnerabilityScanResultsListList
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Lists scan results for a specific package.
      tags:
      - vulnerabilities
  /vulnerabilities/{owner}/{repo}/{package}/{scan_id}/:
    get:
      description: Returns a Scan Result.
      operationId: vulnerabilities_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: package
        required: true
        schema:
          type: string
      - in: path
        name: scan_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VulnerabilityScanResults'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Returns a Scan Result.
      tags:
      - vulnerabilities
  /webhooks/{owner}/{repo}/:
    get:
      description: Get a list of all webhooks in a repository.
      operationId: webhooks_list
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - description: A page number within the paginated result set.
        in: query
        name: page
        schema:
          type: integer
      - description: Number of results to return per page.
        in: query
        name: page_size
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryWebhook'
                title: RepositoryWebhookList
                type: array
          description: Retrieved the list of webhooks
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Get a list of all webhooks in a repository.
      tags:
      - webhooks
    post:
      description: Create a specific webhook in a repository.
      operationId: webhooks_create
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/WebhooksCreate'
        content:
          application/json:
            schema:
              example:
                package_query: package_query
                request_content_type: request_content_type
                is_active: true
                verify_ssl: true
                signature_key: signature_key
                target_url: target_url
                templates:
                - template: template
                  event: event
                - template: template
                  event: event
                secret_header: secret_header
                secret_value: secret_value
                request_body_format: 0
                request_body_template_format: 6
                events:
                - events
                - events
              properties:
                events:
                  description: None
                  items:
                    description: ""
                    type: string
                  title: EventsList
                  type: array
                is_active:
                  description: If enabled, the webhook will trigger on events and
                    send payloads to the configured target URL.
                  type: boolean
                package_query:
                  description: The package-based search query for webhooks to fire.
                    This uses the same syntax as the standard search used for repositories,
                    and also supports boolean logic operators such as OR/AND/NOT and
                    parentheses for grouping. If a package does not match, the webhook
                    will not fire.
                  type: string
                request_body_format:
                  description: The format of the payloads for webhook requests.
                  type: integer
                request_body_template_format:
                  description: The format of the payloads for webhook requests.
                  type: integer
                request_content_type:
                  description: 'The value that will be sent for the ''Content Type''
                    header. '
                  type: string
                secret_header:
                  description: The header to send the predefined secret in. This must
                    be unique from existing headers or it won't be sent. You can use
                    this as a form of authentication on the endpoint side.
                  type: string
                secret_value:
                  description: 'The value for the predefined secret (note: this is
                    treated as a passphrase and is encrypted when we store it). You
                    can use this as a form of authentication on the endpoint side.'
                  type: string
                signature_key:
                  description: 'The value for the signature key - This is used to
                    generate an HMAC-based hex digest of the request body, which we
                    send as the X-Cloudsmith-Signature header so that you can ensure
                    that the request wasn''t modified by a malicious party (note:
                    this is treated as a passphrase and is encrypted when we store
                    it).'
                  type: string
                target_url:
                  description: The destination URL that webhook payloads will be POST'ed
                    to.
                  type: string
                templates:
                  description: None
                  items:
                    $ref: '#/components/schemas/_webhooks__owner___repo___templates'
                  title: TemplatesList
                  type: array
                verify_ssl:
                  description: If enabled, SSL certificates is verified when webhooks
                    are sent. It's recommended to leave this enabled as not verifying
                    the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle
                    (MITM) attacks.
                  type: boolean
              required:
              - events
              - target_url
              - templates
              title: WebhooksCreate
              type: object
        required: false
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryWebhook'
          description: Created the specified webhook
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Create a specific webhook in a repository.
      tags:
      - webhooks
      x-codegen-request-body-name: data
  /webhooks/{owner}/{repo}/{identifier}/:
    delete:
      description: Delete a specific webhook in a repository.
      operationId: webhooks_delete
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted the specified webhook successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: The webhook cannot be deleted
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Delete a specific webhook in a repository.
      tags:
      - webhooks
    get:
      description: Views for working with repository webhooks.
      operationId: webhooks_read
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryWebhook'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Views for working with repository webhooks.
      tags:
      - webhooks
    patch:
      description: Update a specific webhook in a repository.
      operationId: webhooks_partial_update
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: path
        name: repo
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/WebhooksPartialUpdate'
        content:
          application/json:
            schema:
              example:
                package_query: package_query
                request_content_type: request_content_type
                is_active: true
                verify_ssl: true
                signature_key: signature_key
                target_url: target_url
                templates:
                - template: template
                  event: event
                - template: template
                  event: event
                secret_header: secret_header
                secret_value: secret_value
                request_body_format: 0
                request_body_template_format: 6
                events:
                - events
                - events
              properties:
                events:
                  description: None
                  items:
                    description: ""
                    type: string
                  title: EventsList
                  type: array
                is_active:
                  description: If enabled, the webhook will trigger on events and
                    send payloads to the configured target URL.
                  type: boolean
                package_query:
                  description: The package-based search query for webhooks to fire.
                    This uses the same syntax as the standard search used for repositories,
                    and also supports boolean logic operators such as OR/AND/NOT and
                    parentheses for grouping. If a package does not match, the webhook
                    will not fire.
                  type: string
                request_body_format:
                  description: The format of the payloads for webhook requests.
                  type: integer
                request_body_template_format:
                  description: The format of the payloads for webhook requests.
                  type: integer
                request_content_type:
                  description: 'The value that will be sent for the ''Content Type''
                    header. '
                  type: string
                secret_header:
                  description: The header to send the predefined secret in. This must
                    be unique from existing headers or it won't be sent. You can use
                    this as a form of authentication on the endpoint side.
                  type: string
                secret_value:
                  description: 'The value for the predefined secret (note: this is
                    treated as a passphrase and is encrypted when we store it). You
                    can use this as a form of authentication on the endpoint side.'
                  type: string
                signature_key:
                  description: 'The value for the signature key - This is used to
                    generate an HMAC-based hex digest of the request body, which we
                    send as the X-Cloudsmith-Signature header so that you can ensure
                    that the request wasn''t modified by a malicious party (note:
                    this is treated as a passphrase and is encrypted when we store
                    it).'
                  type: string
                target_url:
                  description: The destination URL that webhook payloads will be POST'ed
                    to.
                  type: string
                templates:
                  description: None
                  items:
                    $ref: '#/components/schemas/_webhooks__owner___repo___templates'
                  title: TemplatesList
                  type: array
                verify_ssl:
                  description: If enabled, SSL certificates is verified when webhooks
                    are sent. It's recommended to leave this enabled as not verifying
                    the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle
                    (MITM) attacks.
                  type: boolean
              title: WebhooksPartialUpdate
              type: object
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryWebhook'
          description: Updated the specified webhook
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Request could not be processed (see detail)
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Owner namespace or repository not found
        "422":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: Missing or invalid parameters (see detail)
      security:
      - token: []
      - apikey: []
      - csrf_token: []
      summary: Update a specific webhook in a repository.
      tags:
      - webhooks
      x-codegen-request-body-name: data
components:
  requestBodies:
    PackagesUploadConan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadConan'
      required: false
    PackagesValidate_uploadNpm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadNpm'
      required: false
    PackagesValidate_uploadNuget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadNuget'
      required: false
    FilesValidate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilesValidate'
      required: false
    PackagesMove:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesMove'
      required: false
    ReposRsaCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReposRsaCreate'
      required: false
    OrgsInvitesExtend:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgsInvitesExtend'
      required: false
    PackagesUploadP2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadP2'
      required: false
    PackagesUploadNpm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadNpm'
      required: false
    PackagesUploadRuby:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadRuby'
      required: false
    PackagesUploadDocker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadDocker'
      required: false
    PackagesValidate_uploadMaven:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadMaven'
      required: false
    PackagesValidate_uploadConda:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadConda'
      required: false
    ReposPartialUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReposPartialUpdate'
      required: false
    PackagesUploadCran:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadCran'
      required: false
    PackagesValidate_uploadRpm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadRpm'
      required: false
    PackagesValidate_uploadLuarocks:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadLuarocks'
      required: false
    PackagesValidate_uploadVagrant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadVagrant'
      required: false
    ReposGpgCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReposGpgCreate'
      required: false
    PackagesUploadPython:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadPython'
      required: false
    OrgsInvitesCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgsInvitesCreate'
      required: false
    PackagesUploadComposer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadComposer'
      required: false
    PackagesValidate_uploadConan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadConan'
      required: false
    FilesCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilesCreate'
      required: false
    PackagesUploadGo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadGo'
      required: false
    PackagesUploadTerraform:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadTerraform'
      required: false
    PackagesValidate_uploadDart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadDart'
      required: false
    OrgsTeamsCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgsTeamsCreate'
      required: false
    OrgsTeamsPartialUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgsTeamsPartialUpdate'
      required: false
    PackagesUploadRpm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadRpm'
      required: false
    PackagesValidate_uploadCargo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadCargo'
      required: false
    FilesComplete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilesComplete'
      required: false
    PackagesUploadCargo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadCargo'
      required: false
    PackagesValidate_uploadP2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadP2'
      required: false
    PackagesValidate_uploadPython:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadPython'
      required: false
    PackagesUploadDeb:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadDeb'
      required: false
    PackagesUploadHelm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadHelm'
      required: false
    PackagesUploadLuarocks:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadLuarocks'
      required: false
    EntitlementsPartialUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitlementsPartialUpdate'
      required: false
    UserTokenCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTokenCreate'
      required: false
    PackagesValidate_uploadRaw:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadRaw'
      required: false
    OrgsSaml_group_syncCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgsSaml_group_syncCreate'
      required: false
    PackagesValidate_uploadAlpine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadAlpine'
      required: false
    PackagesValidate_uploadRuby:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadRuby'
      required: false
    PackagesCopy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesCopy'
      required: false
    WebhooksCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhooksCreate'
      required: false
    PackagesValidate_uploadCran:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadCran'
      required: false
    PackagesQuarantine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesQuarantine'
      required: false
    PackagesUploadConda:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadConda'
      required: false
    PackagesUploadAlpine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadAlpine'
      required: false
    PackagesUploadRaw:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadRaw'
      required: false
    PackagesUploadMaven:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadMaven'
      required: false
    WebhooksPartialUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhooksPartialUpdate'
      required: false
    PackagesUploadCocoapods:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadCocoapods'
      required: false
    PackagesValidate_uploadTerraform:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadTerraform'
      required: false
    EntitlementsSync:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitlementsSync'
      required: false
    PackagesUploadNuget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadNuget'
      required: false
    EntitlementsCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitlementsCreate'
      required: false
    FilesAbort:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilesAbort'
      required: false
    PackagesValidate_uploadHelm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadHelm'
      required: false
    PackagesValidate_uploadComposer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadComposer'
      required: false
    PackagesUploadVagrant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadVagrant'
      required: false
    PackagesValidate_uploadCocoapods:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadCocoapods'
      required: false
    PackagesTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesTag'
      required: false
    EntitlementsRefresh:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitlementsRefresh'
      required: false
    PackagesValidate_uploadDeb:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadDeb'
      required: false
    PackagesValidate_uploadGo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadGo'
      required: false
    ReposCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReposCreate'
      required: false
    PackagesValidate_uploadDocker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesValidate_uploadDocker'
      required: false
    PackagesUploadDart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUploadDart'
      required: false
  schemas:
    OrganizationInviteExtend:
      example:
        expires_at: expires_at
        role: Owner
        org: org
        user_url: user_url
        inviter: inviter
        inviter_url: inviter_url
        slug_perm: slug_perm
        user: user
        email: email
      properties:
        email:
          description: ""
          type: string
        expires_at:
          description: ""
          type: string
        inviter:
          description: ""
          type: string
        inviter_url:
          description: ""
          type: string
        org:
          description: ""
          type: string
        role:
          description: ""
          enum:
          - Owner
          - Manager
          - Member
          - Collaborator
          type: string
        slug_perm:
          description: ""
          type: string
        user:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
      title: OrganizationInviteExtend
      type: object
    OrganizationMembership:
      example:
        joined_at: joined_at
        last_login_at: last_login_at
        role: Owner
        visibility: Public
        user_id: user_id
        user_name: user_name
        user_url: user_url
        user: user
        email: email
        has_two_factor: true
      properties:
        email:
          description: ""
          type: string
        has_two_factor:
          description: ""
          type: boolean
        joined_at:
          description: ""
          type: string
        last_login_at:
          description: ""
          type: string
        role:
          description: ""
          enum:
          - Owner
          - Manager
          - Member
          - Collaborator
          type: string
        user:
          description: ""
          type: string
        user_id:
          description: ""
          type: string
        user_name:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
        visibility:
          description: ""
          enum:
          - Public
          - Private
          type: string
      title: OrganizationMembership
      type: object
    _repos__gpg_keys:
      example:
        public_key: public_key
        default: true
        fingerprint: fingerprint
        active: true
        created_at: created_at
        comment: comment
        fingerprint_short: fingerprint_short
      properties:
        active:
          description: If selected this is the active key for this repository.
          type: boolean
        comment:
          description: ""
          type: string
        created_at:
          description: ""
          type: string
        default:
          description: If selected this is the default key for this repository.
          type: boolean
        fingerprint:
          description: The long identifier used by GPG for this key.
          type: string
        fingerprint_short:
          description: ""
          type: string
        public_key:
          description: The public key given to repository users.
          type: string
      type: object
    PackagesUploadConan:
      example:
        republish: true
        name: conan_package.tgz
        metadata_file: y1234456789a
        package_file: x123456789a
        conan_prefix: my-repository
        version: 1.0.0
        conan_channel: alpha
        info_file: y1234456789b
        manifest_file: y1234456789c
        tags: tags
      properties:
        conan_channel:
          description: Conan channel.
          example: alpha
          type: string
        conan_prefix:
          description: Conan prefix (User).
          example: my-repository
          type: string
        info_file:
          description: The info file is an python file containing the package metadata.
          example: y1234456789b
          type: string
        manifest_file:
          description: The info file is an python file containing the package metadata.
          example: y1234456789c
          type: string
        metadata_file:
          description: The conan file is an python file containing the package metadata.
          example: y1234456789a
          type: string
        name:
          description: The name of this package.
          example: conan_package.tgz
          type: string
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: 1.0.0
          type: string
      required:
      - info_file
      - manifest_file
      - metadata_file
      - package_file
      title: PackagesUploadConan
      type: object
    ConanPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: 1.0.0
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: conan_package.tgz
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        conan_prefix: my-repository
        num_files: 1
        conan_channel: alpha
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        conan_channel:
          description: Conan channel.
          example: alpha
          type: string
        conan_prefix:
          description: Conan prefix (User).
          example: my-repository
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          example: conan_package.tgz
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          example: 1.0.0
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: ConanPackageUpload
      type: object
    PackagesValidate_uploadNpm:
      properties:
        npm_dist_tag:
          description: The default npm dist-tag for this package/version - This will
            replace any other package/version if they are using the same tag.
          example: latest
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadNpm
      type: object
    RpmPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: RpmPackageUpload
      type: object
    VulnerabilityScanResultsList:
      example:
        identifier: HKmoU6OHbyj4ha3u
        max_severity: HIGH
        package:
          identifier: XEtJh5CTzcr3
          name: insecure-image
          version: 452fcef2bd33e962aa77c2adc65eb022c566c3e01759c432f7c2f9ec838a6b05
        has_vulnerabilities: true
        created_at: 2020-01-01T12:00:00.000000Z
        num_vulnerabilities: 2
        scan_id: 1
      properties:
        created_at:
          description: The time this scan result was stored.
          example: 2020-01-01T12:00:00.000000Z
          type: string
        has_vulnerabilities:
          description: Do the results contain any known vulnerabilities?
          example: true
          type: boolean
        identifier:
          description: ""
          example: HKmoU6OHbyj4ha3u
          type: string
        max_severity:
          description: ""
          enum:
          - Unknown
          - Low
          - Medium
          - High
          - Critical
          example: HIGH
          type: string
        num_vulnerabilities:
          description: ""
          example: 2
          type: integer
        package:
          description: ""
          example:
            identifier: XEtJh5CTzcr3
            name: insecure-image
            version: 452fcef2bd33e962aa77c2adc65eb022c566c3e01759c432f7c2f9ec838a6b05
          properties: {}
          type: object
        scan_id:
          description: ""
          example: 1
          type: integer
      required:
      - identifier
      - package
      - scan_id
      title: VulnerabilityScanResultsList
      type: object
    OrgsInvitesExtend:
      example:
        role: Owner
        inviter: inviter
        user: user
        email: email
      properties:
        email:
          description: None
          type: string
        inviter:
          description: None
          type: string
        role:
          description: None
          enum:
          - Owner
          - Manager
          - Member
          - Collaborator
          type: string
        user:
          description: None
          type: string
      title: OrgsInvitesExtend
      type: object
    PackagesUploadNpm:
      example:
        republish: true
        npm_dist_tag: latest
        package_file: y123456789
        tags: tags
      properties:
        npm_dist_tag:
          description: The default npm dist-tag for this package/version - This will
            replace any other package/version if they are using the same tag.
          example: latest
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadNpm
      type: object
    PackagesValidate_uploadMaven:
      properties:
        artifact_id:
          description: The ID of the artifact.
          example: cloudsmith-example
          type: string
        group_id:
          description: Artifact's group ID.
          example: io.cloudsmith.example
          type: string
        javadoc_file:
          description: Adds bundled Java documentation to the Maven package
          example: y1234456789c
          type: string
        package_file:
          description: The primary file for the package.
          example: y1234456789a
          type: string
        packaging:
          description: Artifact's Maven packaging type.
          type: string
        pom_file:
          description: The POM file is an XML file containing the Maven coordinates.
          example: y1234456789b
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        sources_file:
          description: Adds bundled Java source code to the Maven package.
          example: y1234456789d
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        tests_file:
          description: Adds bundled Java tests to the Maven package.
          example: y1234456789e
          type: string
        version:
          description: The raw version for this package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadMaven
      type: object
    NugetPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: NugetPackageUpload
      type: object
    PackagesValidate_uploadRpm:
      properties:
        distribution:
          description: The distribution to store the package for.
          example: el/7
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesValidate-uploadRpm
      type: object
    RubyPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: RubyPackageUpload
      type: object
    Status:
      properties:
        detail:
          description: An extended message for the response.
          type: string
      required:
      - detail
      title: Status
      type: object
    PackagesUploadPython:
      example:
        republish: true
        package_file: y123456789
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadPython
      type: object
    OrganizationGroupSync:
      example:
        role: role
        team: team
        slug_perm: slug_perm
        idp_value: idp_value
        idp_key: idp_key
      properties:
        idp_key:
          description: ""
          type: string
        idp_value:
          description: ""
          type: string
        role:
          description: "\n       User role within the team.\n\n        A `manager`\
            \ is capable of adding/removing others to/from the team, and\n       \
            \ can set the role of other users and other settings pertaining to the\n\
            \        team.\n\n        A 'member' is a normal user that inherits the\
            \ settings and privileges\n        assigned to the team.\n        "
          type: string
        slug_perm:
          description: ""
          type: string
        team:
          description: ""
          type: string
      required:
      - idp_key
      - idp_value
      - team
      title: OrganizationGroupSync
      type: object
    PackagesValidate_uploadConan:
      properties:
        conan_channel:
          description: Conan channel.
          example: alpha
          type: string
        conan_prefix:
          description: Conan prefix (User).
          example: my-repository
          type: string
        info_file:
          description: The info file is an python file containing the package metadata.
          example: y1234456789b
          type: string
        manifest_file:
          description: The info file is an python file containing the package metadata.
          example: y1234456789c
          type: string
        metadata_file:
          description: The conan file is an python file containing the package metadata.
          example: y1234456789a
          type: string
        name:
          description: The name of this package.
          example: conan_package.tgz
          type: string
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: 1.0.0
          type: string
      required:
      - info_file
      - manifest_file
      - metadata_file
      - package_file
      title: PackagesValidate-uploadConan
      type: object
    P2PackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: P2PackageUpload
      type: object
    PackagesUploadTerraform:
      example:
        republish: true
        package_file: z123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: z123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadTerraform
      type: object
    DockerPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: DockerPackageUpload
      type: object
    PackagesUploadRpm:
      example:
        republish: true
        distribution: el/7
        package_file: y123456789
        tags: tags
      properties:
        distribution:
          description: The distribution to store the package for.
          example: el/7
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesUploadRpm
      type: object
    Namespace:
      example:
        type_name: type_name
        name: name
        slug_perm: slug_perm
        slug: slug
      properties:
        name:
          description: ""
          type: string
        slug:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        type_name:
          description: ""
          type: string
      title: Namespace
      type: object
    EntitlementUsageMetrics:
      example:
        tokens:
          active: 1
          bandwidth:
            average:
              display: 11 B
              units: bytes
              value: 11
            highest:
              display: 11 B
              units: bytes
              value: 11
            lowest:
              display: 11 B
              units: bytes
              value: 11
            total:
              display: 11 B
              units: bytes
              value: 11
          downloads:
            average:
              value: 5
            highest:
              value: 5
            lowest:
              value: 5
            total:
              value: 5
          inactive: 0
          total: 0
      properties:
        tokens:
          description: ""
          example:
            active: 1
            bandwidth:
              average:
                display: 11 B
                units: bytes
                value: 11
              highest:
                display: 11 B
                units: bytes
                value: 11
              lowest:
                display: 11 B
                units: bytes
                value: 11
              total:
                display: 11 B
                units: bytes
                value: 11
            downloads:
              average:
                value: 5
              highest:
                value: 5
              lowest:
                value: 5
              total:
                value: 5
            inactive: 0
            total: 0
          properties: {}
          type: object
      required:
      - tokens
      title: EntitlementUsageMetrics
      type: object
    PackageCopy:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        tags: '{}'
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: The repository the package will be copied to.
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags:
          description: All tags on the package, grouped by tag type. This includes
            immutable tags, but doesn't distinguish them from mutable. To see which
            tags are immutable specifically, see the tags_immutable field.
          properties: {}
          type: object
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: PackageCopy
      type: object
    PackagesValidate_uploadP2:
      properties:
        package_file:
          description: The primary file for the package.
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadP2
      type: object
    Distribution:
      example:
        format_url: format_url
        versions:
        - name: name
          slug: slug
        - name: name
          slug: slug
        format: format
        name: name
        variants: variants
        self_url: self_url
        slug: slug
      properties:
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        name:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        slug:
          description: The slug identifier for this distribution
          type: string
        variants:
          description: ""
          type: string
        versions:
          description: A list of the versions for this distribution
          items:
            $ref: '#/components/schemas/_distros__versions'
          title: VersionsList
          type: array
      required:
      - name
      title: Distribution
      type: object
    PackagesUploadDeb:
      example:
        sources_file: y123456789
        republish: true
        changes_file: y123456789
        distribution: ubuntu/xenial
        package_file: y123456789
        tags: tags
      properties:
        changes_file:
          description: The changes archive containing the changes made to the source
            and debian packaging files
          example: y123456789
          type: string
        distribution:
          description: The distribution to store the package for.
          example: ubuntu/xenial
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        sources_file:
          description: The sources archive containing the source code for the binary
          example: y123456789
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesUploadDeb
      type: object
    PackagesUploadHelm:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadHelm
      type: object
    Package:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 2
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        tags: '{}'
        license: license
        filename: filename
        size: 7
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 5
        status: 3
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 2
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 9
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags:
          description: All tags on the package, grouped by tag type. This includes
            immutable tags, but doesn't distinguish them from mutable. To see which
            tags are immutable specifically, see the tags_immutable field.
          properties: {}
          type: object
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: Package
      type: object
    RepositoryAuditLog:
      example:
        actor_kind: actor_kind
        object_slug_perm: object_slug_perm
        event_at: event_at
        uuid: uuid
        object_kind: object_kind
        actor: actor
        actor_slug_perm: actor_slug_perm
        actor_url: actor_url
        context: context
        actor_ip_address: actor_ip_address
        actor_location: '{}'
        event: event
        object: object
      properties:
        actor:
          description: ""
          type: string
        actor_ip_address:
          description: ""
          type: string
        actor_kind:
          description: ""
          type: string
        actor_location:
          description: ""
          properties: {}
          type: object
        actor_slug_perm:
          description: ""
          type: string
        actor_url:
          description: ""
          type: string
        context:
          description: ""
          type: string
        event:
          description: ""
          type: string
        event_at:
          description: ""
          type: string
        object:
          description: ""
          type: string
        object_kind:
          description: ""
          type: string
        object_slug_perm:
          description: ""
          type: string
        uuid:
          description: ""
          type: string
      required:
      - actor
      - actor_ip_address
      - actor_location
      - actor_slug_perm
      - context
      - event
      - event_at
      - object
      - object_kind
      - object_slug_perm
      title: RepositoryAuditLog
      type: object
    TerraformPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: TerraformPackageUpload
      type: object
    RepositoryRsaKey:
      example:
        public_key: public_key
        default: true
        fingerprint: fingerprint
        active: true
        created_at: created_at
        fingerprint_short: fingerprint_short
      properties:
        active:
          description: If selected this is the active key for this repository.
          type: boolean
        created_at:
          description: ""
          type: string
        default:
          description: If selected this is the default key for this repository.
          type: boolean
        fingerprint:
          description: The long identifier used by RSA for this key.
          type: string
        fingerprint_short:
          description: ""
          type: string
        public_key:
          description: The public key given to repository users.
          type: string
      title: RepositoryRsaKey
      type: object
    UserTokenCreate:
      example:
        password: password
        email: email
      properties:
        email:
          description: Email address to authenticate with
          type: string
        password:
          description: Password to authenticate with
          type: string
      title: UserTokenCreate
      type: object
    _packages__owner___repo___architectures:
      example:
        name: name
        description: description
      properties:
        description:
          description: ""
          type: string
        name:
          description: ""
          type: string
      type: object
    PackagesValidate_uploadRaw:
      properties:
        content_type:
          description: A custom content/media (also known as MIME) type to be sent
            when downloading this file. By default Cloudsmith will attempt to detect
            the type, but if you need to override it, you can specify it here.
          type: string
        description:
          description: A textual description of this package.
          example: Everything about packaging files.
          type: string
        name:
          description: The name of this package.
          example: my-package
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        summary:
          description: A one-liner synopsis of this package.
          example: My Package File
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadRaw
      type: object
    Organization:
      example:
        country: country
        name: name
        created_at: created_at
        tagline: tagline
        location: location
        slug_perm: slug_perm
        slug: slug
      properties:
        country:
          description: ""
          type: string
        created_at:
          description: ""
          type: string
        location:
          description: The city/town/area your organization is based in.
          type: string
        name:
          description: A descriptive name for your organization.
          type: string
        slug:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        tagline:
          description: A short public descriptive for your organization.
          type: string
      title: Organization
      type: object
    QuotaHistory:
      example:
        history:
        - days: 30
          display:
            downloaded:
              limit: 2 TB
              percentage: 0.0%
              used: 0 B
            storage_used:
              limit: 1 TB
              percentage: 0.109%
              used: 1.1 GB
            uploaded:
              limit: Unlimited
              percentage: ∞
              used: 0 B
          end: 2020-10-10 12:35:23+00:00
          plan: Package (Velocity)
          raw:
            downloaded:
              limit: 2199023255552
              percentage: 0
              used: 0
            storage_used:
              limit: 1099511627776
              percentage: 0.109
              used: 1197653687
            uploaded:
              limit: ""
              percentage: 0
              used: 0
          start: 2020-09-10 12:35:23+00:00
      properties:
        history:
          description: ""
          example:
          - days: 30
            display:
              downloaded:
                limit: 2 TB
                percentage: 0.0%
                used: 0 B
              storage_used:
                limit: 1 TB
                percentage: 0.109%
                used: 1.1 GB
              uploaded:
                limit: Unlimited
                percentage: ∞
                used: 0 B
            end: 2020-10-10 12:35:23+00:00
            plan: Package (Velocity)
            raw:
              downloaded:
                limit: 2199023255552
                percentage: 0
                used: 0
              storage_used:
                limit: 1099511627776
                percentage: 0.109
                used: 1197653687
              uploaded:
                limit: ""
                percentage: 0
                used: 0
            start: 2020-09-10 12:35:23+00:00
          items:
            $ref: '#/components/schemas/QuotaHistory_history'
          title: HistoryList
          type: array
      required:
      - history
      title: QuotaHistory
      type: object
    OrgsSaml_group_syncCreate:
      properties:
        idp_key:
          description: None
          type: string
        idp_value:
          description: None
          type: string
        organization:
          description: None
          type: string
        role:
          description: "\n       User role within the team.\n\n        A `manager`\
            \ is capable of adding/removing others to/from the team, and\n       \
            \ can set the role of other users and other settings pertaining to the\n\
            \        team.\n\n        A 'member' is a normal user that inherits the\
            \ settings and privileges\n        assigned to the team.\n        "
          type: string
        team:
          description: None
          type: string
      required:
      - idp_key
      - idp_value
      - organization
      - team
      title: OrgsSaml-group-syncCreate
      type: object
    PackagesValidate_uploadAlpine:
      properties:
        distribution:
          description: The distribution to store the package for.
          example: alpine/v3.8
          type: string
        package_file:
          description: The primary file for the package.
          example: a123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesValidate-uploadAlpine
      type: object
    RepositoryPrivilegeList:
      example:
        privileges: privileges
      properties:
        privileges:
          description: List of objects with explicit privileges to the repository.
          type: string
      title: RepositoryPrivilegeList
      type: object
    DartPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: DartPackageUpload
      type: object
    PythonPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: PythonPackageUpload
      type: object
    VagrantPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: "1.0"
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: tcl
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        provider: virtualbox
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          example: tcl
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        provider:
          description: The virtual machine provider for the box.
          example: virtualbox
          type: string
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      required:
      - name
      - provider
      - version
      title: VagrantPackageUpload
      type: object
    PackageStatus:
      example:
        status_str: status_str
        sync_progress: 1
        is_sync_awaiting: true
        is_sync_completed: true
        self_url: self_url
        is_sync_in_flight: true
        is_sync_in_progress: true
        stage_str: stage_str
        stage_updated_at: stage_updated_at
        stage: 0
        is_downloadable: true
        sync_finished_at: sync_finished_at
        is_sync_failed: true
        is_quarantined: true
        status_reason: status_reason
        status: 6
        status_updated_at: status_updated_at
      properties:
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        self_url:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
      title: PackageStatus
      type: object
    CranPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: CranPackageUpload
      type: object
    CocoapodsPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: CocoapodsPackageUpload
      type: object
    PackagesUploadAlpine:
      example:
        republish: true
        distribution: alpine/v3.8
        package_file: a123456789
        tags: tags
      properties:
        distribution:
          description: The distribution to store the package for.
          example: alpine/v3.8
          type: string
        package_file:
          description: The primary file for the package.
          example: a123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesUploadAlpine
      type: object
    VulnerabilityScanResults:
      example:
        identifier: HKmoU6OHbyj4ha3u
        max_severity: HIGH
        package:
          identifier: XEtJh5CTzcr3
          name: insecure-image
          version: d391c46c9c1a3b9a4c772213bc07e8d9e283775fddf6c7931f702f65cf7e6469
        has_vulnerabilities: true
        scan:
          results:
          - affected_version: 4.19.67-2+deb10u2
            description: A memory leak in the rsi_send_beacon() function in drivers/net/wireless/rsi/rsi_91x_mgmt.c
              in the Linux kernel through 5.3.11 allows attackers to cause a denial
              of service (memory consumption) by triggering rsi_prepare_beacon() failures,
              aka CID-d563131ef23c.
            fixed_version: 4.19.98-1
            package_name: linux-libc-dev
            references:
            - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19071
            - https://github.com/torvalds/linux/commit/d563131ef23cbc756026f839a82598c8445bc45f
            - https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O3PSDE6PTOTVBK2YTKB2TFQP2SUBVSNF/
            - https://security.netapp.com/advisory/ntap-20191205-0001/
            - https://usn.ubuntu.com/4258-1/
            - https://usn.ubuntu.com/usn/usn-4258-1
            severity: HIGH
            severity_source: debian
            vulnerability_id: CVE-2019-19071
          - affected_version: 5.0-4
            description: ""
            fixed_version: ""
            package_name: bash
            references: []
            severity: LOW
            severity_source: debian
            vulnerability_id: TEMP-0841856-B18BAF
          target: /oci (debian 10.2)
          type: debian
        created_at: 2020-01-01T12:00:00.000000Z
        num_vulnerabilities: 2
        scan_id: 1
      properties:
        created_at:
          description: The time this scan result was stored.
          example: 2020-01-01T12:00:00.000000Z
          type: string
        has_vulnerabilities:
          description: Do the results contain any known vulnerabilities?
          example: true
          type: boolean
        identifier:
          description: ""
          example: HKmoU6OHbyj4ha3u
          type: string
        max_severity:
          description: ""
          enum:
          - Unknown
          - Low
          - Medium
          - High
          - Critical
          example: HIGH
          type: string
        num_vulnerabilities:
          description: ""
          example: 2
          type: integer
        package:
          description: ""
          example:
            identifier: XEtJh5CTzcr3
            name: insecure-image
            version: d391c46c9c1a3b9a4c772213bc07e8d9e283775fddf6c7931f702f65cf7e6469
          properties: {}
          type: object
        scan:
          description: ""
          example:
            results:
            - affected_version: 4.19.67-2+deb10u2
              description: A memory leak in the rsi_send_beacon() function in drivers/net/wireless/rsi/rsi_91x_mgmt.c
                in the Linux kernel through 5.3.11 allows attackers to cause a denial
                of service (memory consumption) by triggering rsi_prepare_beacon()
                failures, aka CID-d563131ef23c.
              fixed_version: 4.19.98-1
              package_name: linux-libc-dev
              references:
              - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19071
              - https://github.com/torvalds/linux/commit/d563131ef23cbc756026f839a82598c8445bc45f
              - https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O3PSDE6PTOTVBK2YTKB2TFQP2SUBVSNF/
              - https://security.netapp.com/advisory/ntap-20191205-0001/
              - https://usn.ubuntu.com/4258-1/
              - https://usn.ubuntu.com/usn/usn-4258-1
              severity: HIGH
              severity_source: debian
              vulnerability_id: CVE-2019-19071
            - affected_version: 5.0-4
              description: ""
              fixed_version: ""
              package_name: bash
              references: []
              severity: LOW
              severity_source: debian
              vulnerability_id: TEMP-0841856-B18BAF
            target: /oci (debian 10.2)
            type: debian
          properties: {}
          type: object
        scan_id:
          description: ""
          example: 1
          type: integer
      required:
      - identifier
      - package
      - scan
      - scan_id
      title: VulnerabilityScanResults
      type: object
    HelmPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: HelmPackageUpload
      type: object
    PackagesUploadRaw:
      example:
        summary: My Package File
        content_type: content_type
        republish: true
        name: my-package
        description: Everything about packaging files.
        package_file: y123456789
        version: "1.0"
        tags: tags
      properties:
        content_type:
          description: A custom content/media (also known as MIME) type to be sent
            when downloading this file. By default Cloudsmith will attempt to detect
            the type, but if you need to override it, you can specify it here.
          type: string
        description:
          description: A textual description of this package.
          example: Everything about packaging files.
          type: string
        name:
          description: The name of this package.
          example: my-package
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        summary:
          description: A one-liner synopsis of this package.
          example: My Package File
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
      required:
      - package_file
      title: PackagesUploadRaw
      type: object
    PackagesUploadMaven:
      example:
        sources_file: y1234456789d
        tests_file: y1234456789e
        republish: true
        group_id: io.cloudsmith.example
        javadoc_file: y1234456789c
        packaging: packaging
        artifact_id: cloudsmith-example
        package_file: y1234456789a
        version: version
        pom_file: y1234456789b
        tags: tags
      properties:
        artifact_id:
          description: The ID of the artifact.
          example: cloudsmith-example
          type: string
        group_id:
          description: Artifact's group ID.
          example: io.cloudsmith.example
          type: string
        javadoc_file:
          description: Adds bundled Java documentation to the Maven package
          example: y1234456789c
          type: string
        package_file:
          description: The primary file for the package.
          example: y1234456789a
          type: string
        packaging:
          description: Artifact's Maven packaging type.
          type: string
        pom_file:
          description: The POM file is an XML file containing the Maven coordinates.
          example: y1234456789b
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        sources_file:
          description: Adds bundled Java source code to the Maven package.
          example: y1234456789d
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        tests_file:
          description: Adds bundled Java tests to the Maven package.
          example: y1234456789e
          type: string
        version:
          description: The raw version for this package.
          type: string
      required:
      - package_file
      title: PackagesUploadMaven
      type: object
    ResourcesRateCheck:
      example:
        resources:
          core:
            interval: 5.123456789
            limit: 3600
            remaining: 3595
            reset: 1660736546
            reset_iso_8601: 2022-08-17T11:42:26.298357+00:00
            throttled: false
      properties:
        resources:
          description: Rate limit values per resource
          example:
            core:
              interval: 5.123456789
              limit: 3600
              remaining: 3595
              reset: 1660736546
              reset_iso_8601: 2022-08-17T11:42:26.298357+00:00
              throttled: false
          properties: {}
          type: object
      title: ResourcesRateCheck
      type: object
    OrganizationTeamMembers_members:
      example:
        role: role
        user: user
      properties:
        role:
          description: ""
          type: string
        user:
          description: ""
          type: string
      type: object
    NamespaceAuditLog:
      example:
        target_slug_perm: target_slug_perm
        actor_kind: actor_kind
        object_slug_perm: object_slug_perm
        event_at: event_at
        uuid: uuid
        object_kind: object_kind
        target: target
        actor: actor
        actor_slug_perm: actor_slug_perm
        actor_url: actor_url
        context: context
        actor_ip_address: actor_ip_address
        actor_location: '{}'
        target_kind: target_kind
        event: event
        object: object
      properties:
        actor:
          description: ""
          type: string
        actor_ip_address:
          description: ""
          type: string
        actor_kind:
          description: ""
          type: string
        actor_location:
          description: ""
          properties: {}
          type: object
        actor_slug_perm:
          description: ""
          type: string
        actor_url:
          description: ""
          type: string
        context:
          description: ""
          type: string
        event:
          description: ""
          type: string
        event_at:
          description: ""
          type: string
        object:
          description: ""
          type: string
        object_kind:
          description: ""
          type: string
        object_slug_perm:
          description: ""
          type: string
        target:
          description: ""
          type: string
        target_kind:
          description: ""
          type: string
        target_slug_perm:
          description: ""
          type: string
        uuid:
          description: ""
          type: string
      required:
      - actor
      - actor_ip_address
      - actor_location
      - actor_slug_perm
      - context
      - event
      - event_at
      - object
      - object_kind
      - object_slug_perm
      - target
      - target_kind
      title: NamespaceAuditLog
      type: object
    UserBrief:
      example:
        authenticated: true
        profile_url: profile_url
        name: Example User
        slug_perm: x1y2z3z4y
        email: user@example.com
        self_url: self_url
        slug: example-user
      properties:
        authenticated:
          description: If true then you're logged in as a user.
          example: true
          type: boolean
        email:
          description: Your email address that we use to contact you. This is only
            visible to you.
          example: user@example.com
          type: string
        name:
          description: The full name of the user (if any).
          example: Example User
          type: string
        profile_url:
          description: The URL for the full profile of the user.
          type: string
        self_url:
          description: ""
          type: string
        slug:
          description: ""
          example: example-user
          type: string
        slug_perm:
          description: ""
          example: x1y2z3z4y
          type: string
      title: UserBrief
      type: object
    PackagesUploadNuget:
      example:
        republish: true
        symbols_file: y1234456789b
        package_file: y1234456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: y1234456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        symbols_file:
          description: Attaches a symbols file to the package.
          example: y1234456789b
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadNuget
      type: object
    PackageResync:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        tags: '{}'
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags:
          description: All tags on the package, grouped by tag type. This includes
            immutable tags, but doesn't distinguish them from mutable. To see which
            tags are immutable specifically, see the tags_immutable field.
          properties: {}
          type: object
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: PackageResync
      type: object
    PackagesValidate_uploadHelm:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadHelm
      type: object
    PackagesValidate_uploadComposer:
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadComposer
      type: object
    PackagesUploadVagrant:
      example:
        republish: true
        provider: virtualbox
        name: tcl
        package_file: y123456789x
        version: "1.0"
        tags: tags
      properties:
        name:
          description: The name of this package.
          example: tcl
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789x
          type: string
        provider:
          description: The virtual machine provider for the box.
          example: virtualbox
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
      required:
      - name
      - package_file
      - provider
      - version
      title: PackagesUploadVagrant
      type: object
    PackagesValidate_uploadCocoapods:
      properties:
        package_file:
          description: The primary file for the package.
          example: z123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadCocoapods
      type: object
    RepositoryTokenSync_tokens:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: metadata
        clients: 0
        limit_bandwidth_unit: limit_bandwidth_unit
        scheduled_reset_at: scheduled_reset_at
        usage: usage
        limit_bandwidth: 5
        created_at: created_at
        limit_num_clients: 5
        eula_accepted_at: eula_accepted_at
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        default: true
        updated_at: updated_at
        downloads: 6
        user_url: user_url
        limit_date_range_from: limit_date_range_from
        reset_url: reset_url
        limit_num_downloads: 2
        eula_required: true
        refresh_url: refresh_url
        scheduled_reset_period: scheduled_reset_period
        identifier: 1
        is_active: true
        eula_accepted: '{}'
        eula_accepted_from: eula_accepted_from
        created_by_url: created_by_url
        is_limited: true
        slug_perm: slug_perm
        created_by: created_by
        enable_url: enable_url
        self_url: self_url
        token: token
        updated_by_url: updated_by_url
        disable_url: disable_url
        name: name
        updated_by: updated_by
        has_limits: true
        user: user
      properties:
        clients:
          description: ""
          type: integer
        created_at:
          description: The datetime the token was updated at.
          type: string
        created_by:
          description: ""
          type: string
        created_by_url:
          description: ""
          type: string
        default:
          description: If selected this is the default token for this repository.
          type: boolean
        disable_url:
          description: ""
          type: string
        downloads:
          description: ""
          type: integer
        enable_url:
          description: ""
          type: string
        eula_accepted:
          description: ""
          properties: {}
          type: object
        eula_accepted_at:
          description: The datetime the EULA was accepted at.
          type: string
        eula_accepted_from:
          description: ""
          type: string
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        has_limits:
          description: ""
          type: boolean
        identifier:
          description: ""
          type: integer
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        is_limited:
          description: ""
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: ""
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: ""
          type: string
        name:
          description: ""
          type: string
        refresh_url:
          description: ""
          type: string
        reset_url:
          description: ""
          type: string
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        token:
          description: ""
          type: string
        updated_at:
          description: The datetime the token was updated at.
          type: string
        updated_by:
          description: ""
          type: string
        updated_by_url:
          description: ""
          type: string
        usage:
          description: ""
          type: string
        user:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
      type: object
    EntitlementsRefresh:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: '{}'
        is_active: true
        limit_bandwidth_unit: Byte
        scheduled_reset_at: scheduled_reset_at
        limit_bandwidth: 0
        limit_num_clients: 6
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        token: token
        limit_date_range_from: limit_date_range_from
        limit_num_downloads: 1
        eula_required: true
        scheduled_reset_period: Never Reset
      properties:
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: None
          enum:
          - Byte
          - Kilobyte
          - Megabyte
          - Gigabyte
          - Terabyte
          - Petabyte
          - Exabyte
          - Zettabyte
          - Yottabyte
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: None
          properties: {}
          type: object
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: None
          enum:
          - Never Reset
          - Daily
          - Weekly
          - Fortnightly
          - Monthly
          - Bi-Monthly
          - Quarterly
          - Every 6 months
          - Annual
          type: string
        token:
          description: None
          type: string
      title: EntitlementsRefresh
      type: object
    PackagesValidate_uploadDeb:
      properties:
        changes_file:
          description: The changes archive containing the changes made to the source
            and debian packaging files
          example: y123456789
          type: string
        distribution:
          description: The distribution to store the package for.
          example: ubuntu/xenial
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        sources_file:
          description: The sources archive containing the source code for the binary
          example: y123456789
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - distribution
      - package_file
      title: PackagesValidate-uploadDeb
      type: object
    PackagesValidate_uploadGo:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadGo
      type: object
    PackageFilePartsUpload:
      example:
        identifier: identifier
        upload_querystring: upload_querystring
        upload_url: upload_url
      properties:
        identifier:
          description: The identifier for the file to use uploading parts.
          type: string
        upload_querystring:
          description: The querystring to use for the next-step PUT upload.
          type: string
        upload_url:
          description: The URL to use for the next-step PUT upload
          type: string
      title: PackageFilePartsUpload
      type: object
    Repository:
      example:
        scan_packages: Admin
        index_files: true
        repository_type: 5
        use_source_packages: true
        package_group_count: 1
        repository_type_str: Public
        use_vulnerability_scanning: true
        resync_own: true
        slug: slug
        raw_package_index_enabled: true
        namespace_url: namespace_url
        slug_perm: slug_perm
        deleted_at: deleted_at
        replace_packages: Admin
        user_entitlements_enabled: true
        num_downloads: 0
        package_count: 6
        use_default_cargo_upstream: true
        size: 5
        cdn_url: cdn_url
        scan_own: true
        name: name
        replace_packages_by_default: true
        default_privilege: Admin
        delete_own: true
        is_private: true
        move_packages: Admin
        show_setup_all: true
        created_at: created_at
        description: description
        docker_refresh_tokens_enabled: true
        proxy_npmjs: true
        move_own: true
        delete_packages: Admin
        is_open_source: true
        copy_own: true
        proxy_pypi: true
        contextual_auth_realm: true
        resync_packages: Admin
        view_statistics: Admin
        copy_packages: Admin
        self_html_url: self_html_url
        self_url: self_url
        use_noarch_packages: true
        storage_region: storage_region
        size_str: size_str
        gpg_keys:
        - public_key: public_key
          default: true
          fingerprint: fingerprint
          active: true
          created_at: created_at
          comment: comment
          fingerprint_short: fingerprint_short
        - public_key: public_key
          default: true
          fingerprint: fingerprint
          active: true
          created_at: created_at
          comment: comment
          fingerprint_short: fingerprint_short
        is_public: true
        namespace: namespace
        use_debian_labels: true
        strict_npm_validation: true
        raw_package_index_signatures_enabled: true
      properties:
        cdn_url:
          description: Base URL from which packages and other artifacts are downloaded.
          type: string
        contextual_auth_realm:
          description: If checked, missing credentials for this repository where basic
            authentication is required shall present an enriched value in the 'WWW-Authenticate'
            header containing the namespace and repository. This can be useful for
            tooling such as SBT where the authentication realm is used to distinguish
            and disambiguate credentials.
          type: boolean
        copy_own:
          description: If checked, users can copy any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        copy_packages:
          description: This defines the minimum level of privilege required for a
            user to copy packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific copy setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        created_at:
          description: ""
          type: string
        default_privilege:
          description: This defines the default level of privilege that all of your
            organization members have for this repository. This does not include collaborators,
            but applies to any member of the org regardless of their own membership
            role (i.e. it applies to owners, managers and members). Be careful if
            setting this to admin, because any member will be able to change settings.
          enum:
          - Admin
          - Write
          - Read
          - None
          type: string
        delete_own:
          description: If checked, users can delete any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        delete_packages:
          description: This defines the minimum level of privilege required for a
            user to delete packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific delete
            setting.
          enum:
          - Admin
          - Write
          type: string
        deleted_at:
          description: ""
          type: string
        description:
          description: A description of the repository's purpose/contents.
          type: string
        docker_refresh_tokens_enabled:
          description: If checked, refresh tokens will be issued in addition to access
            tokens for Docker authentication. This allows unlimited extension of the
            lifetime of access tokens.
          type: boolean
        gpg_keys:
          description: ""
          items:
            $ref: '#/components/schemas/_repos__gpg_keys'
          title: Gpg keysList
          type: array
        index_files:
          description: If checked, files contained in packages will be indexed, which
            increase the synchronisation time required for packages. Note that it
            is recommended you keep this enabled unless the synchronisation time is
            significantly impacted.
          type: boolean
        is_open_source:
          description: ""
          type: boolean
        is_private:
          description: ""
          type: boolean
        is_public:
          description: ""
          type: boolean
        move_own:
          description: If checked, users can move any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        move_packages:
          description: This defines the minimum level of privilege required for a
            user to move packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific move setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        name:
          description: A descriptive name for the repository.
          type: string
        namespace:
          description: Namespace to which this repository belongs.
          type: string
        namespace_url:
          description: API endpoint where data about this namespace can be retrieved.
          type: string
        num_downloads:
          description: The number of downloads for packages in the repository.
          type: integer
        package_count:
          description: The number of packages in the repository.
          type: integer
        package_group_count:
          description: The number of groups in the repository.
          type: integer
        proxy_npmjs:
          description: If checked, Npm packages that are not in the repository when
            requested by clients will automatically be proxied from the public npmjs.org
            registry. If there is at least one version for a package, others will
            not be proxied.
          type: boolean
        proxy_pypi:
          description: If checked, Python packages that are not in the repository
            when requested by clients will automatically be proxied from the public
            pypi.python.org registry. If there is at least one version for a package,
            others will not be proxied.
          type: boolean
        raw_package_index_enabled:
          description: If checked, HTML and JSON indexes will be generated that list
            all available raw packages in the repository.
          type: boolean
        raw_package_index_signatures_enabled:
          description: If checked, the HTML and JSON indexes will display raw package
            GPG signatures alongside the index packages.
          type: boolean
        replace_packages:
          description: This defines the minimum level of privilege required for a
            user to republish packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific republish
            setting. Please note that the user still requires the privilege to delete
            packages that will be replaced by the new package; otherwise the republish
            will fail.
          enum:
          - Admin
          - Write
          type: string
        replace_packages_by_default:
          description: If checked, uploaded packages will overwrite/replace any others
            with the same attributes (e.g. same version) by default. This only applies
            if the user has the required privilege for the republishing AND has the
            required privilege to delete existing packages that they don't own.
          type: boolean
        repository_type:
          description: The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible only
            to you or authorised delegates. Open-Source repositories are always visible
            to everyone and are restricted by licensing, but are free to use and come
            with generous bandwidth/storage. You can only select Open-Source at repository
            creation time.
          type: integer
        repository_type_str:
          description: The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible only
            to you or authorised delegates. Public repositories are free to use on
            all plans and visible to all Cloudsmith users.
          enum:
          - Public
          - Private
          - Open-Source
          type: string
        resync_own:
          description: If checked, users can resync any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        resync_packages:
          description: This defines the minimum level of privilege required for a
            user to resync packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific resync
            setting.
          enum:
          - Admin
          - Write
          type: string
        scan_own:
          description: If checked, users can scan any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        scan_packages:
          description: This defines the minimum level of privilege required for a
            user to scan packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific scan setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        self_html_url:
          description: Website URL for this repository.
          type: string
        self_url:
          description: API endpoint where data about this repository can be retrieved.
          type: string
        show_setup_all:
          description: If checked, the Set Me Up help for all formats will always
            be shown, even if you don't have packages of that type uploaded. Otherwise,
            help will only be shown for packages that are in the repository. For example,
            if you have uploaded only NuGet packages, then the Set Me Up help for
            NuGet packages will be shown only.
          type: boolean
        size:
          description: The calculated size of the repository.
          type: integer
        size_str:
          description: The calculated size of the repository (human readable).
          type: string
        slug:
          description: The slug identifies the repository in URIs.
          type: string
        slug_perm:
          description: The slug_perm immutably identifies the repository. It will
            never change once a repository has been created.
          type: string
        storage_region:
          description: The Cloudsmith region in which package files are stored.
          type: string
        strict_npm_validation:
          description: If checked, npm packages will be validated strictly to ensure
            the package matches specifcation. You can turn this off if you have packages
            that are old or otherwise mildly off-spec, but we can't guarantee the
            packages will work with npm-cli or other tooling correctly. Turn off at
            your own risk!
          type: boolean
        use_debian_labels:
          description: If checked, a 'Label' field will be present in Debian-based
            repositories. It will contain a string that identifies the entitlement
            token used to authenticate the repository, in the form of 'source=t-<identifier>';
            or 'source=none' if no token was used. You can use this to help with pinning.
          type: boolean
        use_default_cargo_upstream:
          description: If checked, dependencies of uploaded Cargo crates which do
            not set an explicit value for "registry" will be assumed to be available
            from crates.io. If unchecked, dependencies with unspecified "registry"
            values will be assumed to be available in the registry being uploaded
            to. Uncheck this if you want to ensure that dependencies are only ever
            installed from Cloudsmith unless explicitly specified as belong to another
            registry.
          type: boolean
        use_noarch_packages:
          description: If checked, noarch packages (if supported) are enabled in installations/configurations.
            A noarch package is one that is not tied to specific system architecture
            (like i686).
          type: boolean
        use_source_packages:
          description: If checked, source packages (if supported) are enabled in installations/configurations.
            A source package is one that contains source code rather than built binaries.
          type: boolean
        use_vulnerability_scanning:
          description: If checked, vulnerability scanning will be enabled for all
            supported packages within this repository.
          type: boolean
        user_entitlements_enabled:
          description: If checked, users can use and manage their own user-specific
            entitlement token for the repository (if private). Otherwise, user-specific
            entitlements are disabled for all users.
          type: boolean
        view_statistics:
          description: This defines the minimum level of privilege required for a
            user to view repository statistics, to include entitlement-based usage,
            if applciable. If a user does not have the permission, they won't be able
            to view any statistics, either via the UI, API or CLI.
          enum:
          - Admin
          - Write
          - Read
          type: string
      required:
      - name
      title: Repository
      type: object
    PackageUsageMetrics:
      example:
        packages:
          active: 1
          bandwidth:
            average:
              display: 11 B
              units: bytes
              value: 11
            highest:
              display: 11 B
              units: bytes
              value: 11
            lowest:
              display: 11 B
              units: bytes
              value: 11
            total:
              display: 11 B
              units: bytes
              value: 11
          downloads:
            average:
              value: 5
            highest:
              value: 5
            lowest:
              value: 5
            total:
              value: 5
          inactive: 0
          total: 0
      properties:
        packages:
          description: ""
          example:
            active: 1
            bandwidth:
              average:
                display: 11 B
                units: bytes
                value: 11
              highest:
                display: 11 B
                units: bytes
                value: 11
              lowest:
                display: 11 B
                units: bytes
                value: 11
              total:
                display: 11 B
                units: bytes
                value: 11
            downloads:
              average:
                value: 5
              highest:
                value: 5
              lowest:
                value: 5
              total:
                value: 5
            inactive: 0
            total: 0
          properties: {}
          type: object
      required:
      - packages
      title: PackageUsageMetrics
      type: object
    ReposCreate:
      example:
        delete_own: true
        move_packages: Admin
        scan_packages: Admin
        show_setup_all: true
        description: description
        index_files: true
        use_source_packages: true
        docker_refresh_tokens_enabled: true
        proxy_npmjs: true
        move_own: true
        delete_packages: Admin
        repository_type_str: repository_type_str
        use_vulnerability_scanning: true
        resync_own: true
        slug: slug
        copy_own: true
        proxy_pypi: true
        raw_package_index_enabled: true
        contextual_auth_realm: true
        resync_packages: Admin
        view_statistics: Admin
        copy_packages: Admin
        replace_packages: Admin
        user_entitlements_enabled: true
        use_noarch_packages: true
        use_default_cargo_upstream: true
        storage_region: storage_region
        scan_own: true
        name: name
        use_debian_labels: true
        replace_packages_by_default: true
        strict_npm_validation: true
        default_privilege: Admin
        raw_package_index_signatures_enabled: true
      properties:
        contextual_auth_realm:
          description: If checked, missing credentials for this repository where basic
            authentication is required shall present an enriched value in the 'WWW-Authenticate'
            header containing the namespace and repository. This can be useful for
            tooling such as SBT where the authentication realm is used to distinguish
            and disambiguate credentials.
          type: boolean
        copy_own:
          description: If checked, users can copy any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        copy_packages:
          description: This defines the minimum level of privilege required for a
            user to copy packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific copy setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        default_privilege:
          description: This defines the default level of privilege that all of your
            organization members have for this repository. This does not include collaborators,
            but applies to any member of the org regardless of their own membership
            role (i.e. it applies to owners, managers and members). Be careful if
            setting this to admin, because any member will be able to change settings.
          enum:
          - Admin
          - Write
          - Read
          - None
          type: string
        delete_own:
          description: If checked, users can delete any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        delete_packages:
          description: This defines the minimum level of privilege required for a
            user to delete packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific delete
            setting.
          enum:
          - Admin
          - Write
          type: string
        description:
          description: A description of the repository's purpose/contents.
          type: string
        docker_refresh_tokens_enabled:
          description: If checked, refresh tokens will be issued in addition to access
            tokens for Docker authentication. This allows unlimited extension of the
            lifetime of access tokens.
          type: boolean
        index_files:
          description: If checked, files contained in packages will be indexed, which
            increase the synchronisation time required for packages. Note that it
            is recommended you keep this enabled unless the synchronisation time is
            significantly impacted.
          type: boolean
        move_own:
          description: If checked, users can move any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        move_packages:
          description: This defines the minimum level of privilege required for a
            user to move packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific move setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        name:
          description: A descriptive name for the repository.
          type: string
        proxy_npmjs:
          description: If checked, Npm packages that are not in the repository when
            requested by clients will automatically be proxied from the public npmjs.org
            registry. If there is at least one version for a package, others will
            not be proxied.
          type: boolean
        proxy_pypi:
          description: If checked, Python packages that are not in the repository
            when requested by clients will automatically be proxied from the public
            pypi.python.org registry. If there is at least one version for a package,
            others will not be proxied.
          type: boolean
        raw_package_index_enabled:
          description: If checked, HTML and JSON indexes will be generated that list
            all available raw packages in the repository.
          type: boolean
        raw_package_index_signatures_enabled:
          description: If checked, the HTML and JSON indexes will display raw package
            GPG signatures alongside the index packages.
          type: boolean
        replace_packages:
          description: This defines the minimum level of privilege required for a
            user to republish packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific republish
            setting. Please note that the user still requires the privilege to delete
            packages that will be replaced by the new package; otherwise the republish
            will fail.
          enum:
          - Admin
          - Write
          type: string
        replace_packages_by_default:
          description: If checked, uploaded packages will overwrite/replace any others
            with the same attributes (e.g. same version) by default. This only applies
            if the user has the required privilege for the republishing AND has the
            required privilege to delete existing packages that they don't own.
          type: boolean
        repository_type_str:
          description: |-
            The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible
            only to you or authorised delegates. Public repositories are free to
            use on all plans and visible to all Cloudsmith users.
          type: string
        resync_own:
          description: If checked, users can resync any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        resync_packages:
          description: This defines the minimum level of privilege required for a
            user to resync packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific resync
            setting.
          enum:
          - Admin
          - Write
          type: string
        scan_own:
          description: If checked, users can scan any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        scan_packages:
          description: This defines the minimum level of privilege required for a
            user to scan packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific scan setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        show_setup_all:
          description: If checked, the Set Me Up help for all formats will always
            be shown, even if you don't have packages of that type uploaded. Otherwise,
            help will only be shown for packages that are in the repository. For example,
            if you have uploaded only NuGet packages, then the Set Me Up help for
            NuGet packages will be shown only.
          type: boolean
        slug:
          description: The slug identifies the repository in URIs.
          type: string
        storage_region:
          description: The Cloudsmith region in which package files are stored.
          type: string
        strict_npm_validation:
          description: If checked, npm packages will be validated strictly to ensure
            the package matches specifcation. You can turn this off if you have packages
            that are old or otherwise mildly off-spec, but we can't guarantee the
            packages will work with npm-cli or other tooling correctly. Turn off at
            your own risk!
          type: boolean
        use_debian_labels:
          description: If checked, a 'Label' field will be present in Debian-based
            repositories. It will contain a string that identifies the entitlement
            token used to authenticate the repository, in the form of 'source=t-<identifier>';
            or 'source=none' if no token was used. You can use this to help with pinning.
          type: boolean
        use_default_cargo_upstream:
          description: If checked, dependencies of uploaded Cargo crates which do
            not set an explicit value for "registry" will be assumed to be available
            from crates.io. If unchecked, dependencies with unspecified "registry"
            values will be assumed to be available in the registry being uploaded
            to. Uncheck this if you want to ensure that dependencies are only ever
            installed from Cloudsmith unless explicitly specified as belong to another
            registry.
          type: boolean
        use_noarch_packages:
          description: If checked, noarch packages (if supported) are enabled in installations/configurations.
            A noarch package is one that is not tied to specific system architecture
            (like i686).
          type: boolean
        use_source_packages:
          description: If checked, source packages (if supported) are enabled in installations/configurations.
            A source package is one that contains source code rather than built binaries.
          type: boolean
        use_vulnerability_scanning:
          description: If checked, vulnerability scanning will be enabled for all
            supported packages within this repository.
          type: boolean
        user_entitlements_enabled:
          description: If checked, users can use and manage their own user-specific
            entitlement token for the repository (if private). Otherwise, user-specific
            entitlements are disabled for all users.
          type: boolean
        view_statistics:
          description: This defines the minimum level of privilege required for a
            user to view repository statistics, to include entitlement-based usage,
            if applciable. If a user does not have the permission, they won't be able
            to view any statistics, either via the UI, API or CLI.
          enum:
          - Admin
          - Write
          - Read
          type: string
      required:
      - name
      title: ReposCreate
      type: object
    PackageDependencies:
      example:
        dependencies:
        - dep_type: dep_type
          name: name
          version: version
          operator: operator
        - dep_type: dep_type
          name: name
          version: version
          operator: operator
      properties:
        dependencies:
          description: ""
          items:
            $ref: '#/components/schemas/PackageDependencies_dependencies'
          title: DependenciesList
          type: array
      required:
      - dependencies
      title: PackageDependencies
      type: object
    PackageMove:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        tags: '{}'
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: The repository the package will be moved to.
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags:
          description: All tags on the package, grouped by tag type. This includes
            immutable tags, but doesn't distinguish them from mutable. To see which
            tags are immutable specifically, see the tags_immutable field.
          properties: {}
          type: object
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: PackageMove
      type: object
    PackagesValidate_uploadNuget:
      properties:
        package_file:
          description: The primary file for the package.
          example: y1234456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        symbols_file:
          description: Attaches a symbols file to the package.
          example: y1234456789b
          type: string
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadNuget
      type: object
    _packages__owner___repo___files:
      example:
        checksum_sha512: checksum_sha512
        checksum_sha1: checksum_sha1
        checksum_sha256: checksum_sha256
        is_primary: true
        checksum_md5: checksum_md5
        slug_perm: slug_perm
        filename: filename
        size: 5
        cdn_url: cdn_url
        downloads: 1
        is_synchronised: true
        is_downloadable: true
        signature_url: signature_url
        tag: tag
      properties:
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        downloads:
          description: ""
          type: integer
        filename:
          description: ""
          type: string
        is_downloadable:
          description: ""
          type: boolean
        is_primary:
          description: ""
          type: boolean
        is_synchronised:
          description: ""
          type: boolean
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the file.
          type: integer
        slug_perm:
          description: ""
          type: string
        tag:
          description: Freeform descriptor that describes what the file is.
          type: string
      type: object
    FilesValidate:
      example:
        sha256_checksum: sha256_checksum
        filename: filename
        method: put_parts
        md5_checksum: md5_checksum
      properties:
        filename:
          description: Filename for the package file upload.
          type: string
        md5_checksum:
          description: MD5 checksum for a POST-based package file upload.
          type: string
        method:
          description: The method to use for package file upload.
          enum:
          - put_parts
          - put
          - post
          - presigned
          - unsigned_put
          type: string
        sha256_checksum:
          description: SHA256 checksum for a PUT-based package file upload.
          type: string
      required:
      - filename
      title: FilesValidate
      type: object
    AlpinePackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: AlpinePackageUpload
      type: object
    PackagesMove:
      example:
        destination: destination
      properties:
        destination:
          description: None
          type: string
      required:
      - destination
      title: PackagesMove
      type: object
    ReposRsaCreate:
      example:
        rsa_private_key: rsa_private_key
        rsa_passphrase: rsa_passphrase
      properties:
        rsa_passphrase:
          description: The RSA passphrase used for signing.
          type: string
        rsa_private_key:
          description: The RSA private key.
          type: string
      required:
      - rsa_private_key
      title: ReposRsaCreate
      type: object
    PackagesUploadP2:
      example:
        republish: true
        package_file: package_file
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadP2
      type: object
    GoPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: GoPackageUpload
      type: object
    OrganizationTeam:
      example:
        visibility: Visible
        name: name
        description: description
        slug_perm: slug_perm
        slug: slug
      properties:
        description:
          description: ""
          type: string
        name:
          description: ""
          type: string
        slug:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        visibility:
          description: ""
          enum:
          - Visible
          - Hidden
          type: string
      required:
      - name
      title: OrganizationTeam
      type: object
    PackagesUploadRuby:
      example:
        republish: true
        package_file: y123456789
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadRuby
      type: object
    _webhooks__owner___repo___templates:
      example:
        template: template
        event: event
      properties:
        event:
          description: ""
          type: string
        template:
          description: ""
          type: string
      type: object
    PackagesUploadDocker:
      example:
        republish: true
        package_file: y123456789
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadDocker
      type: object
    PackageQuarantine:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        tags: '{}'
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags:
          description: All tags on the package, grouped by tag type. This includes
            immutable tags, but doesn't distinguish them from mutable. To see which
            tags are immutable specifically, see the tags_immutable field.
          properties: {}
          type: object
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: PackageQuarantine
      type: object
    RepositoryCreate:
      example:
        scan_packages: Admin
        index_files: true
        repository_type: 5
        use_source_packages: true
        package_group_count: 1
        repository_type_str: repository_type_str
        use_vulnerability_scanning: true
        resync_own: true
        slug: slug
        raw_package_index_enabled: true
        namespace_url: namespace_url
        slug_perm: slug_perm
        deleted_at: deleted_at
        replace_packages: Admin
        user_entitlements_enabled: true
        num_downloads: 0
        package_count: 6
        use_default_cargo_upstream: true
        size: 5
        cdn_url: cdn_url
        scan_own: true
        name: name
        replace_packages_by_default: true
        default_privilege: Admin
        delete_own: true
        is_private: true
        move_packages: Admin
        show_setup_all: true
        created_at: created_at
        description: description
        docker_refresh_tokens_enabled: true
        proxy_npmjs: true
        move_own: true
        delete_packages: Admin
        is_open_source: true
        copy_own: true
        proxy_pypi: true
        contextual_auth_realm: true
        resync_packages: Admin
        view_statistics: Admin
        copy_packages: Admin
        self_html_url: self_html_url
        self_url: self_url
        use_noarch_packages: true
        storage_region: storage_region
        size_str: size_str
        gpg_keys:
        - public_key: public_key
          default: true
          fingerprint: fingerprint
          active: true
          created_at: created_at
          comment: comment
          fingerprint_short: fingerprint_short
        - public_key: public_key
          default: true
          fingerprint: fingerprint
          active: true
          created_at: created_at
          comment: comment
          fingerprint_short: fingerprint_short
        is_public: true
        namespace: namespace
        use_debian_labels: true
        strict_npm_validation: true
        raw_package_index_signatures_enabled: true
      properties:
        cdn_url:
          description: Base URL from which packages and other artifacts are downloaded.
          type: string
        contextual_auth_realm:
          description: If checked, missing credentials for this repository where basic
            authentication is required shall present an enriched value in the 'WWW-Authenticate'
            header containing the namespace and repository. This can be useful for
            tooling such as SBT where the authentication realm is used to distinguish
            and disambiguate credentials.
          type: boolean
        copy_own:
          description: If checked, users can copy any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        copy_packages:
          description: This defines the minimum level of privilege required for a
            user to copy packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific copy setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        created_at:
          description: ""
          type: string
        default_privilege:
          description: This defines the default level of privilege that all of your
            organization members have for this repository. This does not include collaborators,
            but applies to any member of the org regardless of their own membership
            role (i.e. it applies to owners, managers and members). Be careful if
            setting this to admin, because any member will be able to change settings.
          enum:
          - Admin
          - Write
          - Read
          - None
          type: string
        delete_own:
          description: If checked, users can delete any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        delete_packages:
          description: This defines the minimum level of privilege required for a
            user to delete packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific delete
            setting.
          enum:
          - Admin
          - Write
          type: string
        deleted_at:
          description: ""
          type: string
        description:
          description: A description of the repository's purpose/contents.
          type: string
        docker_refresh_tokens_enabled:
          description: If checked, refresh tokens will be issued in addition to access
            tokens for Docker authentication. This allows unlimited extension of the
            lifetime of access tokens.
          type: boolean
        gpg_keys:
          description: ""
          items:
            $ref: '#/components/schemas/_repos__gpg_keys'
          title: Gpg keysList
          type: array
        index_files:
          description: If checked, files contained in packages will be indexed, which
            increase the synchronisation time required for packages. Note that it
            is recommended you keep this enabled unless the synchronisation time is
            significantly impacted.
          type: boolean
        is_open_source:
          description: ""
          type: boolean
        is_private:
          description: ""
          type: boolean
        is_public:
          description: ""
          type: boolean
        move_own:
          description: If checked, users can move any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        move_packages:
          description: This defines the minimum level of privilege required for a
            user to move packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific move setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        name:
          description: A descriptive name for the repository.
          type: string
        namespace:
          description: Namespace to which this repository belongs.
          type: string
        namespace_url:
          description: API endpoint where data about this namespace can be retrieved.
          type: string
        num_downloads:
          description: The number of downloads for packages in the repository.
          type: integer
        package_count:
          description: The number of packages in the repository.
          type: integer
        package_group_count:
          description: The number of groups in the repository.
          type: integer
        proxy_npmjs:
          description: If checked, Npm packages that are not in the repository when
            requested by clients will automatically be proxied from the public npmjs.org
            registry. If there is at least one version for a package, others will
            not be proxied.
          type: boolean
        proxy_pypi:
          description: If checked, Python packages that are not in the repository
            when requested by clients will automatically be proxied from the public
            pypi.python.org registry. If there is at least one version for a package,
            others will not be proxied.
          type: boolean
        raw_package_index_enabled:
          description: If checked, HTML and JSON indexes will be generated that list
            all available raw packages in the repository.
          type: boolean
        raw_package_index_signatures_enabled:
          description: If checked, the HTML and JSON indexes will display raw package
            GPG signatures alongside the index packages.
          type: boolean
        replace_packages:
          description: This defines the minimum level of privilege required for a
            user to republish packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific republish
            setting. Please note that the user still requires the privilege to delete
            packages that will be replaced by the new package; otherwise the republish
            will fail.
          enum:
          - Admin
          - Write
          type: string
        replace_packages_by_default:
          description: If checked, uploaded packages will overwrite/replace any others
            with the same attributes (e.g. same version) by default. This only applies
            if the user has the required privilege for the republishing AND has the
            required privilege to delete existing packages that they don't own.
          type: boolean
        repository_type:
          description: The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible only
            to you or authorised delegates. Open-Source repositories are always visible
            to everyone and are restricted by licensing, but are free to use and come
            with generous bandwidth/storage. You can only select Open-Source at repository
            creation time.
          type: integer
        repository_type_str:
          description: |-
            The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible
            only to you or authorised delegates. Public repositories are free to
            use on all plans and visible to all Cloudsmith users.
          type: string
        resync_own:
          description: If checked, users can resync any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        resync_packages:
          description: This defines the minimum level of privilege required for a
            user to resync packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific resync
            setting.
          enum:
          - Admin
          - Write
          type: string
        scan_own:
          description: If checked, users can scan any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        scan_packages:
          description: This defines the minimum level of privilege required for a
            user to scan packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific scan setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        self_html_url:
          description: Website URL for this repository.
          type: string
        self_url:
          description: API endpoint where data about this repository can be retrieved.
          type: string
        show_setup_all:
          description: If checked, the Set Me Up help for all formats will always
            be shown, even if you don't have packages of that type uploaded. Otherwise,
            help will only be shown for packages that are in the repository. For example,
            if you have uploaded only NuGet packages, then the Set Me Up help for
            NuGet packages will be shown only.
          type: boolean
        size:
          description: The calculated size of the repository.
          type: integer
        size_str:
          description: The calculated size of the repository (human readable).
          type: string
        slug:
          description: The slug identifies the repository in URIs.
          type: string
        slug_perm:
          description: The slug_perm immutably identifies the repository. It will
            never change once a repository has been created.
          type: string
        storage_region:
          description: The Cloudsmith region in which package files are stored.
          type: string
        strict_npm_validation:
          description: If checked, npm packages will be validated strictly to ensure
            the package matches specifcation. You can turn this off if you have packages
            that are old or otherwise mildly off-spec, but we can't guarantee the
            packages will work with npm-cli or other tooling correctly. Turn off at
            your own risk!
          type: boolean
        use_debian_labels:
          description: If checked, a 'Label' field will be present in Debian-based
            repositories. It will contain a string that identifies the entitlement
            token used to authenticate the repository, in the form of 'source=t-<identifier>';
            or 'source=none' if no token was used. You can use this to help with pinning.
          type: boolean
        use_default_cargo_upstream:
          description: If checked, dependencies of uploaded Cargo crates which do
            not set an explicit value for "registry" will be assumed to be available
            from crates.io. If unchecked, dependencies with unspecified "registry"
            values will be assumed to be available in the registry being uploaded
            to. Uncheck this if you want to ensure that dependencies are only ever
            installed from Cloudsmith unless explicitly specified as belong to another
            registry.
          type: boolean
        use_noarch_packages:
          description: If checked, noarch packages (if supported) are enabled in installations/configurations.
            A noarch package is one that is not tied to specific system architecture
            (like i686).
          type: boolean
        use_source_packages:
          description: If checked, source packages (if supported) are enabled in installations/configurations.
            A source package is one that contains source code rather than built binaries.
          type: boolean
        use_vulnerability_scanning:
          description: If checked, vulnerability scanning will be enabled for all
            supported packages within this repository.
          type: boolean
        user_entitlements_enabled:
          description: If checked, users can use and manage their own user-specific
            entitlement token for the repository (if private). Otherwise, user-specific
            entitlements are disabled for all users.
          type: boolean
        view_statistics:
          description: This defines the minimum level of privilege required for a
            user to view repository statistics, to include entitlement-based usage,
            if applciable. If a user does not have the permission, they won't be able
            to view any statistics, either via the UI, API or CLI.
          enum:
          - Admin
          - Write
          - Read
          type: string
      required:
      - name
      title: RepositoryCreate
      type: object
    PackagesValidate_uploadConda:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadConda
      type: object
    StatusBasic:
      example:
        detail: Cloudsmith API is operational.
        version: 1.121.3
      properties:
        detail:
          description: The message describing the state of the API.
          example: Cloudsmith API is operational.
          type: string
        version:
          description: The current version for the Cloudsmith service.
          example: 1.121.3
          type: string
      title: StatusBasic
      type: object
    ReposPartialUpdate:
      example:
        delete_own: true
        move_packages: Admin
        scan_packages: Admin
        show_setup_all: true
        description: description
        index_files: true
        use_source_packages: true
        docker_refresh_tokens_enabled: true
        proxy_npmjs: true
        move_own: true
        delete_packages: Admin
        repository_type_str: Public
        use_vulnerability_scanning: true
        resync_own: true
        slug: slug
        copy_own: true
        proxy_pypi: true
        raw_package_index_enabled: true
        contextual_auth_realm: true
        resync_packages: Admin
        view_statistics: Admin
        copy_packages: Admin
        replace_packages: Admin
        user_entitlements_enabled: true
        use_noarch_packages: true
        use_default_cargo_upstream: true
        scan_own: true
        name: name
        use_debian_labels: true
        replace_packages_by_default: true
        strict_npm_validation: true
        default_privilege: Admin
        raw_package_index_signatures_enabled: true
      properties:
        contextual_auth_realm:
          description: If checked, missing credentials for this repository where basic
            authentication is required shall present an enriched value in the 'WWW-Authenticate'
            header containing the namespace and repository. This can be useful for
            tooling such as SBT where the authentication realm is used to distinguish
            and disambiguate credentials.
          type: boolean
        copy_own:
          description: If checked, users can copy any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        copy_packages:
          description: This defines the minimum level of privilege required for a
            user to copy packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific copy setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        default_privilege:
          description: This defines the default level of privilege that all of your
            organization members have for this repository. This does not include collaborators,
            but applies to any member of the org regardless of their own membership
            role (i.e. it applies to owners, managers and members). Be careful if
            setting this to admin, because any member will be able to change settings.
          enum:
          - Admin
          - Write
          - Read
          - None
          type: string
        delete_own:
          description: If checked, users can delete any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        delete_packages:
          description: This defines the minimum level of privilege required for a
            user to delete packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific delete
            setting.
          enum:
          - Admin
          - Write
          type: string
        description:
          description: A description of the repository's purpose/contents.
          type: string
        docker_refresh_tokens_enabled:
          description: If checked, refresh tokens will be issued in addition to access
            tokens for Docker authentication. This allows unlimited extension of the
            lifetime of access tokens.
          type: boolean
        index_files:
          description: If checked, files contained in packages will be indexed, which
            increase the synchronisation time required for packages. Note that it
            is recommended you keep this enabled unless the synchronisation time is
            significantly impacted.
          type: boolean
        move_own:
          description: If checked, users can move any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        move_packages:
          description: This defines the minimum level of privilege required for a
            user to move packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific move setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        name:
          description: A descriptive name for the repository.
          type: string
        proxy_npmjs:
          description: If checked, Npm packages that are not in the repository when
            requested by clients will automatically be proxied from the public npmjs.org
            registry. If there is at least one version for a package, others will
            not be proxied.
          type: boolean
        proxy_pypi:
          description: If checked, Python packages that are not in the repository
            when requested by clients will automatically be proxied from the public
            pypi.python.org registry. If there is at least one version for a package,
            others will not be proxied.
          type: boolean
        raw_package_index_enabled:
          description: If checked, HTML and JSON indexes will be generated that list
            all available raw packages in the repository.
          type: boolean
        raw_package_index_signatures_enabled:
          description: If checked, the HTML and JSON indexes will display raw package
            GPG signatures alongside the index packages.
          type: boolean
        replace_packages:
          description: This defines the minimum level of privilege required for a
            user to republish packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific republish
            setting. Please note that the user still requires the privilege to delete
            packages that will be replaced by the new package; otherwise the republish
            will fail.
          enum:
          - Admin
          - Write
          type: string
        replace_packages_by_default:
          description: If checked, uploaded packages will overwrite/replace any others
            with the same attributes (e.g. same version) by default. This only applies
            if the user has the required privilege for the republishing AND has the
            required privilege to delete existing packages that they don't own.
          type: boolean
        repository_type_str:
          description: The repository type changes how it is accessed and billed.
            Private repositories can only be used on paid plans, but are visible only
            to you or authorised delegates. Public repositories are free to use on
            all plans and visible to all Cloudsmith users.
          enum:
          - Public
          - Private
          - Open-Source
          type: string
        resync_own:
          description: If checked, users can resync any of their own packages that
            they have uploaded, assuming that they still have write privilege for
            the repository. This takes precedence over privileges configured in the
            'Access Controls' section of the repository, and any inherited from the
            org.
          type: boolean
        resync_packages:
          description: This defines the minimum level of privilege required for a
            user to resync packages. Unless the package was uploaded by that user,
            in which the permission may be overridden by the user-specific resync
            setting.
          enum:
          - Admin
          - Write
          type: string
        scan_own:
          description: If checked, users can scan any of their own packages that they
            have uploaded, assuming that they still have write privilege for the repository.
            This takes precedence over privileges configured in the 'Access Controls'
            section of the repository, and any inherited from the org.
          type: boolean
        scan_packages:
          description: This defines the minimum level of privilege required for a
            user to scan packages. Unless the package was uploaded by that user, in
            which the permission may be overridden by the user-specific scan setting.
          enum:
          - Admin
          - Write
          - Read
          type: string
        show_setup_all:
          description: If checked, the Set Me Up help for all formats will always
            be shown, even if you don't have packages of that type uploaded. Otherwise,
            help will only be shown for packages that are in the repository. For example,
            if you have uploaded only NuGet packages, then the Set Me Up help for
            NuGet packages will be shown only.
          type: boolean
        slug:
          description: The slug identifies the repository in URIs.
          type: string
        strict_npm_validation:
          description: If checked, npm packages will be validated strictly to ensure
            the package matches specifcation. You can turn this off if you have packages
            that are old or otherwise mildly off-spec, but we can't guarantee the
            packages will work with npm-cli or other tooling correctly. Turn off at
            your own risk!
          type: boolean
        use_debian_labels:
          description: If checked, a 'Label' field will be present in Debian-based
            repositories. It will contain a string that identifies the entitlement
            token used to authenticate the repository, in the form of 'source=t-<identifier>';
            or 'source=none' if no token was used. You can use this to help with pinning.
          type: boolean
        use_default_cargo_upstream:
          description: If checked, dependencies of uploaded Cargo crates which do
            not set an explicit value for "registry" will be assumed to be available
            from crates.io. If unchecked, dependencies with unspecified "registry"
            values will be assumed to be available in the registry being uploaded
            to. Uncheck this if you want to ensure that dependencies are only ever
            installed from Cloudsmith unless explicitly specified as belong to another
            registry.
          type: boolean
        use_noarch_packages:
          description: If checked, noarch packages (if supported) are enabled in installations/configurations.
            A noarch package is one that is not tied to specific system architecture
            (like i686).
          type: boolean
        use_source_packages:
          description: If checked, source packages (if supported) are enabled in installations/configurations.
            A source package is one that contains source code rather than built binaries.
          type: boolean
        use_vulnerability_scanning:
          description: If checked, vulnerability scanning will be enabled for all
            supported packages within this repository.
          type: boolean
        user_entitlements_enabled:
          description: If checked, users can use and manage their own user-specific
            entitlement token for the repository (if private). Otherwise, user-specific
            entitlements are disabled for all users.
          type: boolean
        view_statistics:
          description: This defines the minimum level of privilege required for a
            user to view repository statistics, to include entitlement-based usage,
            if applciable. If a user does not have the permission, they won't be able
            to view any statistics, either via the UI, API or CLI.
          enum:
          - Admin
          - Write
          - Read
          type: string
      title: ReposPartialUpdate
      type: object
    PackagesUploadCran:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadCran
      type: object
    PackagesValidate_uploadLuarocks:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadLuarocks
      type: object
    PackagesValidate_uploadVagrant:
      properties:
        name:
          description: The name of this package.
          example: tcl
          type: string
        package_file:
          description: The primary file for the package.
          example: y123456789x
          type: string
        provider:
          description: The virtual machine provider for the box.
          example: virtualbox
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
      required:
      - name
      - package_file
      - provider
      - version
      title: PackagesValidate-uploadVagrant
      type: object
    ReposGpgCreate:
      example:
        gpg_passphrase: gpg_passphrase
        gpg_private_key: gpg_private_key
      properties:
        gpg_passphrase:
          description: The GPG passphrase used for signing.
          type: string
        gpg_private_key:
          description: The GPG private key.
          type: string
      required:
      - gpg_private_key
      title: ReposGpgCreate
      type: object
    RawPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: "1.0"
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: my-package
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: Everything about packaging files.
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: My Package File
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          example: Everything about packaging files.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          example: my-package
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          example: My Package File
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          example: "1.0"
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: RawPackageUpload
      type: object
    RepositoryGpgKey:
      example:
        public_key: public_key
        default: true
        fingerprint: fingerprint
        active: true
        created_at: created_at
        comment: comment
        fingerprint_short: fingerprint_short
      properties:
        active:
          description: If selected this is the active key for this repository.
          type: boolean
        comment:
          description: ""
          type: string
        created_at:
          description: ""
          type: string
        default:
          description: If selected this is the default key for this repository.
          type: boolean
        fingerprint:
          description: The long identifier used by GPG for this key.
          type: string
        fingerprint_short:
          description: ""
          type: string
        public_key:
          description: The public key given to repository users.
          type: string
      required:
      - comment
      title: RepositoryGpgKey
      type: object
    OrgsInvitesCreate:
      example:
        role: Owner
        inviter: inviter
        slug_perm: slug_perm
        user: user
        email: email
      properties:
        email:
          description: None
          type: string
        inviter:
          description: None
          type: string
        role:
          description: None
          enum:
          - Owner
          - Manager
          - Member
          - Collaborator
          type: string
        slug_perm:
          description: None
          type: string
        user:
          description: None
          type: string
      title: OrgsInvitesCreate
      type: object
    UserAuthToken:
      example:
        token: y4682jh19cqf0b2ty4682jh19cqf0b2t
      properties:
        token:
          description: API token for the authenticated user
          example: y4682jh19cqf0b2ty4682jh19cqf0b2t
          type: string
      title: UserAuthToken
      type: object
    PackagesUploadComposer:
      example:
        republish: true
        package_file: y123456789
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadComposer
      type: object
    CondaPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: CondaPackageUpload
      type: object
    FilesCreate:
      example:
        sha256_checksum: sha256_checksum
        filename: filename
        method: put_parts
        md5_checksum: md5_checksum
      properties:
        filename:
          description: Filename for the package file upload.
          type: string
        md5_checksum:
          description: MD5 checksum for a POST-based package file upload.
          type: string
        method:
          description: The method to use for package file upload.
          enum:
          - put_parts
          - put
          - post
          - presigned
          - unsigned_put
          type: string
        sha256_checksum:
          description: SHA256 checksum for a PUT-based package file upload.
          type: string
      required:
      - filename
      title: FilesCreate
      type: object
    PackagesUploadGo:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadGo
      type: object
    PackagesValidate_uploadDart:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadDart
      type: object
    OrganizationInvite:
      example:
        expires_at: expires_at
        role: Owner
        org: org
        user_url: user_url
        inviter: inviter
        inviter_url: inviter_url
        slug_perm: slug_perm
        user: user
        email: email
      properties:
        email:
          description: ""
          type: string
        expires_at:
          description: ""
          type: string
        inviter:
          description: ""
          type: string
        inviter_url:
          description: ""
          type: string
        org:
          description: ""
          type: string
        role:
          description: ""
          enum:
          - Owner
          - Manager
          - Member
          - Collaborator
          type: string
        slug_perm:
          description: ""
          type: string
        user:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
      title: OrganizationInvite
      type: object
    OrgsTeamsCreate:
      example:
        visibility: Visible
        name: name
        description: description
        slug: slug
      properties:
        description:
          description: None
          type: string
        name:
          description: None
          type: string
        slug:
          description: None
          type: string
        visibility:
          description: None
          enum:
          - Visible
          - Hidden
          type: string
      required:
      - name
      title: OrgsTeamsCreate
      type: object
    OrgsTeamsPartialUpdate:
      example:
        visibility: Visible
        name: name
        description: description
        slug: slug
      properties:
        description:
          description: None
          type: string
        name:
          description: None
          type: string
        slug:
          description: None
          type: string
        visibility:
          description: None
          enum:
          - Visible
          - Hidden
          type: string
      title: OrgsTeamsPartialUpdate
      type: object
    PackagesValidate_uploadCargo:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadCargo
      type: object
    FilesComplete:
      example:
        sha256_checksum: sha256_checksum
        filename: filename
        method: put_parts
        md5_checksum: md5_checksum
      properties:
        filename:
          description: Filename for the package file upload.
          type: string
        md5_checksum:
          description: MD5 checksum for a POST-based package file upload.
          type: string
        method:
          description: The method to use for package file upload.
          enum:
          - put_parts
          - put
          - post
          - presigned
          - unsigned_put
          type: string
        sha256_checksum:
          description: SHA256 checksum for a PUT-based package file upload.
          type: string
      required:
      - filename
      title: FilesComplete
      type: object
    _formats__distributions:
      example:
        name: name
        variants: variants
        self_url: self_url
        slug: slug
      properties:
        name:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        slug:
          description: The slug identifier for this distribution
          type: string
        variants:
          description: ""
          type: string
      type: object
    PackagesUploadCargo:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadCargo
      type: object
    OrganizationTeamMembers:
      example:
        members:
        - role: role
          user: user
        - role: role
          user: user
      properties:
        members:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationTeamMembers_members'
          title: MembersList
          type: array
      required:
      - members
      title: OrganizationTeamMembers
      type: object
    CargoPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: CargoPackageUpload
      type: object
    PackagesValidate_uploadPython:
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadPython
      type: object
    ComposerPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: ComposerPackageUpload
      type: object
    PackagesUploadLuarocks:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadLuarocks
      type: object
    EntitlementsPartialUpdate:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: '{}'
        is_active: true
        limit_bandwidth_unit: Byte
        scheduled_reset_at: scheduled_reset_at
        limit_bandwidth: 0
        limit_num_clients: 6
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        token: token
        name: name
        limit_date_range_from: limit_date_range_from
        limit_num_downloads: 1
        eula_required: true
        scheduled_reset_period: Never Reset
      properties:
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: None
          enum:
          - Byte
          - Kilobyte
          - Megabyte
          - Gigabyte
          - Terabyte
          - Petabyte
          - Exabyte
          - Zettabyte
          - Yottabyte
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: None
          properties: {}
          type: object
        name:
          description: None
          type: string
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: None
          enum:
          - Never Reset
          - Daily
          - Weekly
          - Fortnightly
          - Monthly
          - Bi-Monthly
          - Quarterly
          - Every 6 months
          - Annual
          type: string
        token:
          description: None
          type: string
      title: EntitlementsPartialUpdate
      type: object
    _distros__versions:
      example:
        name: name
        slug: slug
      properties:
        name:
          description: The textual name for this version.
          type: string
        slug:
          description: The slug identifier for this version
          type: string
      type: object
    MavenPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        artifact_id: cloudsmith-example
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        packaging: packaging
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        group_id: io.cloudsmith.example
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        artifact_id:
          description: The ID of the artifact.
          example: cloudsmith-example
          type: string
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        group_id:
          description: Artifact's group ID.
          example: io.cloudsmith.example
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        packaging:
          description: Artifact's Maven packaging type.
          type: string
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: MavenPackageUpload
      type: object
    UserProfile:
      example:
        joined_at: joined_at
        name: name
        last_name: last_name
        tagline: tagline
        company: company
        slug_perm: slug_perm
        first_name: first_name
        job_title: job_title
        slug: slug
        url: url
      properties:
        company:
          description: ""
          type: string
        first_name:
          description: ""
          type: string
        job_title:
          description: ""
          type: string
        joined_at:
          description: ""
          type: string
        last_name:
          description: ""
          type: string
        name:
          description: ""
          type: string
        slug:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        tagline:
          description: Your tagline is a sentence about you. Make it funny. Make it
            professional. Either way, it's public and it represents who you are.
          type: string
        url:
          description: ""
          type: string
      required:
      - first_name
      - last_name
      title: UserProfile
      type: object
    PackageFileUpload:
      example:
        identifier: identifier
        upload_fields: '{}'
        upload_querystring: upload_querystring
        upload_headers: '{}'
        upload_url: upload_url
      properties:
        identifier:
          description: The identifier for the file to use when creating packages
          type: string
        upload_fields:
          description: The dictionary of fields that must be sent with POST uploads
          properties: {}
          type: object
        upload_headers:
          description: The dictionary of headers that must be sent with uploads
          properties: {}
          type: object
        upload_querystring:
          description: The querystring to use for the next-step POST or PUT upload
          type: string
        upload_url:
          description: The URL to use for the next-step POST or PUT upload
          type: string
      title: PackageFileUpload
      type: object
    LuarocksPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: LuarocksPackageUpload
      type: object
    RepositoryWebhook:
      example:
        is_last_response_bad: true
        last_response_status_str: last_response_status_str
        target_url: target_url
        created_at: created_at
        last_response_status: 1
        request_body_template_format_str: request_body_template_format_str
        request_content_type: request_content_type
        updated_at: updated_at
        request_body_format_str: request_body_format_str
        num_sent: 5
        request_body_template_format: 2
        events:
        - events
        - events
        disable_reason_str: disable_reason_str
        identifier: 6
        package_query: package_query
        is_active: true
        disable_reason: 0
        created_by_url: created_by_url
        templates:
        - template: template
          event: event
        - template: template
          event: event
        request_body_format: 5
        slug_perm: slug_perm
        created_by: created_by
        self_url: self_url
        updated_by_url: updated_by_url
        verify_ssl: true
        secret_header: secret_header
        updated_by: updated_by
      properties:
        created_at:
          description: ""
          type: string
        created_by:
          description: ""
          type: string
        created_by_url:
          description: ""
          type: string
        disable_reason:
          description: ""
          type: integer
        disable_reason_str:
          description: ""
          type: string
        events:
          description: ""
          items:
            description: ""
            type: string
          title: EventsList
          type: array
        identifier:
          description: ""
          type: integer
        is_active:
          description: If enabled, the webhook will trigger on events and send payloads
            to the configured target URL.
          type: boolean
        is_last_response_bad:
          description: ""
          type: boolean
        last_response_status:
          description: ""
          type: integer
        last_response_status_str:
          description: ""
          type: string
        num_sent:
          description: ""
          type: integer
        package_query:
          description: The package-based search query for webhooks to fire. This uses
            the same syntax as the standard search used for repositories, and also
            supports boolean logic operators such as OR/AND/NOT and parentheses for
            grouping. If a package does not match, the webhook will not fire.
          type: string
        request_body_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_body_format_str:
          description: ""
          type: string
        request_body_template_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_body_template_format_str:
          description: ""
          type: string
        request_content_type:
          description: 'The value that will be sent for the ''Content Type'' header. '
          type: string
        secret_header:
          description: The header to send the predefined secret in. This must be unique
            from existing headers or it won't be sent. You can use this as a form
            of authentication on the endpoint side.
          type: string
        self_url:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        target_url:
          description: The destination URL that webhook payloads will be POST'ed to.
          type: string
        templates:
          description: ""
          items:
            $ref: '#/components/schemas/_webhooks__owner___repo___templates'
          title: TemplatesList
          type: array
        updated_at:
          description: ""
          type: string
        updated_by:
          description: ""
          type: string
        updated_by_url:
          description: ""
          type: string
        verify_ssl:
          description: If enabled, SSL certificates is verified when webhooks are
            sent. It's recommended to leave this enabled as not verifying the integrity
            of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM)
            attacks.
          type: boolean
      required:
      - events
      - target_url
      - templates
      title: RepositoryWebhook
      type: object
    PackagesValidate_uploadRuby:
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadRuby
      type: object
    PackagesCopy:
      example:
        republish: true
        destination: destination
      properties:
        destination:
          description: None
          type: string
        republish:
          description: If true, the package will overwrite any others with the same
            attributes (e.g. same version); otherwise, it will be flagged as a duplicate.
          type: boolean
      required:
      - destination
      title: PackagesCopy
      type: object
    WebhooksCreate:
      example:
        package_query: package_query
        request_content_type: request_content_type
        is_active: true
        verify_ssl: true
        signature_key: signature_key
        target_url: target_url
        templates:
        - template: template
          event: event
        - template: template
          event: event
        secret_header: secret_header
        secret_value: secret_value
        request_body_format: 0
        request_body_template_format: 6
        events:
        - events
        - events
      properties:
        events:
          description: None
          items:
            description: ""
            type: string
          title: EventsList
          type: array
        is_active:
          description: If enabled, the webhook will trigger on events and send payloads
            to the configured target URL.
          type: boolean
        package_query:
          description: The package-based search query for webhooks to fire. This uses
            the same syntax as the standard search used for repositories, and also
            supports boolean logic operators such as OR/AND/NOT and parentheses for
            grouping. If a package does not match, the webhook will not fire.
          type: string
        request_body_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_body_template_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_content_type:
          description: 'The value that will be sent for the ''Content Type'' header. '
          type: string
        secret_header:
          description: The header to send the predefined secret in. This must be unique
            from existing headers or it won't be sent. You can use this as a form
            of authentication on the endpoint side.
          type: string
        secret_value:
          description: 'The value for the predefined secret (note: this is treated
            as a passphrase and is encrypted when we store it). You can use this as
            a form of authentication on the endpoint side.'
          type: string
        signature_key:
          description: 'The value for the signature key - This is used to generate
            an HMAC-based hex digest of the request body, which we send as the X-Cloudsmith-Signature
            header so that you can ensure that the request wasn''t modified by a malicious
            party (note: this is treated as a passphrase and is encrypted when we
            store it).'
          type: string
        target_url:
          description: The destination URL that webhook payloads will be POST'ed to.
          type: string
        templates:
          description: None
          items:
            $ref: '#/components/schemas/_webhooks__owner___repo___templates'
          title: TemplatesList
          type: array
        verify_ssl:
          description: If enabled, SSL certificates is verified when webhooks are
            sent. It's recommended to leave this enabled as not verifying the integrity
            of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM)
            attacks.
          type: boolean
      required:
      - events
      - target_url
      - templates
      title: WebhooksCreate
      type: object
    StorageRegion:
      example:
        label: label
        slug: slug
      properties:
        label:
          description: Name of the storage region
          type: string
        slug:
          description: Slug for the storage region
          type: string
      required:
      - label
      - slug
      title: StorageRegion
      type: object
    PackagesValidate_uploadCran:
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadCran
      type: object
    PackagesQuarantine:
      example:
        restore: true
      properties:
        restore:
          description: If true, the package be restored from quarantine.
          type: boolean
      title: PackagesQuarantine
      type: object
    QuotaHistory_history:
      properties:
        days:
          description: ""
          type: integer
        display:
          description: ""
          properties: {}
          type: object
        end:
          description: ""
          type: string
        plan:
          description: ""
          type: string
        raw:
          description: ""
          properties: {}
          type: object
        start:
          description: ""
          type: string
      type: object
    PackagesUploadConda:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadConda
      type: object
    Format:
      example:
        extensions:
        - extensions
        - extensions
        premium: true
        name: name
        description: description
        supports: '{}'
        premium_plan_name: premium_plan_name
        distributions:
        - name: name
          variants: variants
          self_url: self_url
          slug: slug
        - name: name
          variants: variants
          self_url: self_url
          slug: slug
        premium_plan_id: premium_plan_id
        slug: slug
      properties:
        description:
          description: Description of the package format
          type: string
        distributions:
          description: The distributions supported by this package format
          items:
            $ref: '#/components/schemas/_formats__distributions'
          title: DistributionsList
          type: array
        extensions:
          description: A non-exhaustive list of extensions supported
          items:
            description: ""
            type: string
          title: ExtensionsList
          type: array
        name:
          description: Name for the package format
          type: string
        premium:
          description: If true the package format is a premium-only feature
          type: boolean
        premium_plan_id:
          description: The minimum plan id required for this package format
          type: string
        premium_plan_name:
          description: The minimum plan name required for this package format
          type: string
        slug:
          description: Slug for the package format
          type: string
        supports:
          description: A set of what the package format supports
          properties: {}
          type: object
      required:
      - description
      - extensions
      - name
      - premium
      - slug
      - supports
      title: Format
      type: object
    NpmPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: NpmPackageUpload
      type: object
    WebhooksPartialUpdate:
      example:
        package_query: package_query
        request_content_type: request_content_type
        is_active: true
        verify_ssl: true
        signature_key: signature_key
        target_url: target_url
        templates:
        - template: template
          event: event
        - template: template
          event: event
        secret_header: secret_header
        secret_value: secret_value
        request_body_format: 0
        request_body_template_format: 6
        events:
        - events
        - events
      properties:
        events:
          description: None
          items:
            description: ""
            type: string
          title: EventsList
          type: array
        is_active:
          description: If enabled, the webhook will trigger on events and send payloads
            to the configured target URL.
          type: boolean
        package_query:
          description: The package-based search query for webhooks to fire. This uses
            the same syntax as the standard search used for repositories, and also
            supports boolean logic operators such as OR/AND/NOT and parentheses for
            grouping. If a package does not match, the webhook will not fire.
          type: string
        request_body_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_body_template_format:
          description: The format of the payloads for webhook requests.
          type: integer
        request_content_type:
          description: 'The value that will be sent for the ''Content Type'' header. '
          type: string
        secret_header:
          description: The header to send the predefined secret in. This must be unique
            from existing headers or it won't be sent. You can use this as a form
            of authentication on the endpoint side.
          type: string
        secret_value:
          description: 'The value for the predefined secret (note: this is treated
            as a passphrase and is encrypted when we store it). You can use this as
            a form of authentication on the endpoint side.'
          type: string
        signature_key:
          description: 'The value for the signature key - This is used to generate
            an HMAC-based hex digest of the request body, which we send as the X-Cloudsmith-Signature
            header so that you can ensure that the request wasn''t modified by a malicious
            party (note: this is treated as a passphrase and is encrypted when we
            store it).'
          type: string
        target_url:
          description: The destination URL that webhook payloads will be POST'ed to.
          type: string
        templates:
          description: None
          items:
            $ref: '#/components/schemas/_webhooks__owner___repo___templates'
          title: TemplatesList
          type: array
        verify_ssl:
          description: If enabled, SSL certificates is verified when webhooks are
            sent. It's recommended to leave this enabled as not verifying the integrity
            of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM)
            attacks.
          type: boolean
      title: WebhooksPartialUpdate
      type: object
    RepositoryToken:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: '{}'
        clients: 0
        limit_bandwidth_unit: Byte
        scheduled_reset_at: scheduled_reset_at
        usage: usage
        limit_bandwidth: 5
        created_at: created_at
        limit_num_clients: 5
        eula_accepted_at: eula_accepted_at
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        default: true
        updated_at: updated_at
        downloads: 6
        user_url: user_url
        limit_date_range_from: limit_date_range_from
        reset_url: reset_url
        limit_num_downloads: 2
        eula_required: true
        refresh_url: refresh_url
        scheduled_reset_period: Never Reset
        identifier: 1
        is_active: true
        eula_accepted: '{}'
        eula_accepted_from: eula_accepted_from
        created_by_url: created_by_url
        is_limited: true
        slug_perm: slug_perm
        created_by: created_by
        enable_url: enable_url
        self_url: self_url
        token: token
        updated_by_url: updated_by_url
        disable_url: disable_url
        name: name
        updated_by: updated_by
        has_limits: true
        user: user
      properties:
        clients:
          description: ""
          type: integer
        created_at:
          description: The datetime the token was updated at.
          type: string
        created_by:
          description: ""
          type: string
        created_by_url:
          description: ""
          type: string
        default:
          description: If selected this is the default token for this repository.
          type: boolean
        disable_url:
          description: ""
          type: string
        downloads:
          description: ""
          type: integer
        enable_url:
          description: ""
          type: string
        eula_accepted:
          description: ""
          properties: {}
          type: object
        eula_accepted_at:
          description: The datetime the EULA was accepted at.
          type: string
        eula_accepted_from:
          description: ""
          type: string
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        has_limits:
          description: ""
          type: boolean
        identifier:
          description: ""
          type: integer
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        is_limited:
          description: ""
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: ""
          enum:
          - Byte
          - Kilobyte
          - Megabyte
          - Gigabyte
          - Terabyte
          - Petabyte
          - Exabyte
          - Zettabyte
          - Yottabyte
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: ""
          properties: {}
          type: object
        name:
          description: ""
          type: string
        refresh_url:
          description: ""
          type: string
        reset_url:
          description: ""
          type: string
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: ""
          enum:
          - Never Reset
          - Daily
          - Weekly
          - Fortnightly
          - Monthly
          - Bi-Monthly
          - Quarterly
          - Every 6 months
          - Annual
          type: string
        self_url:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        token:
          description: ""
          type: string
        updated_at:
          description: The datetime the token was updated at.
          type: string
        updated_by:
          description: ""
          type: string
        updated_by_url:
          description: ""
          type: string
        usage:
          description: ""
          type: string
        user:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
      required:
      - name
      title: RepositoryToken
      type: object
    PackageDependencies_dependencies:
      example:
        dep_type: dep_type
        name: name
        version: version
        operator: operator
      properties:
        dep_type:
          description: ""
          type: string
        name:
          description: The name of the package dependency.
          type: string
        operator:
          description: ""
          type: string
        version:
          description: The raw dependency version (if any).
          type: string
      type: object
    PackagesUploadCocoapods:
      example:
        republish: true
        package_file: z123456789
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: z123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadCocoapods
      type: object
    PackagesValidate_uploadTerraform:
      properties:
        package_file:
          description: The primary file for the package.
          example: z123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadTerraform
      type: object
    EntitlementsSync:
      example:
        source: source
      properties:
        source:
          description: The source repository slug (in the same owner namespace).
          type: string
      required:
      - source
      title: EntitlementsSync
      type: object
    EntitlementsCreate:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: '{}'
        is_active: true
        limit_bandwidth_unit: Byte
        scheduled_reset_at: scheduled_reset_at
        limit_bandwidth: 0
        limit_num_clients: 6
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        token: token
        name: name
        limit_date_range_from: limit_date_range_from
        limit_num_downloads: 1
        eula_required: true
        scheduled_reset_period: Never Reset
      properties:
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: None
          enum:
          - Byte
          - Kilobyte
          - Megabyte
          - Gigabyte
          - Terabyte
          - Petabyte
          - Exabyte
          - Zettabyte
          - Yottabyte
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: None
          properties: {}
          type: object
        name:
          description: None
          type: string
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: None
          enum:
          - Never Reset
          - Daily
          - Weekly
          - Fortnightly
          - Monthly
          - Bi-Monthly
          - Quarterly
          - Every 6 months
          - Annual
          type: string
        token:
          description: None
          type: string
      required:
      - name
      title: EntitlementsCreate
      type: object
    FilesAbort:
      example:
        sha256_checksum: sha256_checksum
        filename: filename
        method: put_parts
        md5_checksum: md5_checksum
      properties:
        filename:
          description: Filename for the package file upload.
          type: string
        md5_checksum:
          description: MD5 checksum for a POST-based package file upload.
          type: string
        method:
          description: The method to use for package file upload.
          enum:
          - put_parts
          - put
          - post
          - presigned
          - unsigned_put
          type: string
        sha256_checksum:
          description: SHA256 checksum for a PUT-based package file upload.
          type: string
      required:
      - filename
      title: FilesAbort
      type: object
    RepositoryTokenSync:
      example:
        tokens:
        - limit_date_range_to: limit_date_range_to
          metadata: metadata
          clients: 0
          limit_bandwidth_unit: limit_bandwidth_unit
          scheduled_reset_at: scheduled_reset_at
          usage: usage
          limit_bandwidth: 5
          created_at: created_at
          limit_num_clients: 5
          eula_accepted_at: eula_accepted_at
          limit_package_query: limit_package_query
          limit_path_query: limit_path_query
          default: true
          updated_at: updated_at
          downloads: 6
          user_url: user_url
          limit_date_range_from: limit_date_range_from
          reset_url: reset_url
          limit_num_downloads: 2
          eula_required: true
          refresh_url: refresh_url
          scheduled_reset_period: scheduled_reset_period
          identifier: 1
          is_active: true
          eula_accepted: '{}'
          eula_accepted_from: eula_accepted_from
          created_by_url: created_by_url
          is_limited: true
          slug_perm: slug_perm
          created_by: created_by
          enable_url: enable_url
          self_url: self_url
          token: token
          updated_by_url: updated_by_url
          disable_url: disable_url
          name: name
          updated_by: updated_by
          has_limits: true
          user: user
        - limit_date_range_to: limit_date_range_to
          metadata: metadata
          clients: 0
          limit_bandwidth_unit: limit_bandwidth_unit
          scheduled_reset_at: scheduled_reset_at
          usage: usage
          limit_bandwidth: 5
          created_at: created_at
          limit_num_clients: 5
          eula_accepted_at: eula_accepted_at
          limit_package_query: limit_package_query
          limit_path_query: limit_path_query
          default: true
          updated_at: updated_at
          downloads: 6
          user_url: user_url
          limit_date_range_from: limit_date_range_from
          reset_url: reset_url
          limit_num_downloads: 2
          eula_required: true
          refresh_url: refresh_url
          scheduled_reset_period: scheduled_reset_period
          identifier: 1
          is_active: true
          eula_accepted: '{}'
          eula_accepted_from: eula_accepted_from
          created_by_url: created_by_url
          is_limited: true
          slug_perm: slug_perm
          created_by: created_by
          enable_url: enable_url
          self_url: self_url
          token: token
          updated_by_url: updated_by_url
          disable_url: disable_url
          name: name
          updated_by: updated_by
          has_limits: true
          user: user
      properties:
        tokens:
          description: The entitlements that have been synchronised.
          items:
            $ref: '#/components/schemas/RepositoryTokenSync_tokens'
          title: TokensList
          type: array
      title: RepositoryTokenSync
      type: object
    DebPackageUpload:
      example:
        architectures:
        - name: name
          description: description
        - name: name
          description: description
        security_scan_status_updated_at: security_scan_status_updated_at
        checksum_sha256: checksum_sha256
        release: release
        package_type: 5
        repository: repository
        identifier_perm: identifier_perm
        stage_updated_at: stage_updated_at
        tags_immutable: '{}'
        is_quarantined: true
        slug: slug
        security_scan_started_at: security_scan_started_at
        security_scan_status: Awaiting Security Scan
        indexed: true
        format: format
        status_str: status_str
        version_orig: version_orig
        namespace_url: namespace_url
        slug_perm: slug_perm
        version: version
        license: license
        filename: filename
        size: 5
        cdn_url: cdn_url
        uploaded_at: uploaded_at
        is_downloadable: true
        name: name
        sync_finished_at: sync_finished_at
        files:
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        - checksum_sha512: checksum_sha512
          checksum_sha1: checksum_sha1
          checksum_sha256: checksum_sha256
          is_primary: true
          checksum_md5: checksum_md5
          slug_perm: slug_perm
          filename: filename
          size: 5
          cdn_url: cdn_url
          downloads: 1
          is_synchronised: true
          is_downloadable: true
          signature_url: signature_url
          tag: tag
        num_files: 1
        status: 7
        checksum_sha512: checksum_sha512
        distro: '{}'
        extension: extension
        description: description
        epoch: 6
        is_sync_completed: true
        distro_version: '{}'
        type_display: type_display
        vulnerability_scan_results_url: vulnerability_scan_results_url
        dependencies_checksum_md5: dependencies_checksum_md5
        downloads: 0
        subtype: subtype
        uploader: uploader
        signature_url: signature_url
        repository_url: repository_url
        status_reason: status_reason
        status_updated_at: status_updated_at
        summary: summary
        checksum_sha1: checksum_sha1
        checksum_md5: checksum_md5
        sync_progress: 9
        is_sync_awaiting: true
        uploader_url: uploader_url
        self_html_url: self_html_url
        self_url: self_url
        status_url: status_url
        is_sync_in_flight: true
        security_scan_completed_at: security_scan_completed_at
        is_sync_in_progress: true
        stage_str: stage_str
        stage: 2
        format_url: format_url
        dependencies_url: dependencies_url
        namespace: namespace
        is_sync_failed: true
      properties:
        architectures:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___architectures'
          title: ArchitecturesList
          type: array
        cdn_url:
          description: ""
          type: string
        checksum_md5:
          description: ""
          type: string
        checksum_sha1:
          description: ""
          type: string
        checksum_sha256:
          description: ""
          type: string
        checksum_sha512:
          description: ""
          type: string
        dependencies_checksum_md5:
          description: A checksum of all of the package's dependencies.
          type: string
        dependencies_url:
          description: ""
          type: string
        description:
          description: A textual description of this package.
          type: string
        distro:
          description: ""
          properties: {}
          type: object
        distro_version:
          description: ""
          properties: {}
          type: object
        downloads:
          description: ""
          type: integer
        epoch:
          description: The epoch of the package version (if any).
          type: integer
        extension:
          description: ""
          type: string
        filename:
          description: ""
          type: string
        files:
          description: ""
          items:
            $ref: '#/components/schemas/_packages__owner___repo___files'
          title: FilesList
          type: array
        format:
          description: ""
          type: string
        format_url:
          description: ""
          type: string
        identifier_perm:
          description: Unique and permanent identifier for the package.
          type: string
        indexed:
          description: ""
          type: boolean
        is_downloadable:
          description: ""
          type: boolean
        is_quarantined:
          description: ""
          type: boolean
        is_sync_awaiting:
          description: ""
          type: boolean
        is_sync_completed:
          description: ""
          type: boolean
        is_sync_failed:
          description: ""
          type: boolean
        is_sync_in_flight:
          description: ""
          type: boolean
        is_sync_in_progress:
          description: ""
          type: boolean
        license:
          description: The license of this package.
          type: string
        name:
          description: The name of this package.
          type: string
        namespace:
          description: ""
          type: string
        namespace_url:
          description: ""
          type: string
        num_files:
          description: ""
          type: integer
        package_type:
          description: The type of package contents.
          type: integer
        release:
          description: The release of the package version (if any).
          type: string
        repository:
          description: ""
          type: string
        repository_url:
          description: ""
          type: string
        security_scan_completed_at:
          description: The datetime the security scanning was completed.
          type: string
        security_scan_started_at:
          description: The datetime the security scanning was started.
          type: string
        security_scan_status:
          description: ""
          enum:
          - Awaiting Security Scan
          - Security Scanning in Progress
          - Scan Detected Vulnerabilities
          - Scan Detected No Vulnerabilities
          - Security Scanning Disabled
          - Security Scanning Failed
          - Security Scanning Skipped
          - Security Scanning Not Supported
          type: string
        security_scan_status_updated_at:
          description: The datetime the security scanning status was updated.
          type: string
        self_html_url:
          description: ""
          type: string
        self_url:
          description: ""
          type: string
        signature_url:
          description: ""
          type: string
        size:
          description: The calculated size of the package.
          type: integer
        slug:
          description: The public unique identifier for the package.
          type: string
        slug_perm:
          description: ""
          type: string
        stage:
          description: The synchronisation (in progress) stage of the package.
          type: integer
        stage_str:
          description: ""
          type: string
        stage_updated_at:
          description: The datetime the package stage was updated at.
          type: string
        status:
          description: The synchronisation status of the package.
          type: integer
        status_reason:
          description: A textual description for the synchronous status reason (if
            any
          type: string
        status_str:
          description: ""
          type: string
        status_updated_at:
          description: The datetime the package status was updated at.
          type: string
        status_url:
          description: ""
          type: string
        subtype:
          description: ""
          type: string
        summary:
          description: A one-liner synopsis of this package.
          type: string
        sync_finished_at:
          description: The datetime the package sync was finished at.
          type: string
        sync_progress:
          description: Synchronisation progress (from 0-100)
          type: integer
        tags_immutable:
          description: All immutable tags on the package, grouped by tag type. Immutable
            tags cannot be (easily) deleted.
          properties: {}
          type: object
        type_display:
          description: ""
          type: string
        uploaded_at:
          description: The date this package was uploaded.
          type: string
        uploader:
          description: ""
          type: string
        uploader_url:
          description: ""
          type: string
        version:
          description: The raw version for this package.
          type: string
        version_orig:
          description: ""
          type: string
        vulnerability_scan_results_url:
          description: ""
          type: string
      title: DebPackageUpload
      type: object
    PackagesTag:
      example:
        is_immutable: true
        action: add
        tags:
        - tags
        - tags
      properties:
        action:
          description: None
          enum:
          - add
          - clear
          - remove
          - replace
          type: string
        is_immutable:
          description: If true, created tags will be immutable. An immutable flag
            is a tag that cannot be removed from a package.
          type: boolean
        tags:
          description: A list of tags to apply the action to. Not required for clears.
          items:
            description: ""
            type: string
          title: TagsList
          type: array
      title: PackagesTag
      type: object
    Quota:
      example:
        usage:
          display:
            bandwidth:
              configured: 60 GB
              percentage_used: 0.0%
              plan_limit: 2 TB
              used: 0 B
            storage:
              configured: 30 GB
              percentage_used: 0.109%
              plan_limit: 1 TB
              used: 1.1 GB
          raw:
            bandwidth:
              configured: 64424509440
              percentage_used: 0
              plan_limit: 2199023255552
              used: 0
            storage:
              configured: 32212254720
              percentage_used: 0.109
              plan_limit: 1099511627776
              used: 1197653687
      properties:
        usage:
          description: ""
          example:
            display:
              bandwidth:
                configured: 60 GB
                percentage_used: 0.0%
                plan_limit: 2 TB
                used: 0 B
              storage:
                configured: 30 GB
                percentage_used: 0.109%
                plan_limit: 1 TB
                used: 1.1 GB
            raw:
              bandwidth:
                configured: 64424509440
                percentage_used: 0
                plan_limit: 2199023255552
                used: 0
              storage:
                configured: 32212254720
                percentage_used: 0.109
                plan_limit: 1099511627776
                used: 1197653687
          properties: {}
          type: object
      required:
      - usage
      title: Quota
      type: object
    RepositoryTokenRefresh:
      example:
        limit_date_range_to: limit_date_range_to
        metadata: '{}'
        clients: 0
        limit_bandwidth_unit: Byte
        scheduled_reset_at: scheduled_reset_at
        usage: usage
        limit_bandwidth: 5
        created_at: created_at
        limit_num_clients: 5
        eula_accepted_at: eula_accepted_at
        limit_package_query: limit_package_query
        limit_path_query: limit_path_query
        default: true
        updated_at: updated_at
        downloads: 6
        user_url: user_url
        limit_date_range_from: limit_date_range_from
        reset_url: reset_url
        limit_num_downloads: 2
        eula_required: true
        refresh_url: refresh_url
        scheduled_reset_period: Never Reset
        identifier: 1
        is_active: true
        eula_accepted: '{}'
        eula_accepted_from: eula_accepted_from
        created_by_url: created_by_url
        is_limited: true
        slug_perm: slug_perm
        created_by: created_by
        enable_url: enable_url
        self_url: self_url
        token: token
        updated_by_url: updated_by_url
        disable_url: disable_url
        name: name
        updated_by: updated_by
        has_limits: true
        user: user
      properties:
        clients:
          description: ""
          type: integer
        created_at:
          description: The datetime the token was updated at.
          type: string
        created_by:
          description: ""
          type: string
        created_by_url:
          description: ""
          type: string
        default:
          description: If selected this is the default token for this repository.
          type: boolean
        disable_url:
          description: ""
          type: string
        downloads:
          description: ""
          type: integer
        enable_url:
          description: ""
          type: string
        eula_accepted:
          description: ""
          properties: {}
          type: object
        eula_accepted_at:
          description: The datetime the EULA was accepted at.
          type: string
        eula_accepted_from:
          description: ""
          type: string
        eula_required:
          description: If checked, a EULA acceptance is required for this token.
          type: boolean
        has_limits:
          description: ""
          type: boolean
        identifier:
          description: ""
          type: integer
        is_active:
          description: If enabled, the token will allow downloads based on configured
            restrictions (if any).
          type: boolean
        is_limited:
          description: ""
          type: boolean
        limit_bandwidth:
          description: 'The maximum download bandwidth allowed for the token. Values
            are expressed as the selected unit of bandwidth. Please note that since
            downloads are calculated asynchronously (after the download happens),
            the limit may not be imposed immediately but at a later point. '
          type: integer
        limit_bandwidth_unit:
          description: ""
          enum:
          - Byte
          - Kilobyte
          - Megabyte
          - Gigabyte
          - Terabyte
          - Petabyte
          - Exabyte
          - Zettabyte
          - Yottabyte
          type: string
        limit_date_range_from:
          description: The starting date/time the token is allowed to be used from.
          type: string
        limit_date_range_to:
          description: The ending date/time the token is allowed to be used until.
          type: string
        limit_num_clients:
          description: The maximum number of unique clients allowed for the token.
            Please note that since clients are calculated asynchronously (after the
            download happens), the limit may not be imposed immediately but at a later
            point.
          type: integer
        limit_num_downloads:
          description: The maximum number of downloads allowed for the token. Please
            note that since downloads are calculated asynchronously (after the download
            happens), the limit may not be imposed immediately but at a later point.
          type: integer
        limit_package_query:
          description: The package-based search query to apply to restrict downloads
            to. This uses the same syntax as the standard search used for repositories,
            and also supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. This will still allow access to non-package files, such
            as metadata.
          type: string
        limit_path_query:
          description: The path-based search query to apply to restrict downloads
            to. This supports boolean logic operators such as OR/AND/NOT and parentheses
            for grouping. The path evaluated does not include the domain name, the
            namespace, the entitlement code used, the package format, etc. and it
            always starts with a forward slash.
          type: string
        metadata:
          description: ""
          properties: {}
          type: object
        name:
          description: ""
          type: string
        refresh_url:
          description: ""
          type: string
        reset_url:
          description: ""
          type: string
        scheduled_reset_at:
          description: The time at which the scheduled reset period has elapsed and
            the token limits were automatically reset to zero.
          type: string
        scheduled_reset_period:
          description: ""
          enum:
          - Never Reset
          - Daily
          - Weekly
          - Fortnightly
          - Monthly
          - Bi-Monthly
          - Quarterly
          - Every 6 months
          - Annual
          type: string
        self_url:
          description: ""
          type: string
        slug_perm:
          description: ""
          type: string
        token:
          description: ""
          type: string
        updated_at:
          description: The datetime the token was updated at.
          type: string
        updated_by:
          description: ""
          type: string
        updated_by_url:
          description: ""
          type: string
        usage:
          description: ""
          type: string
        user:
          description: ""
          type: string
        user_url:
          description: ""
          type: string
      title: RepositoryTokenRefresh
      type: object
    PackagesValidate_uploadDocker:
      properties:
        package_file:
          description: The primary file for the package.
          example: y123456789
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesValidate-uploadDocker
      type: object
    PackagesUploadDart:
      example:
        republish: true
        package_file: x123456789a
        tags: tags
      properties:
        package_file:
          description: The primary file for the package.
          example: x123456789a
          type: string
        republish:
          description: If true, the uploaded package will overwrite any others with
            the same attributes (e.g. same version); otherwise, it will be flagged
            as a duplicate.
          type: boolean
        tags:
          description: A comma-separated values list of tags to add to the package.
          type: string
      required:
      - package_file
      title: PackagesUploadDart
      type: object
  securitySchemes:
    apikey:
      in: header
      name: X-Api-Key
      type: apiKey
    basic:
      scheme: basic
      type: http
x-readme:
  explorer-enabled: true
  proxy-enabled: false
  samples-enabled: true
x-original-swagger-version: "2.0"
