/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.703.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// checks if the PackageFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageFile{}

// PackageFile struct for PackageFile
type PackageFile struct {
	CdnUrl         NullableString `json:"cdn_url,omitempty"`
	ChecksumMd5    NullableString `json:"checksum_md5,omitempty"`
	ChecksumSha1   NullableString `json:"checksum_sha1,omitempty"`
	ChecksumSha256 NullableString `json:"checksum_sha256,omitempty"`
	ChecksumSha512 NullableString `json:"checksum_sha512,omitempty"`
	Downloads      *int64         `json:"downloads,omitempty"`
	Filename       *string        `json:"filename,omitempty"`
	IsDownloadable *bool          `json:"is_downloadable,omitempty"`
	IsPrimary      *bool          `json:"is_primary,omitempty"`
	IsSynchronised *bool          `json:"is_synchronised,omitempty"`
	SignatureUrl   NullableString `json:"signature_url,omitempty"`
	// The calculated size of the file.
	Size     *int64  `json:"size,omitempty"`
	SlugPerm *string `json:"slug_perm,omitempty" validate:"regexp=^[-a-zA-Z0-9_]+$"`
	// Freeform descriptor that describes what the file is.
	Tag                  NullableString `json:"tag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PackageFile PackageFile

// NewPackageFile instantiates a new PackageFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageFile() *PackageFile {
	this := PackageFile{}
	return &this
}

// NewPackageFileWithDefaults instantiates a new PackageFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageFileWithDefaults() *PackageFile {
	this := PackageFile{}
	return &this
}

// GetCdnUrl returns the CdnUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetCdnUrl() string {
	if o == nil || IsNil(o.CdnUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CdnUrl.Get()
}

// GetCdnUrlOk returns a tuple with the CdnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetCdnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CdnUrl.Get(), o.CdnUrl.IsSet()
}

// HasCdnUrl returns a boolean if a field has been set.
func (o *PackageFile) HasCdnUrl() bool {
	if o != nil && o.CdnUrl.IsSet() {
		return true
	}

	return false
}

// SetCdnUrl gets a reference to the given NullableString and assigns it to the CdnUrl field.
func (o *PackageFile) SetCdnUrl(v string) {
	o.CdnUrl.Set(&v)
}

// SetCdnUrlNil sets the value for CdnUrl to be an explicit nil
func (o *PackageFile) SetCdnUrlNil() {
	o.CdnUrl.Set(nil)
}

// UnsetCdnUrl ensures that no value is present for CdnUrl, not even an explicit nil
func (o *PackageFile) UnsetCdnUrl() {
	o.CdnUrl.Unset()
}

// GetChecksumMd5 returns the ChecksumMd5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetChecksumMd5() string {
	if o == nil || IsNil(o.ChecksumMd5.Get()) {
		var ret string
		return ret
	}
	return *o.ChecksumMd5.Get()
}

// GetChecksumMd5Ok returns a tuple with the ChecksumMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetChecksumMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChecksumMd5.Get(), o.ChecksumMd5.IsSet()
}

// HasChecksumMd5 returns a boolean if a field has been set.
func (o *PackageFile) HasChecksumMd5() bool {
	if o != nil && o.ChecksumMd5.IsSet() {
		return true
	}

	return false
}

// SetChecksumMd5 gets a reference to the given NullableString and assigns it to the ChecksumMd5 field.
func (o *PackageFile) SetChecksumMd5(v string) {
	o.ChecksumMd5.Set(&v)
}

// SetChecksumMd5Nil sets the value for ChecksumMd5 to be an explicit nil
func (o *PackageFile) SetChecksumMd5Nil() {
	o.ChecksumMd5.Set(nil)
}

// UnsetChecksumMd5 ensures that no value is present for ChecksumMd5, not even an explicit nil
func (o *PackageFile) UnsetChecksumMd5() {
	o.ChecksumMd5.Unset()
}

// GetChecksumSha1 returns the ChecksumSha1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetChecksumSha1() string {
	if o == nil || IsNil(o.ChecksumSha1.Get()) {
		var ret string
		return ret
	}
	return *o.ChecksumSha1.Get()
}

// GetChecksumSha1Ok returns a tuple with the ChecksumSha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetChecksumSha1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChecksumSha1.Get(), o.ChecksumSha1.IsSet()
}

// HasChecksumSha1 returns a boolean if a field has been set.
func (o *PackageFile) HasChecksumSha1() bool {
	if o != nil && o.ChecksumSha1.IsSet() {
		return true
	}

	return false
}

// SetChecksumSha1 gets a reference to the given NullableString and assigns it to the ChecksumSha1 field.
func (o *PackageFile) SetChecksumSha1(v string) {
	o.ChecksumSha1.Set(&v)
}

// SetChecksumSha1Nil sets the value for ChecksumSha1 to be an explicit nil
func (o *PackageFile) SetChecksumSha1Nil() {
	o.ChecksumSha1.Set(nil)
}

// UnsetChecksumSha1 ensures that no value is present for ChecksumSha1, not even an explicit nil
func (o *PackageFile) UnsetChecksumSha1() {
	o.ChecksumSha1.Unset()
}

// GetChecksumSha256 returns the ChecksumSha256 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetChecksumSha256() string {
	if o == nil || IsNil(o.ChecksumSha256.Get()) {
		var ret string
		return ret
	}
	return *o.ChecksumSha256.Get()
}

// GetChecksumSha256Ok returns a tuple with the ChecksumSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetChecksumSha256Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChecksumSha256.Get(), o.ChecksumSha256.IsSet()
}

// HasChecksumSha256 returns a boolean if a field has been set.
func (o *PackageFile) HasChecksumSha256() bool {
	if o != nil && o.ChecksumSha256.IsSet() {
		return true
	}

	return false
}

// SetChecksumSha256 gets a reference to the given NullableString and assigns it to the ChecksumSha256 field.
func (o *PackageFile) SetChecksumSha256(v string) {
	o.ChecksumSha256.Set(&v)
}

// SetChecksumSha256Nil sets the value for ChecksumSha256 to be an explicit nil
func (o *PackageFile) SetChecksumSha256Nil() {
	o.ChecksumSha256.Set(nil)
}

// UnsetChecksumSha256 ensures that no value is present for ChecksumSha256, not even an explicit nil
func (o *PackageFile) UnsetChecksumSha256() {
	o.ChecksumSha256.Unset()
}

// GetChecksumSha512 returns the ChecksumSha512 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetChecksumSha512() string {
	if o == nil || IsNil(o.ChecksumSha512.Get()) {
		var ret string
		return ret
	}
	return *o.ChecksumSha512.Get()
}

// GetChecksumSha512Ok returns a tuple with the ChecksumSha512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetChecksumSha512Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChecksumSha512.Get(), o.ChecksumSha512.IsSet()
}

// HasChecksumSha512 returns a boolean if a field has been set.
func (o *PackageFile) HasChecksumSha512() bool {
	if o != nil && o.ChecksumSha512.IsSet() {
		return true
	}

	return false
}

// SetChecksumSha512 gets a reference to the given NullableString and assigns it to the ChecksumSha512 field.
func (o *PackageFile) SetChecksumSha512(v string) {
	o.ChecksumSha512.Set(&v)
}

// SetChecksumSha512Nil sets the value for ChecksumSha512 to be an explicit nil
func (o *PackageFile) SetChecksumSha512Nil() {
	o.ChecksumSha512.Set(nil)
}

// UnsetChecksumSha512 ensures that no value is present for ChecksumSha512, not even an explicit nil
func (o *PackageFile) UnsetChecksumSha512() {
	o.ChecksumSha512.Unset()
}

// GetDownloads returns the Downloads field value if set, zero value otherwise.
func (o *PackageFile) GetDownloads() int64 {
	if o == nil || IsNil(o.Downloads) {
		var ret int64
		return ret
	}
	return *o.Downloads
}

// GetDownloadsOk returns a tuple with the Downloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetDownloadsOk() (*int64, bool) {
	if o == nil || IsNil(o.Downloads) {
		return nil, false
	}
	return o.Downloads, true
}

// HasDownloads returns a boolean if a field has been set.
func (o *PackageFile) HasDownloads() bool {
	if o != nil && !IsNil(o.Downloads) {
		return true
	}

	return false
}

// SetDownloads gets a reference to the given int64 and assigns it to the Downloads field.
func (o *PackageFile) SetDownloads(v int64) {
	o.Downloads = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *PackageFile) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *PackageFile) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *PackageFile) SetFilename(v string) {
	o.Filename = &v
}

// GetIsDownloadable returns the IsDownloadable field value if set, zero value otherwise.
func (o *PackageFile) GetIsDownloadable() bool {
	if o == nil || IsNil(o.IsDownloadable) {
		var ret bool
		return ret
	}
	return *o.IsDownloadable
}

// GetIsDownloadableOk returns a tuple with the IsDownloadable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetIsDownloadableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDownloadable) {
		return nil, false
	}
	return o.IsDownloadable, true
}

// HasIsDownloadable returns a boolean if a field has been set.
func (o *PackageFile) HasIsDownloadable() bool {
	if o != nil && !IsNil(o.IsDownloadable) {
		return true
	}

	return false
}

// SetIsDownloadable gets a reference to the given bool and assigns it to the IsDownloadable field.
func (o *PackageFile) SetIsDownloadable(v bool) {
	o.IsDownloadable = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *PackageFile) GetIsPrimary() bool {
	if o == nil || IsNil(o.IsPrimary) {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimary) {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *PackageFile) HasIsPrimary() bool {
	if o != nil && !IsNil(o.IsPrimary) {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *PackageFile) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetIsSynchronised returns the IsSynchronised field value if set, zero value otherwise.
func (o *PackageFile) GetIsSynchronised() bool {
	if o == nil || IsNil(o.IsSynchronised) {
		var ret bool
		return ret
	}
	return *o.IsSynchronised
}

// GetIsSynchronisedOk returns a tuple with the IsSynchronised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetIsSynchronisedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSynchronised) {
		return nil, false
	}
	return o.IsSynchronised, true
}

// HasIsSynchronised returns a boolean if a field has been set.
func (o *PackageFile) HasIsSynchronised() bool {
	if o != nil && !IsNil(o.IsSynchronised) {
		return true
	}

	return false
}

// SetIsSynchronised gets a reference to the given bool and assigns it to the IsSynchronised field.
func (o *PackageFile) SetIsSynchronised(v bool) {
	o.IsSynchronised = &v
}

// GetSignatureUrl returns the SignatureUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetSignatureUrl() string {
	if o == nil || IsNil(o.SignatureUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SignatureUrl.Get()
}

// GetSignatureUrlOk returns a tuple with the SignatureUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetSignatureUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignatureUrl.Get(), o.SignatureUrl.IsSet()
}

// HasSignatureUrl returns a boolean if a field has been set.
func (o *PackageFile) HasSignatureUrl() bool {
	if o != nil && o.SignatureUrl.IsSet() {
		return true
	}

	return false
}

// SetSignatureUrl gets a reference to the given NullableString and assigns it to the SignatureUrl field.
func (o *PackageFile) SetSignatureUrl(v string) {
	o.SignatureUrl.Set(&v)
}

// SetSignatureUrlNil sets the value for SignatureUrl to be an explicit nil
func (o *PackageFile) SetSignatureUrlNil() {
	o.SignatureUrl.Set(nil)
}

// UnsetSignatureUrl ensures that no value is present for SignatureUrl, not even an explicit nil
func (o *PackageFile) UnsetSignatureUrl() {
	o.SignatureUrl.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *PackageFile) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PackageFile) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *PackageFile) SetSize(v int64) {
	o.Size = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *PackageFile) GetSlugPerm() string {
	if o == nil || IsNil(o.SlugPerm) {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageFile) GetSlugPermOk() (*string, bool) {
	if o == nil || IsNil(o.SlugPerm) {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *PackageFile) HasSlugPerm() bool {
	if o != nil && !IsNil(o.SlugPerm) {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *PackageFile) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageFile) GetTag() string {
	if o == nil || IsNil(o.Tag.Get()) {
		var ret string
		return ret
	}
	return *o.Tag.Get()
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageFile) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tag.Get(), o.Tag.IsSet()
}

// HasTag returns a boolean if a field has been set.
func (o *PackageFile) HasTag() bool {
	if o != nil && o.Tag.IsSet() {
		return true
	}

	return false
}

// SetTag gets a reference to the given NullableString and assigns it to the Tag field.
func (o *PackageFile) SetTag(v string) {
	o.Tag.Set(&v)
}

// SetTagNil sets the value for Tag to be an explicit nil
func (o *PackageFile) SetTagNil() {
	o.Tag.Set(nil)
}

// UnsetTag ensures that no value is present for Tag, not even an explicit nil
func (o *PackageFile) UnsetTag() {
	o.Tag.Unset()
}

func (o PackageFile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CdnUrl.IsSet() {
		toSerialize["cdn_url"] = o.CdnUrl.Get()
	}
	if o.ChecksumMd5.IsSet() {
		toSerialize["checksum_md5"] = o.ChecksumMd5.Get()
	}
	if o.ChecksumSha1.IsSet() {
		toSerialize["checksum_sha1"] = o.ChecksumSha1.Get()
	}
	if o.ChecksumSha256.IsSet() {
		toSerialize["checksum_sha256"] = o.ChecksumSha256.Get()
	}
	if o.ChecksumSha512.IsSet() {
		toSerialize["checksum_sha512"] = o.ChecksumSha512.Get()
	}
	if !IsNil(o.Downloads) {
		toSerialize["downloads"] = o.Downloads
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.IsDownloadable) {
		toSerialize["is_downloadable"] = o.IsDownloadable
	}
	if !IsNil(o.IsPrimary) {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if !IsNil(o.IsSynchronised) {
		toSerialize["is_synchronised"] = o.IsSynchronised
	}
	if o.SignatureUrl.IsSet() {
		toSerialize["signature_url"] = o.SignatureUrl.Get()
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SlugPerm) {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if o.Tag.IsSet() {
		toSerialize["tag"] = o.Tag.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PackageFile) UnmarshalJSON(data []byte) (err error) {
	varPackageFile := _PackageFile{}

	err = json.Unmarshal(data, &varPackageFile)

	if err != nil {
		return err
	}

	*o = PackageFile(varPackageFile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cdn_url")
		delete(additionalProperties, "checksum_md5")
		delete(additionalProperties, "checksum_sha1")
		delete(additionalProperties, "checksum_sha256")
		delete(additionalProperties, "checksum_sha512")
		delete(additionalProperties, "downloads")
		delete(additionalProperties, "filename")
		delete(additionalProperties, "is_downloadable")
		delete(additionalProperties, "is_primary")
		delete(additionalProperties, "is_synchronised")
		delete(additionalProperties, "signature_url")
		delete(additionalProperties, "size")
		delete(additionalProperties, "slug_perm")
		delete(additionalProperties, "tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePackageFile struct {
	value *PackageFile
	isSet bool
}

func (v NullablePackageFile) Get() *PackageFile {
	return v.value
}

func (v *NullablePackageFile) Set(val *PackageFile) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageFile) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageFile(val *PackageFile) *NullablePackageFile {
	return &NullablePackageFile{value: val, isSet: true}
}

func (v NullablePackageFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
