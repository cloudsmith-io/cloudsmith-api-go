/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.390.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// checks if the VulnerabilityScan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityScan{}

// VulnerabilityScan struct for VulnerabilityScan
type VulnerabilityScan struct {
	Results []Vulnerability `json:"results"`
	Target  string          `json:"target"`
	Type    string          `json:"type"`
}

// NewVulnerabilityScan instantiates a new VulnerabilityScan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityScan(results []Vulnerability, target string, type_ string) *VulnerabilityScan {
	this := VulnerabilityScan{}
	this.Results = results
	this.Target = target
	this.Type = type_
	return &this
}

// NewVulnerabilityScanWithDefaults instantiates a new VulnerabilityScan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityScanWithDefaults() *VulnerabilityScan {
	this := VulnerabilityScan{}
	return &this
}

// GetResults returns the Results field value
func (o *VulnerabilityScan) GetResults() []Vulnerability {
	if o == nil {
		var ret []Vulnerability
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScan) GetResultsOk() ([]Vulnerability, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *VulnerabilityScan) SetResults(v []Vulnerability) {
	o.Results = v
}

// GetTarget returns the Target field value
func (o *VulnerabilityScan) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScan) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *VulnerabilityScan) SetTarget(v string) {
	o.Target = v
}

// GetType returns the Type field value
func (o *VulnerabilityScan) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScan) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VulnerabilityScan) SetType(v string) {
	o.Type = v
}

func (o VulnerabilityScan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityScan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["target"] = o.Target
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableVulnerabilityScan struct {
	value *VulnerabilityScan
	isSet bool
}

func (v NullableVulnerabilityScan) Get() *VulnerabilityScan {
	return v.value
}

func (v *NullableVulnerabilityScan) Set(val *VulnerabilityScan) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityScan) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityScan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityScan(val *VulnerabilityScan) *NullableVulnerabilityScan {
	return &NullableVulnerabilityScan{value: val, isSet: true}
}

func (v NullableVulnerabilityScan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityScan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
