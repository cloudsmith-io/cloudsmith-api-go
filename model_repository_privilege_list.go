/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.121.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// RepositoryPrivilegeList struct for RepositoryPrivilegeList
type RepositoryPrivilegeList struct {
	// List of objects with explicit privileges to the repository.
	Privileges *string `json:"privileges,omitempty"`
}

// NewRepositoryPrivilegeList instantiates a new RepositoryPrivilegeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryPrivilegeList() *RepositoryPrivilegeList {
	this := RepositoryPrivilegeList{}
	return &this
}

// NewRepositoryPrivilegeListWithDefaults instantiates a new RepositoryPrivilegeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryPrivilegeListWithDefaults() *RepositoryPrivilegeList {
	this := RepositoryPrivilegeList{}
	return &this
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *RepositoryPrivilegeList) GetPrivileges() string {
	if o == nil || o.Privileges == nil {
		var ret string
		return ret
	}
	return *o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryPrivilegeList) GetPrivilegesOk() (*string, bool) {
	if o == nil || o.Privileges == nil {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *RepositoryPrivilegeList) HasPrivileges() bool {
	if o != nil && o.Privileges != nil {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given string and assigns it to the Privileges field.
func (o *RepositoryPrivilegeList) SetPrivileges(v string) {
	o.Privileges = &v
}

func (o RepositoryPrivilegeList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Privileges != nil {
		toSerialize["privileges"] = o.Privileges
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryPrivilegeList struct {
	value *RepositoryPrivilegeList
	isSet bool
}

func (v NullableRepositoryPrivilegeList) Get() *RepositoryPrivilegeList {
	return v.value
}

func (v *NullableRepositoryPrivilegeList) Set(val *RepositoryPrivilegeList) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryPrivilegeList) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryPrivilegeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryPrivilegeList(val *RepositoryPrivilegeList) *NullableRepositoryPrivilegeList {
	return &NullableRepositoryPrivilegeList{value: val, isSet: true}
}

func (v NullableRepositoryPrivilegeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryPrivilegeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
