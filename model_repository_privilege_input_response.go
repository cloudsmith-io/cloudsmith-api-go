/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// RepositoryPrivilegeInputResponse struct for RepositoryPrivilegeInputResponse
type RepositoryPrivilegeInputResponse struct {
	// List of objects with explicit privileges to the repository.
	Privileges []RepositoryPrivilegeDict `json:"privileges"`
}

// NewRepositoryPrivilegeInputResponse instantiates a new RepositoryPrivilegeInputResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryPrivilegeInputResponse(privileges []RepositoryPrivilegeDict) *RepositoryPrivilegeInputResponse {
	this := RepositoryPrivilegeInputResponse{}
	this.Privileges = privileges
	return &this
}

// NewRepositoryPrivilegeInputResponseWithDefaults instantiates a new RepositoryPrivilegeInputResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryPrivilegeInputResponseWithDefaults() *RepositoryPrivilegeInputResponse {
	this := RepositoryPrivilegeInputResponse{}
	return &this
}

// GetPrivileges returns the Privileges field value
func (o *RepositoryPrivilegeInputResponse) GetPrivileges() []RepositoryPrivilegeDict {
	if o == nil {
		var ret []RepositoryPrivilegeDict
		return ret
	}

	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value
// and a boolean to check if the value has been set.
func (o *RepositoryPrivilegeInputResponse) GetPrivilegesOk() ([]RepositoryPrivilegeDict, bool) {
	if o == nil {
		return nil, false
	}
	return o.Privileges, true
}

// SetPrivileges sets field value
func (o *RepositoryPrivilegeInputResponse) SetPrivileges(v []RepositoryPrivilegeDict) {
	o.Privileges = v
}

func (o RepositoryPrivilegeInputResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["privileges"] = o.Privileges
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryPrivilegeInputResponse struct {
	value *RepositoryPrivilegeInputResponse
	isSet bool
}

func (v NullableRepositoryPrivilegeInputResponse) Get() *RepositoryPrivilegeInputResponse {
	return v.value
}

func (v *NullableRepositoryPrivilegeInputResponse) Set(val *RepositoryPrivilegeInputResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryPrivilegeInputResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryPrivilegeInputResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryPrivilegeInputResponse(val *RepositoryPrivilegeInputResponse) *NullableRepositoryPrivilegeInputResponse {
	return &NullableRepositoryPrivilegeInputResponse{value: val, isSet: true}
}

func (v NullableRepositoryPrivilegeInputResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryPrivilegeInputResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
