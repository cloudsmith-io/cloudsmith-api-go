/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.40.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// Package struct for Package
type Package struct {
	//
	Architectures []PackagesOwnerRepoArchitectures `json:"architectures,omitempty"`
	//
	CdnUrl *string `json:"cdn_url,omitempty"`
	//
	ChecksumMd5 *string `json:"checksum_md5,omitempty"`
	//
	ChecksumSha1 *string `json:"checksum_sha1,omitempty"`
	//
	ChecksumSha256 *string `json:"checksum_sha256,omitempty"`
	//
	ChecksumSha512 *string `json:"checksum_sha512,omitempty"`
	// A checksum of all of the package's dependencies.
	DependenciesChecksumMd5 *string `json:"dependencies_checksum_md5,omitempty"`
	//
	DependenciesUrl *string `json:"dependencies_url,omitempty"`
	// A textual description of this package.
	Description *string `json:"description,omitempty"`
	//
	Distro map[string]interface{} `json:"distro,omitempty"`
	//
	DistroVersion map[string]interface{} `json:"distro_version,omitempty"`
	//
	Downloads *int64 `json:"downloads,omitempty"`
	// The epoch of the package version (if any).
	Epoch *int64 `json:"epoch,omitempty"`
	//
	Extension *string `json:"extension,omitempty"`
	//
	Filename *string `json:"filename,omitempty"`
	//
	Files []PackagesOwnerRepoFiles `json:"files,omitempty"`
	//
	Format *string `json:"format,omitempty"`
	//
	FormatUrl *string `json:"format_url,omitempty"`
	// Unique and permanent identifier for the package.
	IdentifierPerm *string `json:"identifier_perm,omitempty"`
	//
	Indexed *bool `json:"indexed,omitempty"`
	//
	IsSyncAwaiting *bool `json:"is_sync_awaiting,omitempty"`
	//
	IsSyncCompleted *bool `json:"is_sync_completed,omitempty"`
	//
	IsSyncFailed *bool `json:"is_sync_failed,omitempty"`
	//
	IsSyncInFlight *bool `json:"is_sync_in_flight,omitempty"`
	//
	IsSyncInProgress *bool `json:"is_sync_in_progress,omitempty"`
	// The license of this package.
	License *string `json:"license,omitempty"`
	// The name of this package.
	Name *string `json:"name,omitempty"`
	//
	Namespace *string `json:"namespace,omitempty"`
	//
	NamespaceUrl *string `json:"namespace_url,omitempty"`
	//
	NumFiles *int64 `json:"num_files,omitempty"`
	// The type of package contents.
	PackageType *int64 `json:"package_type,omitempty"`
	// The release of the package version (if any).
	Release *string `json:"release,omitempty"`
	//
	Repository *string `json:"repository,omitempty"`
	//
	RepositoryUrl *string `json:"repository_url,omitempty"`
	// The datetime the security scanning was completed.
	SecurityScanCompletedAt *string `json:"security_scan_completed_at,omitempty"`
	// The datetime the security scanning was started.
	SecurityScanStartedAt *string `json:"security_scan_started_at,omitempty"`
	//
	SecurityScanStatus *string `json:"security_scan_status,omitempty"`
	// The datetime the security scanning status was updated.
	SecurityScanStatusUpdatedAt *string `json:"security_scan_status_updated_at,omitempty"`
	//
	SelfHtmlUrl *string `json:"self_html_url,omitempty"`
	//
	SelfUrl *string `json:"self_url,omitempty"`
	//
	SignatureUrl *string `json:"signature_url,omitempty"`
	// The calculated size of the package.
	Size *int64 `json:"size,omitempty"`
	// The public unique identifier for the package.
	Slug *string `json:"slug,omitempty"`
	//
	SlugPerm *string `json:"slug_perm,omitempty"`
	// The synchronisation (in progress) stage of the package.
	Stage *string `json:"stage,omitempty"`
	//
	StageStr *string `json:"stage_str,omitempty"`
	// The datetime the package stage was updated at.
	StageUpdatedAt *string `json:"stage_updated_at,omitempty"`
	// The synchronisation status of the package.
	Status *string `json:"status,omitempty"`
	// A textual description for the synchronous status reason (if any
	StatusReason *string `json:"status_reason,omitempty"`
	//
	StatusStr *string `json:"status_str,omitempty"`
	// The datetime the package status was updated at.
	StatusUpdatedAt *string `json:"status_updated_at,omitempty"`
	//
	StatusUrl *string `json:"status_url,omitempty"`
	//
	Subtype *string `json:"subtype,omitempty"`
	// A one-liner synopsis of this package.
	Summary *string `json:"summary,omitempty"`
	// The datetime the package sync was finished at.
	SyncFinishedAt *string `json:"sync_finished_at,omitempty"`
	// Synchronisation progress (from 0-100)
	SyncProgress *int64 `json:"sync_progress,omitempty"`
	// All tags on the package, grouped by tag type. This includes immutable tags, but doesn't distinguish them from mutable. To see which tags are immutable specifically, see the tags_immutable field.
	Tags map[string]interface{} `json:"tags,omitempty"`
	// All immutable tags on the package, grouped by tag type. Immutable tags cannot be (easily) deleted.
	TagsImmutable map[string]interface{} `json:"tags_immutable,omitempty"`
	//
	TypeDisplay *string `json:"type_display,omitempty"`
	// The date this package was uploaded.
	UploadedAt *string `json:"uploaded_at,omitempty"`
	//
	Uploader *string `json:"uploader,omitempty"`
	//
	UploaderUrl *string `json:"uploader_url,omitempty"`
	// The raw version for this package.
	Version *string `json:"version,omitempty"`
	//
	VersionOrig *string `json:"version_orig,omitempty"`
	//
	VulnerabilityScanResultsUrl *string `json:"vulnerability_scan_results_url,omitempty"`
}

// NewPackage instantiates a new Package object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackage() *Package {
	this := Package{}
	return &this
}

// NewPackageWithDefaults instantiates a new Package object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageWithDefaults() *Package {
	this := Package{}
	return &this
}

// GetArchitectures returns the Architectures field value if set, zero value otherwise.
func (o *Package) GetArchitectures() []PackagesOwnerRepoArchitectures {
	if o == nil || o.Architectures == nil {
		var ret []PackagesOwnerRepoArchitectures
		return ret
	}
	return o.Architectures
}

// GetArchitecturesOk returns a tuple with the Architectures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetArchitecturesOk() ([]PackagesOwnerRepoArchitectures, bool) {
	if o == nil || o.Architectures == nil {
		return nil, false
	}
	return o.Architectures, true
}

// HasArchitectures returns a boolean if a field has been set.
func (o *Package) HasArchitectures() bool {
	if o != nil && o.Architectures != nil {
		return true
	}

	return false
}

// SetArchitectures gets a reference to the given []PackagesOwnerRepoArchitectures and assigns it to the Architectures field.
func (o *Package) SetArchitectures(v []PackagesOwnerRepoArchitectures) {
	o.Architectures = v
}

// GetCdnUrl returns the CdnUrl field value if set, zero value otherwise.
func (o *Package) GetCdnUrl() string {
	if o == nil || o.CdnUrl == nil {
		var ret string
		return ret
	}
	return *o.CdnUrl
}

// GetCdnUrlOk returns a tuple with the CdnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetCdnUrlOk() (*string, bool) {
	if o == nil || o.CdnUrl == nil {
		return nil, false
	}
	return o.CdnUrl, true
}

// HasCdnUrl returns a boolean if a field has been set.
func (o *Package) HasCdnUrl() bool {
	if o != nil && o.CdnUrl != nil {
		return true
	}

	return false
}

// SetCdnUrl gets a reference to the given string and assigns it to the CdnUrl field.
func (o *Package) SetCdnUrl(v string) {
	o.CdnUrl = &v
}

// GetChecksumMd5 returns the ChecksumMd5 field value if set, zero value otherwise.
func (o *Package) GetChecksumMd5() string {
	if o == nil || o.ChecksumMd5 == nil {
		var ret string
		return ret
	}
	return *o.ChecksumMd5
}

// GetChecksumMd5Ok returns a tuple with the ChecksumMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetChecksumMd5Ok() (*string, bool) {
	if o == nil || o.ChecksumMd5 == nil {
		return nil, false
	}
	return o.ChecksumMd5, true
}

// HasChecksumMd5 returns a boolean if a field has been set.
func (o *Package) HasChecksumMd5() bool {
	if o != nil && o.ChecksumMd5 != nil {
		return true
	}

	return false
}

// SetChecksumMd5 gets a reference to the given string and assigns it to the ChecksumMd5 field.
func (o *Package) SetChecksumMd5(v string) {
	o.ChecksumMd5 = &v
}

// GetChecksumSha1 returns the ChecksumSha1 field value if set, zero value otherwise.
func (o *Package) GetChecksumSha1() string {
	if o == nil || o.ChecksumSha1 == nil {
		var ret string
		return ret
	}
	return *o.ChecksumSha1
}

// GetChecksumSha1Ok returns a tuple with the ChecksumSha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetChecksumSha1Ok() (*string, bool) {
	if o == nil || o.ChecksumSha1 == nil {
		return nil, false
	}
	return o.ChecksumSha1, true
}

// HasChecksumSha1 returns a boolean if a field has been set.
func (o *Package) HasChecksumSha1() bool {
	if o != nil && o.ChecksumSha1 != nil {
		return true
	}

	return false
}

// SetChecksumSha1 gets a reference to the given string and assigns it to the ChecksumSha1 field.
func (o *Package) SetChecksumSha1(v string) {
	o.ChecksumSha1 = &v
}

// GetChecksumSha256 returns the ChecksumSha256 field value if set, zero value otherwise.
func (o *Package) GetChecksumSha256() string {
	if o == nil || o.ChecksumSha256 == nil {
		var ret string
		return ret
	}
	return *o.ChecksumSha256
}

// GetChecksumSha256Ok returns a tuple with the ChecksumSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetChecksumSha256Ok() (*string, bool) {
	if o == nil || o.ChecksumSha256 == nil {
		return nil, false
	}
	return o.ChecksumSha256, true
}

// HasChecksumSha256 returns a boolean if a field has been set.
func (o *Package) HasChecksumSha256() bool {
	if o != nil && o.ChecksumSha256 != nil {
		return true
	}

	return false
}

// SetChecksumSha256 gets a reference to the given string and assigns it to the ChecksumSha256 field.
func (o *Package) SetChecksumSha256(v string) {
	o.ChecksumSha256 = &v
}

// GetChecksumSha512 returns the ChecksumSha512 field value if set, zero value otherwise.
func (o *Package) GetChecksumSha512() string {
	if o == nil || o.ChecksumSha512 == nil {
		var ret string
		return ret
	}
	return *o.ChecksumSha512
}

// GetChecksumSha512Ok returns a tuple with the ChecksumSha512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetChecksumSha512Ok() (*string, bool) {
	if o == nil || o.ChecksumSha512 == nil {
		return nil, false
	}
	return o.ChecksumSha512, true
}

// HasChecksumSha512 returns a boolean if a field has been set.
func (o *Package) HasChecksumSha512() bool {
	if o != nil && o.ChecksumSha512 != nil {
		return true
	}

	return false
}

// SetChecksumSha512 gets a reference to the given string and assigns it to the ChecksumSha512 field.
func (o *Package) SetChecksumSha512(v string) {
	o.ChecksumSha512 = &v
}

// GetDependenciesChecksumMd5 returns the DependenciesChecksumMd5 field value if set, zero value otherwise.
func (o *Package) GetDependenciesChecksumMd5() string {
	if o == nil || o.DependenciesChecksumMd5 == nil {
		var ret string
		return ret
	}
	return *o.DependenciesChecksumMd5
}

// GetDependenciesChecksumMd5Ok returns a tuple with the DependenciesChecksumMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDependenciesChecksumMd5Ok() (*string, bool) {
	if o == nil || o.DependenciesChecksumMd5 == nil {
		return nil, false
	}
	return o.DependenciesChecksumMd5, true
}

// HasDependenciesChecksumMd5 returns a boolean if a field has been set.
func (o *Package) HasDependenciesChecksumMd5() bool {
	if o != nil && o.DependenciesChecksumMd5 != nil {
		return true
	}

	return false
}

// SetDependenciesChecksumMd5 gets a reference to the given string and assigns it to the DependenciesChecksumMd5 field.
func (o *Package) SetDependenciesChecksumMd5(v string) {
	o.DependenciesChecksumMd5 = &v
}

// GetDependenciesUrl returns the DependenciesUrl field value if set, zero value otherwise.
func (o *Package) GetDependenciesUrl() string {
	if o == nil || o.DependenciesUrl == nil {
		var ret string
		return ret
	}
	return *o.DependenciesUrl
}

// GetDependenciesUrlOk returns a tuple with the DependenciesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDependenciesUrlOk() (*string, bool) {
	if o == nil || o.DependenciesUrl == nil {
		return nil, false
	}
	return o.DependenciesUrl, true
}

// HasDependenciesUrl returns a boolean if a field has been set.
func (o *Package) HasDependenciesUrl() bool {
	if o != nil && o.DependenciesUrl != nil {
		return true
	}

	return false
}

// SetDependenciesUrl gets a reference to the given string and assigns it to the DependenciesUrl field.
func (o *Package) SetDependenciesUrl(v string) {
	o.DependenciesUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Package) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Package) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Package) SetDescription(v string) {
	o.Description = &v
}

// GetDistro returns the Distro field value if set, zero value otherwise.
func (o *Package) GetDistro() map[string]interface{} {
	if o == nil || o.Distro == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Distro
}

// GetDistroOk returns a tuple with the Distro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDistroOk() (map[string]interface{}, bool) {
	if o == nil || o.Distro == nil {
		return nil, false
	}
	return o.Distro, true
}

// HasDistro returns a boolean if a field has been set.
func (o *Package) HasDistro() bool {
	if o != nil && o.Distro != nil {
		return true
	}

	return false
}

// SetDistro gets a reference to the given map[string]interface{} and assigns it to the Distro field.
func (o *Package) SetDistro(v map[string]interface{}) {
	o.Distro = v
}

// GetDistroVersion returns the DistroVersion field value if set, zero value otherwise.
func (o *Package) GetDistroVersion() map[string]interface{} {
	if o == nil || o.DistroVersion == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.DistroVersion
}

// GetDistroVersionOk returns a tuple with the DistroVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDistroVersionOk() (map[string]interface{}, bool) {
	if o == nil || o.DistroVersion == nil {
		return nil, false
	}
	return o.DistroVersion, true
}

// HasDistroVersion returns a boolean if a field has been set.
func (o *Package) HasDistroVersion() bool {
	if o != nil && o.DistroVersion != nil {
		return true
	}

	return false
}

// SetDistroVersion gets a reference to the given map[string]interface{} and assigns it to the DistroVersion field.
func (o *Package) SetDistroVersion(v map[string]interface{}) {
	o.DistroVersion = v
}

// GetDownloads returns the Downloads field value if set, zero value otherwise.
func (o *Package) GetDownloads() int64 {
	if o == nil || o.Downloads == nil {
		var ret int64
		return ret
	}
	return *o.Downloads
}

// GetDownloadsOk returns a tuple with the Downloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetDownloadsOk() (*int64, bool) {
	if o == nil || o.Downloads == nil {
		return nil, false
	}
	return o.Downloads, true
}

// HasDownloads returns a boolean if a field has been set.
func (o *Package) HasDownloads() bool {
	if o != nil && o.Downloads != nil {
		return true
	}

	return false
}

// SetDownloads gets a reference to the given int64 and assigns it to the Downloads field.
func (o *Package) SetDownloads(v int64) {
	o.Downloads = &v
}

// GetEpoch returns the Epoch field value if set, zero value otherwise.
func (o *Package) GetEpoch() int64 {
	if o == nil || o.Epoch == nil {
		var ret int64
		return ret
	}
	return *o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetEpochOk() (*int64, bool) {
	if o == nil || o.Epoch == nil {
		return nil, false
	}
	return o.Epoch, true
}

// HasEpoch returns a boolean if a field has been set.
func (o *Package) HasEpoch() bool {
	if o != nil && o.Epoch != nil {
		return true
	}

	return false
}

// SetEpoch gets a reference to the given int64 and assigns it to the Epoch field.
func (o *Package) SetEpoch(v int64) {
	o.Epoch = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *Package) GetExtension() string {
	if o == nil || o.Extension == nil {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetExtensionOk() (*string, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *Package) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *Package) SetExtension(v string) {
	o.Extension = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *Package) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *Package) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *Package) SetFilename(v string) {
	o.Filename = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *Package) GetFiles() []PackagesOwnerRepoFiles {
	if o == nil || o.Files == nil {
		var ret []PackagesOwnerRepoFiles
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetFilesOk() ([]PackagesOwnerRepoFiles, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *Package) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []PackagesOwnerRepoFiles and assigns it to the Files field.
func (o *Package) SetFiles(v []PackagesOwnerRepoFiles) {
	o.Files = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *Package) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *Package) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *Package) SetFormat(v string) {
	o.Format = &v
}

// GetFormatUrl returns the FormatUrl field value if set, zero value otherwise.
func (o *Package) GetFormatUrl() string {
	if o == nil || o.FormatUrl == nil {
		var ret string
		return ret
	}
	return *o.FormatUrl
}

// GetFormatUrlOk returns a tuple with the FormatUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetFormatUrlOk() (*string, bool) {
	if o == nil || o.FormatUrl == nil {
		return nil, false
	}
	return o.FormatUrl, true
}

// HasFormatUrl returns a boolean if a field has been set.
func (o *Package) HasFormatUrl() bool {
	if o != nil && o.FormatUrl != nil {
		return true
	}

	return false
}

// SetFormatUrl gets a reference to the given string and assigns it to the FormatUrl field.
func (o *Package) SetFormatUrl(v string) {
	o.FormatUrl = &v
}

// GetIdentifierPerm returns the IdentifierPerm field value if set, zero value otherwise.
func (o *Package) GetIdentifierPerm() string {
	if o == nil || o.IdentifierPerm == nil {
		var ret string
		return ret
	}
	return *o.IdentifierPerm
}

// GetIdentifierPermOk returns a tuple with the IdentifierPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIdentifierPermOk() (*string, bool) {
	if o == nil || o.IdentifierPerm == nil {
		return nil, false
	}
	return o.IdentifierPerm, true
}

// HasIdentifierPerm returns a boolean if a field has been set.
func (o *Package) HasIdentifierPerm() bool {
	if o != nil && o.IdentifierPerm != nil {
		return true
	}

	return false
}

// SetIdentifierPerm gets a reference to the given string and assigns it to the IdentifierPerm field.
func (o *Package) SetIdentifierPerm(v string) {
	o.IdentifierPerm = &v
}

// GetIndexed returns the Indexed field value if set, zero value otherwise.
func (o *Package) GetIndexed() bool {
	if o == nil || o.Indexed == nil {
		var ret bool
		return ret
	}
	return *o.Indexed
}

// GetIndexedOk returns a tuple with the Indexed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIndexedOk() (*bool, bool) {
	if o == nil || o.Indexed == nil {
		return nil, false
	}
	return o.Indexed, true
}

// HasIndexed returns a boolean if a field has been set.
func (o *Package) HasIndexed() bool {
	if o != nil && o.Indexed != nil {
		return true
	}

	return false
}

// SetIndexed gets a reference to the given bool and assigns it to the Indexed field.
func (o *Package) SetIndexed(v bool) {
	o.Indexed = &v
}

// GetIsSyncAwaiting returns the IsSyncAwaiting field value if set, zero value otherwise.
func (o *Package) GetIsSyncAwaiting() bool {
	if o == nil || o.IsSyncAwaiting == nil {
		var ret bool
		return ret
	}
	return *o.IsSyncAwaiting
}

// GetIsSyncAwaitingOk returns a tuple with the IsSyncAwaiting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIsSyncAwaitingOk() (*bool, bool) {
	if o == nil || o.IsSyncAwaiting == nil {
		return nil, false
	}
	return o.IsSyncAwaiting, true
}

// HasIsSyncAwaiting returns a boolean if a field has been set.
func (o *Package) HasIsSyncAwaiting() bool {
	if o != nil && o.IsSyncAwaiting != nil {
		return true
	}

	return false
}

// SetIsSyncAwaiting gets a reference to the given bool and assigns it to the IsSyncAwaiting field.
func (o *Package) SetIsSyncAwaiting(v bool) {
	o.IsSyncAwaiting = &v
}

// GetIsSyncCompleted returns the IsSyncCompleted field value if set, zero value otherwise.
func (o *Package) GetIsSyncCompleted() bool {
	if o == nil || o.IsSyncCompleted == nil {
		var ret bool
		return ret
	}
	return *o.IsSyncCompleted
}

// GetIsSyncCompletedOk returns a tuple with the IsSyncCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIsSyncCompletedOk() (*bool, bool) {
	if o == nil || o.IsSyncCompleted == nil {
		return nil, false
	}
	return o.IsSyncCompleted, true
}

// HasIsSyncCompleted returns a boolean if a field has been set.
func (o *Package) HasIsSyncCompleted() bool {
	if o != nil && o.IsSyncCompleted != nil {
		return true
	}

	return false
}

// SetIsSyncCompleted gets a reference to the given bool and assigns it to the IsSyncCompleted field.
func (o *Package) SetIsSyncCompleted(v bool) {
	o.IsSyncCompleted = &v
}

// GetIsSyncFailed returns the IsSyncFailed field value if set, zero value otherwise.
func (o *Package) GetIsSyncFailed() bool {
	if o == nil || o.IsSyncFailed == nil {
		var ret bool
		return ret
	}
	return *o.IsSyncFailed
}

// GetIsSyncFailedOk returns a tuple with the IsSyncFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIsSyncFailedOk() (*bool, bool) {
	if o == nil || o.IsSyncFailed == nil {
		return nil, false
	}
	return o.IsSyncFailed, true
}

// HasIsSyncFailed returns a boolean if a field has been set.
func (o *Package) HasIsSyncFailed() bool {
	if o != nil && o.IsSyncFailed != nil {
		return true
	}

	return false
}

// SetIsSyncFailed gets a reference to the given bool and assigns it to the IsSyncFailed field.
func (o *Package) SetIsSyncFailed(v bool) {
	o.IsSyncFailed = &v
}

// GetIsSyncInFlight returns the IsSyncInFlight field value if set, zero value otherwise.
func (o *Package) GetIsSyncInFlight() bool {
	if o == nil || o.IsSyncInFlight == nil {
		var ret bool
		return ret
	}
	return *o.IsSyncInFlight
}

// GetIsSyncInFlightOk returns a tuple with the IsSyncInFlight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIsSyncInFlightOk() (*bool, bool) {
	if o == nil || o.IsSyncInFlight == nil {
		return nil, false
	}
	return o.IsSyncInFlight, true
}

// HasIsSyncInFlight returns a boolean if a field has been set.
func (o *Package) HasIsSyncInFlight() bool {
	if o != nil && o.IsSyncInFlight != nil {
		return true
	}

	return false
}

// SetIsSyncInFlight gets a reference to the given bool and assigns it to the IsSyncInFlight field.
func (o *Package) SetIsSyncInFlight(v bool) {
	o.IsSyncInFlight = &v
}

// GetIsSyncInProgress returns the IsSyncInProgress field value if set, zero value otherwise.
func (o *Package) GetIsSyncInProgress() bool {
	if o == nil || o.IsSyncInProgress == nil {
		var ret bool
		return ret
	}
	return *o.IsSyncInProgress
}

// GetIsSyncInProgressOk returns a tuple with the IsSyncInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetIsSyncInProgressOk() (*bool, bool) {
	if o == nil || o.IsSyncInProgress == nil {
		return nil, false
	}
	return o.IsSyncInProgress, true
}

// HasIsSyncInProgress returns a boolean if a field has been set.
func (o *Package) HasIsSyncInProgress() bool {
	if o != nil && o.IsSyncInProgress != nil {
		return true
	}

	return false
}

// SetIsSyncInProgress gets a reference to the given bool and assigns it to the IsSyncInProgress field.
func (o *Package) SetIsSyncInProgress(v bool) {
	o.IsSyncInProgress = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *Package) GetLicense() string {
	if o == nil || o.License == nil {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetLicenseOk() (*string, bool) {
	if o == nil || o.License == nil {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *Package) HasLicense() bool {
	if o != nil && o.License != nil {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *Package) SetLicense(v string) {
	o.License = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Package) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Package) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Package) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *Package) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *Package) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *Package) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNamespaceUrl returns the NamespaceUrl field value if set, zero value otherwise.
func (o *Package) GetNamespaceUrl() string {
	if o == nil || o.NamespaceUrl == nil {
		var ret string
		return ret
	}
	return *o.NamespaceUrl
}

// GetNamespaceUrlOk returns a tuple with the NamespaceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetNamespaceUrlOk() (*string, bool) {
	if o == nil || o.NamespaceUrl == nil {
		return nil, false
	}
	return o.NamespaceUrl, true
}

// HasNamespaceUrl returns a boolean if a field has been set.
func (o *Package) HasNamespaceUrl() bool {
	if o != nil && o.NamespaceUrl != nil {
		return true
	}

	return false
}

// SetNamespaceUrl gets a reference to the given string and assigns it to the NamespaceUrl field.
func (o *Package) SetNamespaceUrl(v string) {
	o.NamespaceUrl = &v
}

// GetNumFiles returns the NumFiles field value if set, zero value otherwise.
func (o *Package) GetNumFiles() int64 {
	if o == nil || o.NumFiles == nil {
		var ret int64
		return ret
	}
	return *o.NumFiles
}

// GetNumFilesOk returns a tuple with the NumFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetNumFilesOk() (*int64, bool) {
	if o == nil || o.NumFiles == nil {
		return nil, false
	}
	return o.NumFiles, true
}

// HasNumFiles returns a boolean if a field has been set.
func (o *Package) HasNumFiles() bool {
	if o != nil && o.NumFiles != nil {
		return true
	}

	return false
}

// SetNumFiles gets a reference to the given int64 and assigns it to the NumFiles field.
func (o *Package) SetNumFiles(v int64) {
	o.NumFiles = &v
}

// GetPackageType returns the PackageType field value if set, zero value otherwise.
func (o *Package) GetPackageType() string {
	if o == nil || o.PackageType == nil {
		var ret string
		return ret
	}
	return *o.PackageType
}

// GetPackageTypeOk returns a tuple with the PackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetPackageTypeOk() (*string, bool) {
	if o == nil || o.PackageType == nil {
		return nil, false
	}
	return o.PackageType, true
}

// HasPackageType returns a boolean if a field has been set.
func (o *Package) HasPackageType() bool {
	if o != nil && o.PackageType != nil {
		return true
	}

	return false
}

// SetPackageType gets a reference to the given string and assigns it to the PackageType field.
func (o *Package) SetPackageType(v string) {
	o.PackageType = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *Package) GetRelease() string {
	if o == nil || o.Release == nil {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetReleaseOk() (*string, bool) {
	if o == nil || o.Release == nil {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *Package) HasRelease() bool {
	if o != nil && o.Release != nil {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *Package) SetRelease(v string) {
	o.Release = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *Package) GetRepository() string {
	if o == nil || o.Repository == nil {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetRepositoryOk() (*string, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *Package) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *Package) SetRepository(v string) {
	o.Repository = &v
}

// GetRepositoryUrl returns the RepositoryUrl field value if set, zero value otherwise.
func (o *Package) GetRepositoryUrl() string {
	if o == nil || o.RepositoryUrl == nil {
		var ret string
		return ret
	}
	return *o.RepositoryUrl
}

// GetRepositoryUrlOk returns a tuple with the RepositoryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetRepositoryUrlOk() (*string, bool) {
	if o == nil || o.RepositoryUrl == nil {
		return nil, false
	}
	return o.RepositoryUrl, true
}

// HasRepositoryUrl returns a boolean if a field has been set.
func (o *Package) HasRepositoryUrl() bool {
	if o != nil && o.RepositoryUrl != nil {
		return true
	}

	return false
}

// SetRepositoryUrl gets a reference to the given string and assigns it to the RepositoryUrl field.
func (o *Package) SetRepositoryUrl(v string) {
	o.RepositoryUrl = &v
}

// GetSecurityScanCompletedAt returns the SecurityScanCompletedAt field value if set, zero value otherwise.
func (o *Package) GetSecurityScanCompletedAt() string {
	if o == nil || o.SecurityScanCompletedAt == nil {
		var ret string
		return ret
	}
	return *o.SecurityScanCompletedAt
}

// GetSecurityScanCompletedAtOk returns a tuple with the SecurityScanCompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSecurityScanCompletedAtOk() (*string, bool) {
	if o == nil || o.SecurityScanCompletedAt == nil {
		return nil, false
	}
	return o.SecurityScanCompletedAt, true
}

// HasSecurityScanCompletedAt returns a boolean if a field has been set.
func (o *Package) HasSecurityScanCompletedAt() bool {
	if o != nil && o.SecurityScanCompletedAt != nil {
		return true
	}

	return false
}

// SetSecurityScanCompletedAt gets a reference to the given string and assigns it to the SecurityScanCompletedAt field.
func (o *Package) SetSecurityScanCompletedAt(v string) {
	o.SecurityScanCompletedAt = &v
}

// GetSecurityScanStartedAt returns the SecurityScanStartedAt field value if set, zero value otherwise.
func (o *Package) GetSecurityScanStartedAt() string {
	if o == nil || o.SecurityScanStartedAt == nil {
		var ret string
		return ret
	}
	return *o.SecurityScanStartedAt
}

// GetSecurityScanStartedAtOk returns a tuple with the SecurityScanStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSecurityScanStartedAtOk() (*string, bool) {
	if o == nil || o.SecurityScanStartedAt == nil {
		return nil, false
	}
	return o.SecurityScanStartedAt, true
}

// HasSecurityScanStartedAt returns a boolean if a field has been set.
func (o *Package) HasSecurityScanStartedAt() bool {
	if o != nil && o.SecurityScanStartedAt != nil {
		return true
	}

	return false
}

// SetSecurityScanStartedAt gets a reference to the given string and assigns it to the SecurityScanStartedAt field.
func (o *Package) SetSecurityScanStartedAt(v string) {
	o.SecurityScanStartedAt = &v
}

// GetSecurityScanStatus returns the SecurityScanStatus field value if set, zero value otherwise.
func (o *Package) GetSecurityScanStatus() string {
	if o == nil || o.SecurityScanStatus == nil {
		var ret string
		return ret
	}
	return *o.SecurityScanStatus
}

// GetSecurityScanStatusOk returns a tuple with the SecurityScanStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSecurityScanStatusOk() (*string, bool) {
	if o == nil || o.SecurityScanStatus == nil {
		return nil, false
	}
	return o.SecurityScanStatus, true
}

// HasSecurityScanStatus returns a boolean if a field has been set.
func (o *Package) HasSecurityScanStatus() bool {
	if o != nil && o.SecurityScanStatus != nil {
		return true
	}

	return false
}

// SetSecurityScanStatus gets a reference to the given string and assigns it to the SecurityScanStatus field.
func (o *Package) SetSecurityScanStatus(v string) {
	o.SecurityScanStatus = &v
}

// GetSecurityScanStatusUpdatedAt returns the SecurityScanStatusUpdatedAt field value if set, zero value otherwise.
func (o *Package) GetSecurityScanStatusUpdatedAt() string {
	if o == nil || o.SecurityScanStatusUpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.SecurityScanStatusUpdatedAt
}

// GetSecurityScanStatusUpdatedAtOk returns a tuple with the SecurityScanStatusUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSecurityScanStatusUpdatedAtOk() (*string, bool) {
	if o == nil || o.SecurityScanStatusUpdatedAt == nil {
		return nil, false
	}
	return o.SecurityScanStatusUpdatedAt, true
}

// HasSecurityScanStatusUpdatedAt returns a boolean if a field has been set.
func (o *Package) HasSecurityScanStatusUpdatedAt() bool {
	if o != nil && o.SecurityScanStatusUpdatedAt != nil {
		return true
	}

	return false
}

// SetSecurityScanStatusUpdatedAt gets a reference to the given string and assigns it to the SecurityScanStatusUpdatedAt field.
func (o *Package) SetSecurityScanStatusUpdatedAt(v string) {
	o.SecurityScanStatusUpdatedAt = &v
}

// GetSelfHtmlUrl returns the SelfHtmlUrl field value if set, zero value otherwise.
func (o *Package) GetSelfHtmlUrl() string {
	if o == nil || o.SelfHtmlUrl == nil {
		var ret string
		return ret
	}
	return *o.SelfHtmlUrl
}

// GetSelfHtmlUrlOk returns a tuple with the SelfHtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSelfHtmlUrlOk() (*string, bool) {
	if o == nil || o.SelfHtmlUrl == nil {
		return nil, false
	}
	return o.SelfHtmlUrl, true
}

// HasSelfHtmlUrl returns a boolean if a field has been set.
func (o *Package) HasSelfHtmlUrl() bool {
	if o != nil && o.SelfHtmlUrl != nil {
		return true
	}

	return false
}

// SetSelfHtmlUrl gets a reference to the given string and assigns it to the SelfHtmlUrl field.
func (o *Package) SetSelfHtmlUrl(v string) {
	o.SelfHtmlUrl = &v
}

// GetSelfUrl returns the SelfUrl field value if set, zero value otherwise.
func (o *Package) GetSelfUrl() string {
	if o == nil || o.SelfUrl == nil {
		var ret string
		return ret
	}
	return *o.SelfUrl
}

// GetSelfUrlOk returns a tuple with the SelfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSelfUrlOk() (*string, bool) {
	if o == nil || o.SelfUrl == nil {
		return nil, false
	}
	return o.SelfUrl, true
}

// HasSelfUrl returns a boolean if a field has been set.
func (o *Package) HasSelfUrl() bool {
	if o != nil && o.SelfUrl != nil {
		return true
	}

	return false
}

// SetSelfUrl gets a reference to the given string and assigns it to the SelfUrl field.
func (o *Package) SetSelfUrl(v string) {
	o.SelfUrl = &v
}

// GetSignatureUrl returns the SignatureUrl field value if set, zero value otherwise.
func (o *Package) GetSignatureUrl() string {
	if o == nil || o.SignatureUrl == nil {
		var ret string
		return ret
	}
	return *o.SignatureUrl
}

// GetSignatureUrlOk returns a tuple with the SignatureUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSignatureUrlOk() (*string, bool) {
	if o == nil || o.SignatureUrl == nil {
		return nil, false
	}
	return o.SignatureUrl, true
}

// HasSignatureUrl returns a boolean if a field has been set.
func (o *Package) HasSignatureUrl() bool {
	if o != nil && o.SignatureUrl != nil {
		return true
	}

	return false
}

// SetSignatureUrl gets a reference to the given string and assigns it to the SignatureUrl field.
func (o *Package) SetSignatureUrl(v string) {
	o.SignatureUrl = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Package) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Package) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *Package) SetSize(v int64) {
	o.Size = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *Package) GetSlug() string {
	if o == nil || o.Slug == nil {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSlugOk() (*string, bool) {
	if o == nil || o.Slug == nil {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *Package) HasSlug() bool {
	if o != nil && o.Slug != nil {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *Package) SetSlug(v string) {
	o.Slug = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *Package) GetSlugPerm() string {
	if o == nil || o.SlugPerm == nil {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSlugPermOk() (*string, bool) {
	if o == nil || o.SlugPerm == nil {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *Package) HasSlugPerm() bool {
	if o != nil && o.SlugPerm != nil {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *Package) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *Package) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *Package) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *Package) SetStage(v string) {
	o.Stage = &v
}

// GetStageStr returns the StageStr field value if set, zero value otherwise.
func (o *Package) GetStageStr() string {
	if o == nil || o.StageStr == nil {
		var ret string
		return ret
	}
	return *o.StageStr
}

// GetStageStrOk returns a tuple with the StageStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStageStrOk() (*string, bool) {
	if o == nil || o.StageStr == nil {
		return nil, false
	}
	return o.StageStr, true
}

// HasStageStr returns a boolean if a field has been set.
func (o *Package) HasStageStr() bool {
	if o != nil && o.StageStr != nil {
		return true
	}

	return false
}

// SetStageStr gets a reference to the given string and assigns it to the StageStr field.
func (o *Package) SetStageStr(v string) {
	o.StageStr = &v
}

// GetStageUpdatedAt returns the StageUpdatedAt field value if set, zero value otherwise.
func (o *Package) GetStageUpdatedAt() string {
	if o == nil || o.StageUpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.StageUpdatedAt
}

// GetStageUpdatedAtOk returns a tuple with the StageUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStageUpdatedAtOk() (*string, bool) {
	if o == nil || o.StageUpdatedAt == nil {
		return nil, false
	}
	return o.StageUpdatedAt, true
}

// HasStageUpdatedAt returns a boolean if a field has been set.
func (o *Package) HasStageUpdatedAt() bool {
	if o != nil && o.StageUpdatedAt != nil {
		return true
	}

	return false
}

// SetStageUpdatedAt gets a reference to the given string and assigns it to the StageUpdatedAt field.
func (o *Package) SetStageUpdatedAt(v string) {
	o.StageUpdatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Package) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Package) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Package) SetStatus(v string) {
	o.Status = &v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise.
func (o *Package) GetStatusReason() string {
	if o == nil || o.StatusReason == nil {
		var ret string
		return ret
	}
	return *o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStatusReasonOk() (*string, bool) {
	if o == nil || o.StatusReason == nil {
		return nil, false
	}
	return o.StatusReason, true
}

// HasStatusReason returns a boolean if a field has been set.
func (o *Package) HasStatusReason() bool {
	if o != nil && o.StatusReason != nil {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given string and assigns it to the StatusReason field.
func (o *Package) SetStatusReason(v string) {
	o.StatusReason = &v
}

// GetStatusStr returns the StatusStr field value if set, zero value otherwise.
func (o *Package) GetStatusStr() string {
	if o == nil || o.StatusStr == nil {
		var ret string
		return ret
	}
	return *o.StatusStr
}

// GetStatusStrOk returns a tuple with the StatusStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStatusStrOk() (*string, bool) {
	if o == nil || o.StatusStr == nil {
		return nil, false
	}
	return o.StatusStr, true
}

// HasStatusStr returns a boolean if a field has been set.
func (o *Package) HasStatusStr() bool {
	if o != nil && o.StatusStr != nil {
		return true
	}

	return false
}

// SetStatusStr gets a reference to the given string and assigns it to the StatusStr field.
func (o *Package) SetStatusStr(v string) {
	o.StatusStr = &v
}

// GetStatusUpdatedAt returns the StatusUpdatedAt field value if set, zero value otherwise.
func (o *Package) GetStatusUpdatedAt() string {
	if o == nil || o.StatusUpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.StatusUpdatedAt
}

// GetStatusUpdatedAtOk returns a tuple with the StatusUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStatusUpdatedAtOk() (*string, bool) {
	if o == nil || o.StatusUpdatedAt == nil {
		return nil, false
	}
	return o.StatusUpdatedAt, true
}

// HasStatusUpdatedAt returns a boolean if a field has been set.
func (o *Package) HasStatusUpdatedAt() bool {
	if o != nil && o.StatusUpdatedAt != nil {
		return true
	}

	return false
}

// SetStatusUpdatedAt gets a reference to the given string and assigns it to the StatusUpdatedAt field.
func (o *Package) SetStatusUpdatedAt(v string) {
	o.StatusUpdatedAt = &v
}

// GetStatusUrl returns the StatusUrl field value if set, zero value otherwise.
func (o *Package) GetStatusUrl() string {
	if o == nil || o.StatusUrl == nil {
		var ret string
		return ret
	}
	return *o.StatusUrl
}

// GetStatusUrlOk returns a tuple with the StatusUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetStatusUrlOk() (*string, bool) {
	if o == nil || o.StatusUrl == nil {
		return nil, false
	}
	return o.StatusUrl, true
}

// HasStatusUrl returns a boolean if a field has been set.
func (o *Package) HasStatusUrl() bool {
	if o != nil && o.StatusUrl != nil {
		return true
	}

	return false
}

// SetStatusUrl gets a reference to the given string and assigns it to the StatusUrl field.
func (o *Package) SetStatusUrl(v string) {
	o.StatusUrl = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise.
func (o *Package) GetSubtype() string {
	if o == nil || o.Subtype == nil {
		var ret string
		return ret
	}
	return *o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSubtypeOk() (*string, bool) {
	if o == nil || o.Subtype == nil {
		return nil, false
	}
	return o.Subtype, true
}

// HasSubtype returns a boolean if a field has been set.
func (o *Package) HasSubtype() bool {
	if o != nil && o.Subtype != nil {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given string and assigns it to the Subtype field.
func (o *Package) SetSubtype(v string) {
	o.Subtype = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *Package) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *Package) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *Package) SetSummary(v string) {
	o.Summary = &v
}

// GetSyncFinishedAt returns the SyncFinishedAt field value if set, zero value otherwise.
func (o *Package) GetSyncFinishedAt() string {
	if o == nil || o.SyncFinishedAt == nil {
		var ret string
		return ret
	}
	return *o.SyncFinishedAt
}

// GetSyncFinishedAtOk returns a tuple with the SyncFinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSyncFinishedAtOk() (*string, bool) {
	if o == nil || o.SyncFinishedAt == nil {
		return nil, false
	}
	return o.SyncFinishedAt, true
}

// HasSyncFinishedAt returns a boolean if a field has been set.
func (o *Package) HasSyncFinishedAt() bool {
	if o != nil && o.SyncFinishedAt != nil {
		return true
	}

	return false
}

// SetSyncFinishedAt gets a reference to the given string and assigns it to the SyncFinishedAt field.
func (o *Package) SetSyncFinishedAt(v string) {
	o.SyncFinishedAt = &v
}

// GetSyncProgress returns the SyncProgress field value if set, zero value otherwise.
func (o *Package) GetSyncProgress() int64 {
	if o == nil || o.SyncProgress == nil {
		var ret int64
		return ret
	}
	return *o.SyncProgress
}

// GetSyncProgressOk returns a tuple with the SyncProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetSyncProgressOk() (*int64, bool) {
	if o == nil || o.SyncProgress == nil {
		return nil, false
	}
	return o.SyncProgress, true
}

// HasSyncProgress returns a boolean if a field has been set.
func (o *Package) HasSyncProgress() bool {
	if o != nil && o.SyncProgress != nil {
		return true
	}

	return false
}

// SetSyncProgress gets a reference to the given int64 and assigns it to the SyncProgress field.
func (o *Package) SetSyncProgress(v int64) {
	o.SyncProgress = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Package) GetTags() map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetTagsOk() (map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Package) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *Package) SetTags(v map[string]interface{}) {
	o.Tags = v
}

// GetTagsImmutable returns the TagsImmutable field value if set, zero value otherwise.
func (o *Package) GetTagsImmutable() map[string]interface{} {
	if o == nil || o.TagsImmutable == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TagsImmutable
}

// GetTagsImmutableOk returns a tuple with the TagsImmutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetTagsImmutableOk() (map[string]interface{}, bool) {
	if o == nil || o.TagsImmutable == nil {
		return nil, false
	}
	return o.TagsImmutable, true
}

// HasTagsImmutable returns a boolean if a field has been set.
func (o *Package) HasTagsImmutable() bool {
	if o != nil && o.TagsImmutable != nil {
		return true
	}

	return false
}

// SetTagsImmutable gets a reference to the given map[string]interface{} and assigns it to the TagsImmutable field.
func (o *Package) SetTagsImmutable(v map[string]interface{}) {
	o.TagsImmutable = v
}

// GetTypeDisplay returns the TypeDisplay field value if set, zero value otherwise.
func (o *Package) GetTypeDisplay() string {
	if o == nil || o.TypeDisplay == nil {
		var ret string
		return ret
	}
	return *o.TypeDisplay
}

// GetTypeDisplayOk returns a tuple with the TypeDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetTypeDisplayOk() (*string, bool) {
	if o == nil || o.TypeDisplay == nil {
		return nil, false
	}
	return o.TypeDisplay, true
}

// HasTypeDisplay returns a boolean if a field has been set.
func (o *Package) HasTypeDisplay() bool {
	if o != nil && o.TypeDisplay != nil {
		return true
	}

	return false
}

// SetTypeDisplay gets a reference to the given string and assigns it to the TypeDisplay field.
func (o *Package) SetTypeDisplay(v string) {
	o.TypeDisplay = &v
}

// GetUploadedAt returns the UploadedAt field value if set, zero value otherwise.
func (o *Package) GetUploadedAt() string {
	if o == nil || o.UploadedAt == nil {
		var ret string
		return ret
	}
	return *o.UploadedAt
}

// GetUploadedAtOk returns a tuple with the UploadedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetUploadedAtOk() (*string, bool) {
	if o == nil || o.UploadedAt == nil {
		return nil, false
	}
	return o.UploadedAt, true
}

// HasUploadedAt returns a boolean if a field has been set.
func (o *Package) HasUploadedAt() bool {
	if o != nil && o.UploadedAt != nil {
		return true
	}

	return false
}

// SetUploadedAt gets a reference to the given string and assigns it to the UploadedAt field.
func (o *Package) SetUploadedAt(v string) {
	o.UploadedAt = &v
}

// GetUploader returns the Uploader field value if set, zero value otherwise.
func (o *Package) GetUploader() string {
	if o == nil || o.Uploader == nil {
		var ret string
		return ret
	}
	return *o.Uploader
}

// GetUploaderOk returns a tuple with the Uploader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetUploaderOk() (*string, bool) {
	if o == nil || o.Uploader == nil {
		return nil, false
	}
	return o.Uploader, true
}

// HasUploader returns a boolean if a field has been set.
func (o *Package) HasUploader() bool {
	if o != nil && o.Uploader != nil {
		return true
	}

	return false
}

// SetUploader gets a reference to the given string and assigns it to the Uploader field.
func (o *Package) SetUploader(v string) {
	o.Uploader = &v
}

// GetUploaderUrl returns the UploaderUrl field value if set, zero value otherwise.
func (o *Package) GetUploaderUrl() string {
	if o == nil || o.UploaderUrl == nil {
		var ret string
		return ret
	}
	return *o.UploaderUrl
}

// GetUploaderUrlOk returns a tuple with the UploaderUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetUploaderUrlOk() (*string, bool) {
	if o == nil || o.UploaderUrl == nil {
		return nil, false
	}
	return o.UploaderUrl, true
}

// HasUploaderUrl returns a boolean if a field has been set.
func (o *Package) HasUploaderUrl() bool {
	if o != nil && o.UploaderUrl != nil {
		return true
	}

	return false
}

// SetUploaderUrl gets a reference to the given string and assigns it to the UploaderUrl field.
func (o *Package) SetUploaderUrl(v string) {
	o.UploaderUrl = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Package) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Package) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Package) SetVersion(v string) {
	o.Version = &v
}

// GetVersionOrig returns the VersionOrig field value if set, zero value otherwise.
func (o *Package) GetVersionOrig() string {
	if o == nil || o.VersionOrig == nil {
		var ret string
		return ret
	}
	return *o.VersionOrig
}

// GetVersionOrigOk returns a tuple with the VersionOrig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetVersionOrigOk() (*string, bool) {
	if o == nil || o.VersionOrig == nil {
		return nil, false
	}
	return o.VersionOrig, true
}

// HasVersionOrig returns a boolean if a field has been set.
func (o *Package) HasVersionOrig() bool {
	if o != nil && o.VersionOrig != nil {
		return true
	}

	return false
}

// SetVersionOrig gets a reference to the given string and assigns it to the VersionOrig field.
func (o *Package) SetVersionOrig(v string) {
	o.VersionOrig = &v
}

// GetVulnerabilityScanResultsUrl returns the VulnerabilityScanResultsUrl field value if set, zero value otherwise.
func (o *Package) GetVulnerabilityScanResultsUrl() string {
	if o == nil || o.VulnerabilityScanResultsUrl == nil {
		var ret string
		return ret
	}
	return *o.VulnerabilityScanResultsUrl
}

// GetVulnerabilityScanResultsUrlOk returns a tuple with the VulnerabilityScanResultsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Package) GetVulnerabilityScanResultsUrlOk() (*string, bool) {
	if o == nil || o.VulnerabilityScanResultsUrl == nil {
		return nil, false
	}
	return o.VulnerabilityScanResultsUrl, true
}

// HasVulnerabilityScanResultsUrl returns a boolean if a field has been set.
func (o *Package) HasVulnerabilityScanResultsUrl() bool {
	if o != nil && o.VulnerabilityScanResultsUrl != nil {
		return true
	}

	return false
}

// SetVulnerabilityScanResultsUrl gets a reference to the given string and assigns it to the VulnerabilityScanResultsUrl field.
func (o *Package) SetVulnerabilityScanResultsUrl(v string) {
	o.VulnerabilityScanResultsUrl = &v
}

func (o Package) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Architectures != nil {
		toSerialize["architectures"] = o.Architectures
	}
	if o.CdnUrl != nil {
		toSerialize["cdn_url"] = o.CdnUrl
	}
	if o.ChecksumMd5 != nil {
		toSerialize["checksum_md5"] = o.ChecksumMd5
	}
	if o.ChecksumSha1 != nil {
		toSerialize["checksum_sha1"] = o.ChecksumSha1
	}
	if o.ChecksumSha256 != nil {
		toSerialize["checksum_sha256"] = o.ChecksumSha256
	}
	if o.ChecksumSha512 != nil {
		toSerialize["checksum_sha512"] = o.ChecksumSha512
	}
	if o.DependenciesChecksumMd5 != nil {
		toSerialize["dependencies_checksum_md5"] = o.DependenciesChecksumMd5
	}
	if o.DependenciesUrl != nil {
		toSerialize["dependencies_url"] = o.DependenciesUrl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Distro != nil {
		toSerialize["distro"] = o.Distro
	}
	if o.DistroVersion != nil {
		toSerialize["distro_version"] = o.DistroVersion
	}
	if o.Downloads != nil {
		toSerialize["downloads"] = o.Downloads
	}
	if o.Epoch != nil {
		toSerialize["epoch"] = o.Epoch
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.FormatUrl != nil {
		toSerialize["format_url"] = o.FormatUrl
	}
	if o.IdentifierPerm != nil {
		toSerialize["identifier_perm"] = o.IdentifierPerm
	}
	if o.Indexed != nil {
		toSerialize["indexed"] = o.Indexed
	}
	if o.IsSyncAwaiting != nil {
		toSerialize["is_sync_awaiting"] = o.IsSyncAwaiting
	}
	if o.IsSyncCompleted != nil {
		toSerialize["is_sync_completed"] = o.IsSyncCompleted
	}
	if o.IsSyncFailed != nil {
		toSerialize["is_sync_failed"] = o.IsSyncFailed
	}
	if o.IsSyncInFlight != nil {
		toSerialize["is_sync_in_flight"] = o.IsSyncInFlight
	}
	if o.IsSyncInProgress != nil {
		toSerialize["is_sync_in_progress"] = o.IsSyncInProgress
	}
	if o.License != nil {
		toSerialize["license"] = o.License
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.NamespaceUrl != nil {
		toSerialize["namespace_url"] = o.NamespaceUrl
	}
	if o.NumFiles != nil {
		toSerialize["num_files"] = o.NumFiles
	}
	if o.PackageType != nil {
		toSerialize["package_type"] = o.PackageType
	}
	if o.Release != nil {
		toSerialize["release"] = o.Release
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.RepositoryUrl != nil {
		toSerialize["repository_url"] = o.RepositoryUrl
	}
	if o.SecurityScanCompletedAt != nil {
		toSerialize["security_scan_completed_at"] = o.SecurityScanCompletedAt
	}
	if o.SecurityScanStartedAt != nil {
		toSerialize["security_scan_started_at"] = o.SecurityScanStartedAt
	}
	if o.SecurityScanStatus != nil {
		toSerialize["security_scan_status"] = o.SecurityScanStatus
	}
	if o.SecurityScanStatusUpdatedAt != nil {
		toSerialize["security_scan_status_updated_at"] = o.SecurityScanStatusUpdatedAt
	}
	if o.SelfHtmlUrl != nil {
		toSerialize["self_html_url"] = o.SelfHtmlUrl
	}
	if o.SelfUrl != nil {
		toSerialize["self_url"] = o.SelfUrl
	}
	if o.SignatureUrl != nil {
		toSerialize["signature_url"] = o.SignatureUrl
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Slug != nil {
		toSerialize["slug"] = o.Slug
	}
	if o.SlugPerm != nil {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	if o.StageStr != nil {
		toSerialize["stage_str"] = o.StageStr
	}
	if o.StageUpdatedAt != nil {
		toSerialize["stage_updated_at"] = o.StageUpdatedAt
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusReason != nil {
		toSerialize["status_reason"] = o.StatusReason
	}
	if o.StatusStr != nil {
		toSerialize["status_str"] = o.StatusStr
	}
	if o.StatusUpdatedAt != nil {
		toSerialize["status_updated_at"] = o.StatusUpdatedAt
	}
	if o.StatusUrl != nil {
		toSerialize["status_url"] = o.StatusUrl
	}
	if o.Subtype != nil {
		toSerialize["subtype"] = o.Subtype
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.SyncFinishedAt != nil {
		toSerialize["sync_finished_at"] = o.SyncFinishedAt
	}
	if o.SyncProgress != nil {
		toSerialize["sync_progress"] = o.SyncProgress
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TagsImmutable != nil {
		toSerialize["tags_immutable"] = o.TagsImmutable
	}
	if o.TypeDisplay != nil {
		toSerialize["type_display"] = o.TypeDisplay
	}
	if o.UploadedAt != nil {
		toSerialize["uploaded_at"] = o.UploadedAt
	}
	if o.Uploader != nil {
		toSerialize["uploader"] = o.Uploader
	}
	if o.UploaderUrl != nil {
		toSerialize["uploader_url"] = o.UploaderUrl
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.VersionOrig != nil {
		toSerialize["version_orig"] = o.VersionOrig
	}
	if o.VulnerabilityScanResultsUrl != nil {
		toSerialize["vulnerability_scan_results_url"] = o.VulnerabilityScanResultsUrl
	}
	return json.Marshal(toSerialize)
}

type NullablePackage struct {
	value *Package
	isSet bool
}

func (v NullablePackage) Get() *Package {
	return v.value
}

func (v *NullablePackage) Set(val *Package) {
	v.value = val
	v.isSet = true
}

func (v NullablePackage) IsSet() bool {
	return v.isSet
}

func (v *NullablePackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackage(val *Package) *NullablePackage {
	return &NullablePackage{value: val, isSet: true}
}

func (v NullablePackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
