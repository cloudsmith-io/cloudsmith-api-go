/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.237.2
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackageDependenciesSchema struct for PackageDependenciesSchema
type PackageDependenciesSchema struct {
	Dependencies []PackageDependency `json:"dependencies"`
}

// NewPackageDependenciesSchema instantiates a new PackageDependenciesSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageDependenciesSchema(dependencies []PackageDependency) *PackageDependenciesSchema {
	this := PackageDependenciesSchema{}
	this.Dependencies = dependencies
	return &this
}

// NewPackageDependenciesSchemaWithDefaults instantiates a new PackageDependenciesSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageDependenciesSchemaWithDefaults() *PackageDependenciesSchema {
	this := PackageDependenciesSchema{}
	return &this
}

// GetDependencies returns the Dependencies field value
func (o *PackageDependenciesSchema) GetDependencies() []PackageDependency {
	if o == nil {
		var ret []PackageDependency
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
func (o *PackageDependenciesSchema) GetDependenciesOk() ([]PackageDependency, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *PackageDependenciesSchema) SetDependencies(v []PackageDependency) {
	o.Dependencies = v
}

func (o PackageDependenciesSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dependencies"] = o.Dependencies
	}
	return json.Marshal(toSerialize)
}

type NullablePackageDependenciesSchema struct {
	value *PackageDependenciesSchema
	isSet bool
}

func (v NullablePackageDependenciesSchema) Get() *PackageDependenciesSchema {
	return v.value
}

func (v *NullablePackageDependenciesSchema) Set(val *PackageDependenciesSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageDependenciesSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageDependenciesSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageDependenciesSchema(val *PackageDependenciesSchema) *NullablePackageDependenciesSchema {
	return &NullablePackageDependenciesSchema{value: val, isSet: true}
}

func (v NullablePackageDependenciesSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageDependenciesSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
