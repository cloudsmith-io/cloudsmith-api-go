/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// RepositoryTokenSyncResponse struct for RepositoryTokenSyncResponse
type RepositoryTokenSyncResponse struct {
	// The entitlements that have been synchronised.
	Tokens []RepositoryToken `json:"tokens,omitempty"`
}

// NewRepositoryTokenSyncResponse instantiates a new RepositoryTokenSyncResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryTokenSyncResponse() *RepositoryTokenSyncResponse {
	this := RepositoryTokenSyncResponse{}
	return &this
}

// NewRepositoryTokenSyncResponseWithDefaults instantiates a new RepositoryTokenSyncResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryTokenSyncResponseWithDefaults() *RepositoryTokenSyncResponse {
	this := RepositoryTokenSyncResponse{}
	return &this
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *RepositoryTokenSyncResponse) GetTokens() []RepositoryToken {
	if o == nil || isNil(o.Tokens) {
		var ret []RepositoryToken
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTokenSyncResponse) GetTokensOk() ([]RepositoryToken, bool) {
	if o == nil || isNil(o.Tokens) {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *RepositoryTokenSyncResponse) HasTokens() bool {
	if o != nil && !isNil(o.Tokens) {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []RepositoryToken and assigns it to the Tokens field.
func (o *RepositoryTokenSyncResponse) SetTokens(v []RepositoryToken) {
	o.Tokens = v
}

func (o RepositoryTokenSyncResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryTokenSyncResponse struct {
	value *RepositoryTokenSyncResponse
	isSet bool
}

func (v NullableRepositoryTokenSyncResponse) Get() *RepositoryTokenSyncResponse {
	return v.value
}

func (v *NullableRepositoryTokenSyncResponse) Set(val *RepositoryTokenSyncResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryTokenSyncResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryTokenSyncResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryTokenSyncResponse(val *RepositoryTokenSyncResponse) *NullableRepositoryTokenSyncResponse {
	return &NullableRepositoryTokenSyncResponse{value: val, isSet: true}
}

func (v NullableRepositoryTokenSyncResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryTokenSyncResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
