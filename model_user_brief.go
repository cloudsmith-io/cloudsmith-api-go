/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.42.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// UserBrief struct for UserBrief
type UserBrief struct {
	// If true then you're logged in as a user.
	Authenticated *bool `json:"authenticated,omitempty"`
	// Your email address that we use to contact you. This is only visible to you.
	Email *string `json:"email,omitempty"`
	// The full name of the user (if any).
	Name *string `json:"name,omitempty"`
	// The URL for the full profile of the user.
	ProfileUrl *string `json:"profile_url,omitempty"`
	//
	SelfUrl *string `json:"self_url,omitempty"`
	//
	Slug *string `json:"slug,omitempty"`
	//
	SlugPerm *string `json:"slug_perm,omitempty"`
}

// NewUserBrief instantiates a new UserBrief object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserBrief() *UserBrief {
	this := UserBrief{}
	return &this
}

// NewUserBriefWithDefaults instantiates a new UserBrief object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserBriefWithDefaults() *UserBrief {
	this := UserBrief{}
	return &this
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *UserBrief) GetAuthenticated() bool {
	if o == nil || o.Authenticated == nil {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || o.Authenticated == nil {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *UserBrief) HasAuthenticated() bool {
	if o != nil && o.Authenticated != nil {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *UserBrief) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserBrief) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserBrief) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserBrief) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserBrief) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserBrief) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserBrief) SetName(v string) {
	o.Name = &v
}

// GetProfileUrl returns the ProfileUrl field value if set, zero value otherwise.
func (o *UserBrief) GetProfileUrl() string {
	if o == nil || o.ProfileUrl == nil {
		var ret string
		return ret
	}
	return *o.ProfileUrl
}

// GetProfileUrlOk returns a tuple with the ProfileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetProfileUrlOk() (*string, bool) {
	if o == nil || o.ProfileUrl == nil {
		return nil, false
	}
	return o.ProfileUrl, true
}

// HasProfileUrl returns a boolean if a field has been set.
func (o *UserBrief) HasProfileUrl() bool {
	if o != nil && o.ProfileUrl != nil {
		return true
	}

	return false
}

// SetProfileUrl gets a reference to the given string and assigns it to the ProfileUrl field.
func (o *UserBrief) SetProfileUrl(v string) {
	o.ProfileUrl = &v
}

// GetSelfUrl returns the SelfUrl field value if set, zero value otherwise.
func (o *UserBrief) GetSelfUrl() string {
	if o == nil || o.SelfUrl == nil {
		var ret string
		return ret
	}
	return *o.SelfUrl
}

// GetSelfUrlOk returns a tuple with the SelfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetSelfUrlOk() (*string, bool) {
	if o == nil || o.SelfUrl == nil {
		return nil, false
	}
	return o.SelfUrl, true
}

// HasSelfUrl returns a boolean if a field has been set.
func (o *UserBrief) HasSelfUrl() bool {
	if o != nil && o.SelfUrl != nil {
		return true
	}

	return false
}

// SetSelfUrl gets a reference to the given string and assigns it to the SelfUrl field.
func (o *UserBrief) SetSelfUrl(v string) {
	o.SelfUrl = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *UserBrief) GetSlug() string {
	if o == nil || o.Slug == nil {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetSlugOk() (*string, bool) {
	if o == nil || o.Slug == nil {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *UserBrief) HasSlug() bool {
	if o != nil && o.Slug != nil {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *UserBrief) SetSlug(v string) {
	o.Slug = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *UserBrief) GetSlugPerm() string {
	if o == nil || o.SlugPerm == nil {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBrief) GetSlugPermOk() (*string, bool) {
	if o == nil || o.SlugPerm == nil {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *UserBrief) HasSlugPerm() bool {
	if o != nil && o.SlugPerm != nil {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *UserBrief) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

func (o UserBrief) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authenticated != nil {
		toSerialize["authenticated"] = o.Authenticated
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ProfileUrl != nil {
		toSerialize["profile_url"] = o.ProfileUrl
	}
	if o.SelfUrl != nil {
		toSerialize["self_url"] = o.SelfUrl
	}
	if o.Slug != nil {
		toSerialize["slug"] = o.Slug
	}
	if o.SlugPerm != nil {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	return json.Marshal(toSerialize)
}

type NullableUserBrief struct {
	value *UserBrief
	isSet bool
}

func (v NullableUserBrief) Get() *UserBrief {
	return v.value
}

func (v *NullableUserBrief) Set(val *UserBrief) {
	v.value = val
	v.isSet = true
}

func (v NullableUserBrief) IsSet() bool {
	return v.isSet
}

func (v *NullableUserBrief) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserBrief(val *UserBrief) *NullableUserBrief {
	return &NullableUserBrief{value: val, isSet: true}
}

func (v NullableUserBrief) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserBrief) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
