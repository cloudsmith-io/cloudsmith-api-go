/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.327.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationPackageVulnerabilityPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationPackageVulnerabilityPolicy{}

// OrganizationPackageVulnerabilityPolicy struct for OrganizationPackageVulnerabilityPolicy
type OrganizationPackageVulnerabilityPolicy struct {
	// Denotes whether vulnerabilities detected by a security scan with an unknown severity are permitted by this policy.
	AllowUnknownSeverity  *bool          `json:"allow_unknown_severity,omitempty"`
	CreatedAt             *time.Time     `json:"created_at,omitempty"`
	Description           NullableString `json:"description,omitempty"`
	MinSeverity           *string        `json:"min_severity,omitempty"`
	Name                  string         `json:"name"`
	OnViolationQuarantine *bool          `json:"on_violation_quarantine,omitempty"`
	PackageQueryString    NullableString `json:"package_query_string,omitempty"`
	SlugPerm              *string        `json:"slug_perm,omitempty"`
	UpdatedAt             *time.Time     `json:"updated_at,omitempty"`
}

// NewOrganizationPackageVulnerabilityPolicy instantiates a new OrganizationPackageVulnerabilityPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationPackageVulnerabilityPolicy(name string) *OrganizationPackageVulnerabilityPolicy {
	this := OrganizationPackageVulnerabilityPolicy{}
	var minSeverity string = "Critical"
	this.MinSeverity = &minSeverity
	this.Name = name
	return &this
}

// NewOrganizationPackageVulnerabilityPolicyWithDefaults instantiates a new OrganizationPackageVulnerabilityPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationPackageVulnerabilityPolicyWithDefaults() *OrganizationPackageVulnerabilityPolicy {
	this := OrganizationPackageVulnerabilityPolicy{}
	var minSeverity string = "Critical"
	this.MinSeverity = &minSeverity
	return &this
}

// GetAllowUnknownSeverity returns the AllowUnknownSeverity field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetAllowUnknownSeverity() bool {
	if o == nil || IsNil(o.AllowUnknownSeverity) {
		var ret bool
		return ret
	}
	return *o.AllowUnknownSeverity
}

// GetAllowUnknownSeverityOk returns a tuple with the AllowUnknownSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetAllowUnknownSeverityOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUnknownSeverity) {
		return nil, false
	}
	return o.AllowUnknownSeverity, true
}

// HasAllowUnknownSeverity returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasAllowUnknownSeverity() bool {
	if o != nil && !IsNil(o.AllowUnknownSeverity) {
		return true
	}

	return false
}

// SetAllowUnknownSeverity gets a reference to the given bool and assigns it to the AllowUnknownSeverity field.
func (o *OrganizationPackageVulnerabilityPolicy) SetAllowUnknownSeverity(v bool) {
	o.AllowUnknownSeverity = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OrganizationPackageVulnerabilityPolicy) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationPackageVulnerabilityPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationPackageVulnerabilityPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *OrganizationPackageVulnerabilityPolicy) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *OrganizationPackageVulnerabilityPolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *OrganizationPackageVulnerabilityPolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetMinSeverity returns the MinSeverity field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetMinSeverity() string {
	if o == nil || IsNil(o.MinSeverity) {
		var ret string
		return ret
	}
	return *o.MinSeverity
}

// GetMinSeverityOk returns a tuple with the MinSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetMinSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.MinSeverity) {
		return nil, false
	}
	return o.MinSeverity, true
}

// HasMinSeverity returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasMinSeverity() bool {
	if o != nil && !IsNil(o.MinSeverity) {
		return true
	}

	return false
}

// SetMinSeverity gets a reference to the given string and assigns it to the MinSeverity field.
func (o *OrganizationPackageVulnerabilityPolicy) SetMinSeverity(v string) {
	o.MinSeverity = &v
}

// GetName returns the Name field value
func (o *OrganizationPackageVulnerabilityPolicy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationPackageVulnerabilityPolicy) SetName(v string) {
	o.Name = v
}

// GetOnViolationQuarantine returns the OnViolationQuarantine field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetOnViolationQuarantine() bool {
	if o == nil || IsNil(o.OnViolationQuarantine) {
		var ret bool
		return ret
	}
	return *o.OnViolationQuarantine
}

// GetOnViolationQuarantineOk returns a tuple with the OnViolationQuarantine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetOnViolationQuarantineOk() (*bool, bool) {
	if o == nil || IsNil(o.OnViolationQuarantine) {
		return nil, false
	}
	return o.OnViolationQuarantine, true
}

// HasOnViolationQuarantine returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasOnViolationQuarantine() bool {
	if o != nil && !IsNil(o.OnViolationQuarantine) {
		return true
	}

	return false
}

// SetOnViolationQuarantine gets a reference to the given bool and assigns it to the OnViolationQuarantine field.
func (o *OrganizationPackageVulnerabilityPolicy) SetOnViolationQuarantine(v bool) {
	o.OnViolationQuarantine = &v
}

// GetPackageQueryString returns the PackageQueryString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationPackageVulnerabilityPolicy) GetPackageQueryString() string {
	if o == nil || IsNil(o.PackageQueryString.Get()) {
		var ret string
		return ret
	}
	return *o.PackageQueryString.Get()
}

// GetPackageQueryStringOk returns a tuple with the PackageQueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationPackageVulnerabilityPolicy) GetPackageQueryStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageQueryString.Get(), o.PackageQueryString.IsSet()
}

// HasPackageQueryString returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasPackageQueryString() bool {
	if o != nil && o.PackageQueryString.IsSet() {
		return true
	}

	return false
}

// SetPackageQueryString gets a reference to the given NullableString and assigns it to the PackageQueryString field.
func (o *OrganizationPackageVulnerabilityPolicy) SetPackageQueryString(v string) {
	o.PackageQueryString.Set(&v)
}

// SetPackageQueryStringNil sets the value for PackageQueryString to be an explicit nil
func (o *OrganizationPackageVulnerabilityPolicy) SetPackageQueryStringNil() {
	o.PackageQueryString.Set(nil)
}

// UnsetPackageQueryString ensures that no value is present for PackageQueryString, not even an explicit nil
func (o *OrganizationPackageVulnerabilityPolicy) UnsetPackageQueryString() {
	o.PackageQueryString.Unset()
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetSlugPerm() string {
	if o == nil || IsNil(o.SlugPerm) {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetSlugPermOk() (*string, bool) {
	if o == nil || IsNil(o.SlugPerm) {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasSlugPerm() bool {
	if o != nil && !IsNil(o.SlugPerm) {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *OrganizationPackageVulnerabilityPolicy) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrganizationPackageVulnerabilityPolicy) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationPackageVulnerabilityPolicy) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrganizationPackageVulnerabilityPolicy) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OrganizationPackageVulnerabilityPolicy) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o OrganizationPackageVulnerabilityPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationPackageVulnerabilityPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowUnknownSeverity) {
		toSerialize["allow_unknown_severity"] = o.AllowUnknownSeverity
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.MinSeverity) {
		toSerialize["min_severity"] = o.MinSeverity
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.OnViolationQuarantine) {
		toSerialize["on_violation_quarantine"] = o.OnViolationQuarantine
	}
	if o.PackageQueryString.IsSet() {
		toSerialize["package_query_string"] = o.PackageQueryString.Get()
	}
	if !IsNil(o.SlugPerm) {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableOrganizationPackageVulnerabilityPolicy struct {
	value *OrganizationPackageVulnerabilityPolicy
	isSet bool
}

func (v NullableOrganizationPackageVulnerabilityPolicy) Get() *OrganizationPackageVulnerabilityPolicy {
	return v.value
}

func (v *NullableOrganizationPackageVulnerabilityPolicy) Set(val *OrganizationPackageVulnerabilityPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationPackageVulnerabilityPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationPackageVulnerabilityPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationPackageVulnerabilityPolicy(val *OrganizationPackageVulnerabilityPolicy) *NullableOrganizationPackageVulnerabilityPolicy {
	return &NullableOrganizationPackageVulnerabilityPolicy{value: val, isSet: true}
}

func (v NullableOrganizationPackageVulnerabilityPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationPackageVulnerabilityPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
