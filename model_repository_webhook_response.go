/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"time"
)

// RepositoryWebhookResponse struct for RepositoryWebhookResponse
type RepositoryWebhookResponse struct {
	CreatedAt        *time.Time `json:"created_at,omitempty"`
	CreatedBy        *string    `json:"created_by,omitempty"`
	CreatedByUrl     *string    `json:"created_by_url,omitempty"`
	DisableReason    *int64     `json:"disable_reason,omitempty"`
	DisableReasonStr *string    `json:"disable_reason_str,omitempty"`
	Events           []string   `json:"events"`
	Identifier       *int64     `json:"identifier,omitempty"`
	// If enabled, the webhook will trigger on subscribed events and send payloads to the configured target URL.
	IsActive              *bool   `json:"is_active,omitempty"`
	IsLastResponseBad     *bool   `json:"is_last_response_bad,omitempty"`
	LastResponseStatus    *int64  `json:"last_response_status,omitempty"`
	LastResponseStatusStr *string `json:"last_response_status_str,omitempty"`
	NumSent               *int64  `json:"num_sent,omitempty"`
	// The package-based search query for webhooks to fire. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. If a package does not match, the webhook will not fire.
	PackageQuery NullableString `json:"package_query,omitempty"`
	// The format of the payloads for webhook requests.
	RequestBodyFormat    *int64  `json:"request_body_format,omitempty"`
	RequestBodyFormatStr *string `json:"request_body_format_str,omitempty"`
	// The format of the payloads for webhook requests.
	RequestBodyTemplateFormat    *int64  `json:"request_body_template_format,omitempty"`
	RequestBodyTemplateFormatStr *string `json:"request_body_template_format_str,omitempty"`
	// The value that will be sent for the 'Content Type' header.
	RequestContentType NullableString `json:"request_content_type,omitempty"`
	// The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.
	SecretHeader NullableString `json:"secret_header,omitempty"`
	SelfUrl      *string        `json:"self_url,omitempty"`
	SlugPerm     *string        `json:"slug_perm,omitempty"`
	// The destination URL that webhook payloads will be POST'ed to.
	TargetUrl    string            `json:"target_url"`
	Templates    []WebhookTemplate `json:"templates"`
	UpdatedAt    *time.Time        `json:"updated_at,omitempty"`
	UpdatedBy    *string           `json:"updated_by,omitempty"`
	UpdatedByUrl *string           `json:"updated_by_url,omitempty"`
	// If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.
	VerifySsl *bool `json:"verify_ssl,omitempty"`
}

// NewRepositoryWebhookResponse instantiates a new RepositoryWebhookResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryWebhookResponse(events []string, targetUrl string, templates []WebhookTemplate) *RepositoryWebhookResponse {
	this := RepositoryWebhookResponse{}
	this.Events = events
	this.TargetUrl = targetUrl
	this.Templates = templates
	return &this
}

// NewRepositoryWebhookResponseWithDefaults instantiates a new RepositoryWebhookResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryWebhookResponseWithDefaults() *RepositoryWebhookResponse {
	this := RepositoryWebhookResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *RepositoryWebhookResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetCreatedBy() string {
	if o == nil || isNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || isNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasCreatedBy() bool {
	if o != nil && !isNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *RepositoryWebhookResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByUrl returns the CreatedByUrl field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetCreatedByUrl() string {
	if o == nil || isNil(o.CreatedByUrl) {
		var ret string
		return ret
	}
	return *o.CreatedByUrl
}

// GetCreatedByUrlOk returns a tuple with the CreatedByUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetCreatedByUrlOk() (*string, bool) {
	if o == nil || isNil(o.CreatedByUrl) {
		return nil, false
	}
	return o.CreatedByUrl, true
}

// HasCreatedByUrl returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasCreatedByUrl() bool {
	if o != nil && !isNil(o.CreatedByUrl) {
		return true
	}

	return false
}

// SetCreatedByUrl gets a reference to the given string and assigns it to the CreatedByUrl field.
func (o *RepositoryWebhookResponse) SetCreatedByUrl(v string) {
	o.CreatedByUrl = &v
}

// GetDisableReason returns the DisableReason field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetDisableReason() int64 {
	if o == nil || isNil(o.DisableReason) {
		var ret int64
		return ret
	}
	return *o.DisableReason
}

// GetDisableReasonOk returns a tuple with the DisableReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetDisableReasonOk() (*int64, bool) {
	if o == nil || isNil(o.DisableReason) {
		return nil, false
	}
	return o.DisableReason, true
}

// HasDisableReason returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasDisableReason() bool {
	if o != nil && !isNil(o.DisableReason) {
		return true
	}

	return false
}

// SetDisableReason gets a reference to the given int64 and assigns it to the DisableReason field.
func (o *RepositoryWebhookResponse) SetDisableReason(v int64) {
	o.DisableReason = &v
}

// GetDisableReasonStr returns the DisableReasonStr field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetDisableReasonStr() string {
	if o == nil || isNil(o.DisableReasonStr) {
		var ret string
		return ret
	}
	return *o.DisableReasonStr
}

// GetDisableReasonStrOk returns a tuple with the DisableReasonStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetDisableReasonStrOk() (*string, bool) {
	if o == nil || isNil(o.DisableReasonStr) {
		return nil, false
	}
	return o.DisableReasonStr, true
}

// HasDisableReasonStr returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasDisableReasonStr() bool {
	if o != nil && !isNil(o.DisableReasonStr) {
		return true
	}

	return false
}

// SetDisableReasonStr gets a reference to the given string and assigns it to the DisableReasonStr field.
func (o *RepositoryWebhookResponse) SetDisableReasonStr(v string) {
	o.DisableReasonStr = &v
}

// GetEvents returns the Events field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *RepositoryWebhookResponse) GetEvents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryWebhookResponse) GetEventsOk() ([]string, bool) {
	if o == nil || isNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *RepositoryWebhookResponse) SetEvents(v []string) {
	o.Events = v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetIdentifier() int64 {
	if o == nil || isNil(o.Identifier) {
		var ret int64
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetIdentifierOk() (*int64, bool) {
	if o == nil || isNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasIdentifier() bool {
	if o != nil && !isNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given int64 and assigns it to the Identifier field.
func (o *RepositoryWebhookResponse) SetIdentifier(v int64) {
	o.Identifier = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *RepositoryWebhookResponse) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetIsLastResponseBad returns the IsLastResponseBad field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetIsLastResponseBad() bool {
	if o == nil || isNil(o.IsLastResponseBad) {
		var ret bool
		return ret
	}
	return *o.IsLastResponseBad
}

// GetIsLastResponseBadOk returns a tuple with the IsLastResponseBad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetIsLastResponseBadOk() (*bool, bool) {
	if o == nil || isNil(o.IsLastResponseBad) {
		return nil, false
	}
	return o.IsLastResponseBad, true
}

// HasIsLastResponseBad returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasIsLastResponseBad() bool {
	if o != nil && !isNil(o.IsLastResponseBad) {
		return true
	}

	return false
}

// SetIsLastResponseBad gets a reference to the given bool and assigns it to the IsLastResponseBad field.
func (o *RepositoryWebhookResponse) SetIsLastResponseBad(v bool) {
	o.IsLastResponseBad = &v
}

// GetLastResponseStatus returns the LastResponseStatus field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetLastResponseStatus() int64 {
	if o == nil || isNil(o.LastResponseStatus) {
		var ret int64
		return ret
	}
	return *o.LastResponseStatus
}

// GetLastResponseStatusOk returns a tuple with the LastResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetLastResponseStatusOk() (*int64, bool) {
	if o == nil || isNil(o.LastResponseStatus) {
		return nil, false
	}
	return o.LastResponseStatus, true
}

// HasLastResponseStatus returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasLastResponseStatus() bool {
	if o != nil && !isNil(o.LastResponseStatus) {
		return true
	}

	return false
}

// SetLastResponseStatus gets a reference to the given int64 and assigns it to the LastResponseStatus field.
func (o *RepositoryWebhookResponse) SetLastResponseStatus(v int64) {
	o.LastResponseStatus = &v
}

// GetLastResponseStatusStr returns the LastResponseStatusStr field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetLastResponseStatusStr() string {
	if o == nil || isNil(o.LastResponseStatusStr) {
		var ret string
		return ret
	}
	return *o.LastResponseStatusStr
}

// GetLastResponseStatusStrOk returns a tuple with the LastResponseStatusStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetLastResponseStatusStrOk() (*string, bool) {
	if o == nil || isNil(o.LastResponseStatusStr) {
		return nil, false
	}
	return o.LastResponseStatusStr, true
}

// HasLastResponseStatusStr returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasLastResponseStatusStr() bool {
	if o != nil && !isNil(o.LastResponseStatusStr) {
		return true
	}

	return false
}

// SetLastResponseStatusStr gets a reference to the given string and assigns it to the LastResponseStatusStr field.
func (o *RepositoryWebhookResponse) SetLastResponseStatusStr(v string) {
	o.LastResponseStatusStr = &v
}

// GetNumSent returns the NumSent field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetNumSent() int64 {
	if o == nil || isNil(o.NumSent) {
		var ret int64
		return ret
	}
	return *o.NumSent
}

// GetNumSentOk returns a tuple with the NumSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetNumSentOk() (*int64, bool) {
	if o == nil || isNil(o.NumSent) {
		return nil, false
	}
	return o.NumSent, true
}

// HasNumSent returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasNumSent() bool {
	if o != nil && !isNil(o.NumSent) {
		return true
	}

	return false
}

// SetNumSent gets a reference to the given int64 and assigns it to the NumSent field.
func (o *RepositoryWebhookResponse) SetNumSent(v int64) {
	o.NumSent = &v
}

// GetPackageQuery returns the PackageQuery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RepositoryWebhookResponse) GetPackageQuery() string {
	if o == nil || isNil(o.PackageQuery.Get()) {
		var ret string
		return ret
	}
	return *o.PackageQuery.Get()
}

// GetPackageQueryOk returns a tuple with the PackageQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryWebhookResponse) GetPackageQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageQuery.Get(), o.PackageQuery.IsSet()
}

// HasPackageQuery returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasPackageQuery() bool {
	if o != nil && o.PackageQuery.IsSet() {
		return true
	}

	return false
}

// SetPackageQuery gets a reference to the given NullableString and assigns it to the PackageQuery field.
func (o *RepositoryWebhookResponse) SetPackageQuery(v string) {
	o.PackageQuery.Set(&v)
}

// SetPackageQueryNil sets the value for PackageQuery to be an explicit nil
func (o *RepositoryWebhookResponse) SetPackageQueryNil() {
	o.PackageQuery.Set(nil)
}

// UnsetPackageQuery ensures that no value is present for PackageQuery, not even an explicit nil
func (o *RepositoryWebhookResponse) UnsetPackageQuery() {
	o.PackageQuery.Unset()
}

// GetRequestBodyFormat returns the RequestBodyFormat field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetRequestBodyFormat() int64 {
	if o == nil || isNil(o.RequestBodyFormat) {
		var ret int64
		return ret
	}
	return *o.RequestBodyFormat
}

// GetRequestBodyFormatOk returns a tuple with the RequestBodyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetRequestBodyFormatOk() (*int64, bool) {
	if o == nil || isNil(o.RequestBodyFormat) {
		return nil, false
	}
	return o.RequestBodyFormat, true
}

// HasRequestBodyFormat returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasRequestBodyFormat() bool {
	if o != nil && !isNil(o.RequestBodyFormat) {
		return true
	}

	return false
}

// SetRequestBodyFormat gets a reference to the given int64 and assigns it to the RequestBodyFormat field.
func (o *RepositoryWebhookResponse) SetRequestBodyFormat(v int64) {
	o.RequestBodyFormat = &v
}

// GetRequestBodyFormatStr returns the RequestBodyFormatStr field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetRequestBodyFormatStr() string {
	if o == nil || isNil(o.RequestBodyFormatStr) {
		var ret string
		return ret
	}
	return *o.RequestBodyFormatStr
}

// GetRequestBodyFormatStrOk returns a tuple with the RequestBodyFormatStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetRequestBodyFormatStrOk() (*string, bool) {
	if o == nil || isNil(o.RequestBodyFormatStr) {
		return nil, false
	}
	return o.RequestBodyFormatStr, true
}

// HasRequestBodyFormatStr returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasRequestBodyFormatStr() bool {
	if o != nil && !isNil(o.RequestBodyFormatStr) {
		return true
	}

	return false
}

// SetRequestBodyFormatStr gets a reference to the given string and assigns it to the RequestBodyFormatStr field.
func (o *RepositoryWebhookResponse) SetRequestBodyFormatStr(v string) {
	o.RequestBodyFormatStr = &v
}

// GetRequestBodyTemplateFormat returns the RequestBodyTemplateFormat field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetRequestBodyTemplateFormat() int64 {
	if o == nil || isNil(o.RequestBodyTemplateFormat) {
		var ret int64
		return ret
	}
	return *o.RequestBodyTemplateFormat
}

// GetRequestBodyTemplateFormatOk returns a tuple with the RequestBodyTemplateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetRequestBodyTemplateFormatOk() (*int64, bool) {
	if o == nil || isNil(o.RequestBodyTemplateFormat) {
		return nil, false
	}
	return o.RequestBodyTemplateFormat, true
}

// HasRequestBodyTemplateFormat returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasRequestBodyTemplateFormat() bool {
	if o != nil && !isNil(o.RequestBodyTemplateFormat) {
		return true
	}

	return false
}

// SetRequestBodyTemplateFormat gets a reference to the given int64 and assigns it to the RequestBodyTemplateFormat field.
func (o *RepositoryWebhookResponse) SetRequestBodyTemplateFormat(v int64) {
	o.RequestBodyTemplateFormat = &v
}

// GetRequestBodyTemplateFormatStr returns the RequestBodyTemplateFormatStr field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetRequestBodyTemplateFormatStr() string {
	if o == nil || isNil(o.RequestBodyTemplateFormatStr) {
		var ret string
		return ret
	}
	return *o.RequestBodyTemplateFormatStr
}

// GetRequestBodyTemplateFormatStrOk returns a tuple with the RequestBodyTemplateFormatStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetRequestBodyTemplateFormatStrOk() (*string, bool) {
	if o == nil || isNil(o.RequestBodyTemplateFormatStr) {
		return nil, false
	}
	return o.RequestBodyTemplateFormatStr, true
}

// HasRequestBodyTemplateFormatStr returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasRequestBodyTemplateFormatStr() bool {
	if o != nil && !isNil(o.RequestBodyTemplateFormatStr) {
		return true
	}

	return false
}

// SetRequestBodyTemplateFormatStr gets a reference to the given string and assigns it to the RequestBodyTemplateFormatStr field.
func (o *RepositoryWebhookResponse) SetRequestBodyTemplateFormatStr(v string) {
	o.RequestBodyTemplateFormatStr = &v
}

// GetRequestContentType returns the RequestContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RepositoryWebhookResponse) GetRequestContentType() string {
	if o == nil || isNil(o.RequestContentType.Get()) {
		var ret string
		return ret
	}
	return *o.RequestContentType.Get()
}

// GetRequestContentTypeOk returns a tuple with the RequestContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryWebhookResponse) GetRequestContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestContentType.Get(), o.RequestContentType.IsSet()
}

// HasRequestContentType returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasRequestContentType() bool {
	if o != nil && o.RequestContentType.IsSet() {
		return true
	}

	return false
}

// SetRequestContentType gets a reference to the given NullableString and assigns it to the RequestContentType field.
func (o *RepositoryWebhookResponse) SetRequestContentType(v string) {
	o.RequestContentType.Set(&v)
}

// SetRequestContentTypeNil sets the value for RequestContentType to be an explicit nil
func (o *RepositoryWebhookResponse) SetRequestContentTypeNil() {
	o.RequestContentType.Set(nil)
}

// UnsetRequestContentType ensures that no value is present for RequestContentType, not even an explicit nil
func (o *RepositoryWebhookResponse) UnsetRequestContentType() {
	o.RequestContentType.Unset()
}

// GetSecretHeader returns the SecretHeader field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RepositoryWebhookResponse) GetSecretHeader() string {
	if o == nil || isNil(o.SecretHeader.Get()) {
		var ret string
		return ret
	}
	return *o.SecretHeader.Get()
}

// GetSecretHeaderOk returns a tuple with the SecretHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryWebhookResponse) GetSecretHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecretHeader.Get(), o.SecretHeader.IsSet()
}

// HasSecretHeader returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasSecretHeader() bool {
	if o != nil && o.SecretHeader.IsSet() {
		return true
	}

	return false
}

// SetSecretHeader gets a reference to the given NullableString and assigns it to the SecretHeader field.
func (o *RepositoryWebhookResponse) SetSecretHeader(v string) {
	o.SecretHeader.Set(&v)
}

// SetSecretHeaderNil sets the value for SecretHeader to be an explicit nil
func (o *RepositoryWebhookResponse) SetSecretHeaderNil() {
	o.SecretHeader.Set(nil)
}

// UnsetSecretHeader ensures that no value is present for SecretHeader, not even an explicit nil
func (o *RepositoryWebhookResponse) UnsetSecretHeader() {
	o.SecretHeader.Unset()
}

// GetSelfUrl returns the SelfUrl field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetSelfUrl() string {
	if o == nil || isNil(o.SelfUrl) {
		var ret string
		return ret
	}
	return *o.SelfUrl
}

// GetSelfUrlOk returns a tuple with the SelfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetSelfUrlOk() (*string, bool) {
	if o == nil || isNil(o.SelfUrl) {
		return nil, false
	}
	return o.SelfUrl, true
}

// HasSelfUrl returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasSelfUrl() bool {
	if o != nil && !isNil(o.SelfUrl) {
		return true
	}

	return false
}

// SetSelfUrl gets a reference to the given string and assigns it to the SelfUrl field.
func (o *RepositoryWebhookResponse) SetSelfUrl(v string) {
	o.SelfUrl = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetSlugPerm() string {
	if o == nil || isNil(o.SlugPerm) {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetSlugPermOk() (*string, bool) {
	if o == nil || isNil(o.SlugPerm) {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasSlugPerm() bool {
	if o != nil && !isNil(o.SlugPerm) {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *RepositoryWebhookResponse) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

// GetTargetUrl returns the TargetUrl field value
func (o *RepositoryWebhookResponse) GetTargetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetTargetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetUrl, true
}

// SetTargetUrl sets field value
func (o *RepositoryWebhookResponse) SetTargetUrl(v string) {
	o.TargetUrl = v
}

// GetTemplates returns the Templates field value
// If the value is explicit nil, the zero value for []WebhookTemplate will be returned
func (o *RepositoryWebhookResponse) GetTemplates() []WebhookTemplate {
	if o == nil {
		var ret []WebhookTemplate
		return ret
	}

	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryWebhookResponse) GetTemplatesOk() ([]WebhookTemplate, bool) {
	if o == nil || isNil(o.Templates) {
		return nil, false
	}
	return o.Templates, true
}

// SetTemplates sets field value
func (o *RepositoryWebhookResponse) SetTemplates(v []WebhookTemplate) {
	o.Templates = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *RepositoryWebhookResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetUpdatedBy() string {
	if o == nil || isNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasUpdatedBy() bool {
	if o != nil && !isNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *RepositoryWebhookResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetUpdatedByUrl returns the UpdatedByUrl field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetUpdatedByUrl() string {
	if o == nil || isNil(o.UpdatedByUrl) {
		var ret string
		return ret
	}
	return *o.UpdatedByUrl
}

// GetUpdatedByUrlOk returns a tuple with the UpdatedByUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetUpdatedByUrlOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedByUrl) {
		return nil, false
	}
	return o.UpdatedByUrl, true
}

// HasUpdatedByUrl returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasUpdatedByUrl() bool {
	if o != nil && !isNil(o.UpdatedByUrl) {
		return true
	}

	return false
}

// SetUpdatedByUrl gets a reference to the given string and assigns it to the UpdatedByUrl field.
func (o *RepositoryWebhookResponse) SetUpdatedByUrl(v string) {
	o.UpdatedByUrl = &v
}

// GetVerifySsl returns the VerifySsl field value if set, zero value otherwise.
func (o *RepositoryWebhookResponse) GetVerifySsl() bool {
	if o == nil || isNil(o.VerifySsl) {
		var ret bool
		return ret
	}
	return *o.VerifySsl
}

// GetVerifySslOk returns a tuple with the VerifySsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryWebhookResponse) GetVerifySslOk() (*bool, bool) {
	if o == nil || isNil(o.VerifySsl) {
		return nil, false
	}
	return o.VerifySsl, true
}

// HasVerifySsl returns a boolean if a field has been set.
func (o *RepositoryWebhookResponse) HasVerifySsl() bool {
	if o != nil && !isNil(o.VerifySsl) {
		return true
	}

	return false
}

// SetVerifySsl gets a reference to the given bool and assigns it to the VerifySsl field.
func (o *RepositoryWebhookResponse) SetVerifySsl(v bool) {
	o.VerifySsl = &v
}

func (o RepositoryWebhookResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !isNil(o.CreatedByUrl) {
		toSerialize["created_by_url"] = o.CreatedByUrl
	}
	if !isNil(o.DisableReason) {
		toSerialize["disable_reason"] = o.DisableReason
	}
	if !isNil(o.DisableReasonStr) {
		toSerialize["disable_reason_str"] = o.DisableReasonStr
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if !isNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !isNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if !isNil(o.IsLastResponseBad) {
		toSerialize["is_last_response_bad"] = o.IsLastResponseBad
	}
	if !isNil(o.LastResponseStatus) {
		toSerialize["last_response_status"] = o.LastResponseStatus
	}
	if !isNil(o.LastResponseStatusStr) {
		toSerialize["last_response_status_str"] = o.LastResponseStatusStr
	}
	if !isNil(o.NumSent) {
		toSerialize["num_sent"] = o.NumSent
	}
	if o.PackageQuery.IsSet() {
		toSerialize["package_query"] = o.PackageQuery.Get()
	}
	if !isNil(o.RequestBodyFormat) {
		toSerialize["request_body_format"] = o.RequestBodyFormat
	}
	if !isNil(o.RequestBodyFormatStr) {
		toSerialize["request_body_format_str"] = o.RequestBodyFormatStr
	}
	if !isNil(o.RequestBodyTemplateFormat) {
		toSerialize["request_body_template_format"] = o.RequestBodyTemplateFormat
	}
	if !isNil(o.RequestBodyTemplateFormatStr) {
		toSerialize["request_body_template_format_str"] = o.RequestBodyTemplateFormatStr
	}
	if o.RequestContentType.IsSet() {
		toSerialize["request_content_type"] = o.RequestContentType.Get()
	}
	if o.SecretHeader.IsSet() {
		toSerialize["secret_header"] = o.SecretHeader.Get()
	}
	if !isNil(o.SelfUrl) {
		toSerialize["self_url"] = o.SelfUrl
	}
	if !isNil(o.SlugPerm) {
		toSerialize["slug_perm"] = o.SlugPerm
	}
	if true {
		toSerialize["target_url"] = o.TargetUrl
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !isNil(o.UpdatedByUrl) {
		toSerialize["updated_by_url"] = o.UpdatedByUrl
	}
	if !isNil(o.VerifySsl) {
		toSerialize["verify_ssl"] = o.VerifySsl
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryWebhookResponse struct {
	value *RepositoryWebhookResponse
	isSet bool
}

func (v NullableRepositoryWebhookResponse) Get() *RepositoryWebhookResponse {
	return v.value
}

func (v *NullableRepositoryWebhookResponse) Set(val *RepositoryWebhookResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryWebhookResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryWebhookResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryWebhookResponse(val *RepositoryWebhookResponse) *NullableRepositoryWebhookResponse {
	return &NullableRepositoryWebhookResponse{value: val, isSet: true}
}

func (v NullableRepositoryWebhookResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryWebhookResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
