/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.477.1
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// checks if the UserPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserPasswordRequest{}

// UserPasswordRequest struct for UserPasswordRequest
type UserPasswordRequest struct {
	Password string `json:"password"`
}

// NewUserPasswordRequest instantiates a new UserPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPasswordRequest(password string) *UserPasswordRequest {
	this := UserPasswordRequest{}
	this.Password = password
	return &this
}

// NewUserPasswordRequestWithDefaults instantiates a new UserPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPasswordRequestWithDefaults() *UserPasswordRequest {
	this := UserPasswordRequest{}
	return &this
}

// GetPassword returns the Password field value
func (o *UserPasswordRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserPasswordRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserPasswordRequest) SetPassword(v string) {
	o.Password = v
}

func (o UserPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableUserPasswordRequest struct {
	value *UserPasswordRequest
	isSet bool
}

func (v NullableUserPasswordRequest) Get() *UserPasswordRequest {
	return v.value
}

func (v *NullableUserPasswordRequest) Set(val *UserPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPasswordRequest(val *UserPasswordRequest) *NullableUserPasswordRequest {
	return &NullableUserPasswordRequest{value: val, isSet: true}
}

func (v NullableUserPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
