/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// StorageRegionResponse struct for StorageRegionResponse
type StorageRegionResponse struct {
	// Name of the storage region
	Label string `json:"label"`
	// Slug for the storage region
	Slug string `json:"slug"`
}

// NewStorageRegionResponse instantiates a new StorageRegionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageRegionResponse(label string, slug string) *StorageRegionResponse {
	this := StorageRegionResponse{}
	this.Label = label
	this.Slug = slug
	return &this
}

// NewStorageRegionResponseWithDefaults instantiates a new StorageRegionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageRegionResponseWithDefaults() *StorageRegionResponse {
	this := StorageRegionResponse{}
	return &this
}

// GetLabel returns the Label field value
func (o *StorageRegionResponse) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *StorageRegionResponse) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *StorageRegionResponse) SetLabel(v string) {
	o.Label = v
}

// GetSlug returns the Slug field value
func (o *StorageRegionResponse) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *StorageRegionResponse) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *StorageRegionResponse) SetSlug(v string) {
	o.Slug = v
}

func (o StorageRegionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["slug"] = o.Slug
	}
	return json.Marshal(toSerialize)
}

type NullableStorageRegionResponse struct {
	value *StorageRegionResponse
	isSet bool
}

func (v NullableStorageRegionResponse) Get() *StorageRegionResponse {
	return v.value
}

func (v *NullableStorageRegionResponse) Set(val *StorageRegionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageRegionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageRegionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageRegionResponse(val *StorageRegionResponse) *NullableStorageRegionResponse {
	return &NullableStorageRegionResponse{value: val, isSet: true}
}

func (v NullableStorageRegionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageRegionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
