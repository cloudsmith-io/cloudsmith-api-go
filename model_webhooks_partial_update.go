/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.42.1
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// WebhooksPartialUpdate struct for WebhooksPartialUpdate
type WebhooksPartialUpdate struct {
	// None
	Events []string `json:"events,omitempty"`
	// If enabled, the webhook will trigger on events and send payloads to the configured target URL.
	IsActive *bool `json:"is_active,omitempty"`
	// The package-based search query for webhooks to fire. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. If a package does not match, the webhook will not fire.
	PackageQuery *string `json:"package_query,omitempty"`
	// The format of the payloads for webhook requests.
	RequestBodyFormat *string `json:"request_body_format,omitempty"`
	// The format of the payloads for webhook requests.
	RequestBodyTemplateFormat *string `json:"request_body_template_format,omitempty"`
	// The value that will be sent for the 'Content Type' header.
	RequestContentType *string `json:"request_content_type,omitempty"`
	// The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.
	SecretHeader *string `json:"secret_header,omitempty"`
	// The value for the predefined secret (note: this is treated as a passphrase and is encrypted when we store it). You can use this as a form of authentication on the endpoint side.
	SecretValue *string `json:"secret_value,omitempty"`
	// The value for the signature key - This is used to generate an HMAC-based hex digest of the request body, which we send as the X-Cloudsmith-Signature header so that you can ensure that the request wasn't modified by a malicious party (note: this is treated as a passphrase and is encrypted when we store it).
	SignatureKey *string `json:"signature_key,omitempty"`
	// The destination URL that webhook payloads will be POST'ed to.
	TargetUrl *string `json:"target_url,omitempty"`
	// None
	Templates []WebhooksOwnerRepoTemplates `json:"templates,omitempty"`
	// If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.
	VerifySsl *bool `json:"verify_ssl,omitempty"`
}

// NewWebhooksPartialUpdate instantiates a new WebhooksPartialUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksPartialUpdate() *WebhooksPartialUpdate {
	this := WebhooksPartialUpdate{}
	return &this
}

// NewWebhooksPartialUpdateWithDefaults instantiates a new WebhooksPartialUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksPartialUpdateWithDefaults() *WebhooksPartialUpdate {
	this := WebhooksPartialUpdate{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetEvents() []string {
	if o == nil || o.Events == nil {
		var ret []string
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetEventsOk() ([]string, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []string and assigns it to the Events field.
func (o *WebhooksPartialUpdate) SetEvents(v []string) {
	o.Events = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *WebhooksPartialUpdate) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetPackageQuery returns the PackageQuery field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetPackageQuery() string {
	if o == nil || o.PackageQuery == nil {
		var ret string
		return ret
	}
	return *o.PackageQuery
}

// GetPackageQueryOk returns a tuple with the PackageQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetPackageQueryOk() (*string, bool) {
	if o == nil || o.PackageQuery == nil {
		return nil, false
	}
	return o.PackageQuery, true
}

// HasPackageQuery returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasPackageQuery() bool {
	if o != nil && o.PackageQuery != nil {
		return true
	}

	return false
}

// SetPackageQuery gets a reference to the given string and assigns it to the PackageQuery field.
func (o *WebhooksPartialUpdate) SetPackageQuery(v string) {
	o.PackageQuery = &v
}

// GetRequestBodyFormat returns the RequestBodyFormat field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetRequestBodyFormat() string {
	if o == nil || o.RequestBodyFormat == nil {
		var ret string
		return ret
	}
	return *o.RequestBodyFormat
}

// GetRequestBodyFormatOk returns a tuple with the RequestBodyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetRequestBodyFormatOk() (*string, bool) {
	if o == nil || o.RequestBodyFormat == nil {
		return nil, false
	}
	return o.RequestBodyFormat, true
}

// HasRequestBodyFormat returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasRequestBodyFormat() bool {
	if o != nil && o.RequestBodyFormat != nil {
		return true
	}

	return false
}

// SetRequestBodyFormat gets a reference to the given string and assigns it to the RequestBodyFormat field.
func (o *WebhooksPartialUpdate) SetRequestBodyFormat(v string) {
	o.RequestBodyFormat = &v
}

// GetRequestBodyTemplateFormat returns the RequestBodyTemplateFormat field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetRequestBodyTemplateFormat() string {
	if o == nil || o.RequestBodyTemplateFormat == nil {
		var ret string
		return ret
	}
	return *o.RequestBodyTemplateFormat
}

// GetRequestBodyTemplateFormatOk returns a tuple with the RequestBodyTemplateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetRequestBodyTemplateFormatOk() (*string, bool) {
	if o == nil || o.RequestBodyTemplateFormat == nil {
		return nil, false
	}
	return o.RequestBodyTemplateFormat, true
}

// HasRequestBodyTemplateFormat returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasRequestBodyTemplateFormat() bool {
	if o != nil && o.RequestBodyTemplateFormat != nil {
		return true
	}

	return false
}

// SetRequestBodyTemplateFormat gets a reference to the given string and assigns it to the RequestBodyTemplateFormat field.
func (o *WebhooksPartialUpdate) SetRequestBodyTemplateFormat(v string) {
	o.RequestBodyTemplateFormat = &v
}

// GetRequestContentType returns the RequestContentType field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetRequestContentType() string {
	if o == nil || o.RequestContentType == nil {
		var ret string
		return ret
	}
	return *o.RequestContentType
}

// GetRequestContentTypeOk returns a tuple with the RequestContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetRequestContentTypeOk() (*string, bool) {
	if o == nil || o.RequestContentType == nil {
		return nil, false
	}
	return o.RequestContentType, true
}

// HasRequestContentType returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasRequestContentType() bool {
	if o != nil && o.RequestContentType != nil {
		return true
	}

	return false
}

// SetRequestContentType gets a reference to the given string and assigns it to the RequestContentType field.
func (o *WebhooksPartialUpdate) SetRequestContentType(v string) {
	o.RequestContentType = &v
}

// GetSecretHeader returns the SecretHeader field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetSecretHeader() string {
	if o == nil || o.SecretHeader == nil {
		var ret string
		return ret
	}
	return *o.SecretHeader
}

// GetSecretHeaderOk returns a tuple with the SecretHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetSecretHeaderOk() (*string, bool) {
	if o == nil || o.SecretHeader == nil {
		return nil, false
	}
	return o.SecretHeader, true
}

// HasSecretHeader returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasSecretHeader() bool {
	if o != nil && o.SecretHeader != nil {
		return true
	}

	return false
}

// SetSecretHeader gets a reference to the given string and assigns it to the SecretHeader field.
func (o *WebhooksPartialUpdate) SetSecretHeader(v string) {
	o.SecretHeader = &v
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetSecretValue() string {
	if o == nil || o.SecretValue == nil {
		var ret string
		return ret
	}
	return *o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetSecretValueOk() (*string, bool) {
	if o == nil || o.SecretValue == nil {
		return nil, false
	}
	return o.SecretValue, true
}

// HasSecretValue returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasSecretValue() bool {
	if o != nil && o.SecretValue != nil {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given string and assigns it to the SecretValue field.
func (o *WebhooksPartialUpdate) SetSecretValue(v string) {
	o.SecretValue = &v
}

// GetSignatureKey returns the SignatureKey field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetSignatureKey() string {
	if o == nil || o.SignatureKey == nil {
		var ret string
		return ret
	}
	return *o.SignatureKey
}

// GetSignatureKeyOk returns a tuple with the SignatureKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetSignatureKeyOk() (*string, bool) {
	if o == nil || o.SignatureKey == nil {
		return nil, false
	}
	return o.SignatureKey, true
}

// HasSignatureKey returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasSignatureKey() bool {
	if o != nil && o.SignatureKey != nil {
		return true
	}

	return false
}

// SetSignatureKey gets a reference to the given string and assigns it to the SignatureKey field.
func (o *WebhooksPartialUpdate) SetSignatureKey(v string) {
	o.SignatureKey = &v
}

// GetTargetUrl returns the TargetUrl field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetTargetUrl() string {
	if o == nil || o.TargetUrl == nil {
		var ret string
		return ret
	}
	return *o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetTargetUrlOk() (*string, bool) {
	if o == nil || o.TargetUrl == nil {
		return nil, false
	}
	return o.TargetUrl, true
}

// HasTargetUrl returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasTargetUrl() bool {
	if o != nil && o.TargetUrl != nil {
		return true
	}

	return false
}

// SetTargetUrl gets a reference to the given string and assigns it to the TargetUrl field.
func (o *WebhooksPartialUpdate) SetTargetUrl(v string) {
	o.TargetUrl = &v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetTemplates() []WebhooksOwnerRepoTemplates {
	if o == nil || o.Templates == nil {
		var ret []WebhooksOwnerRepoTemplates
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetTemplatesOk() ([]WebhooksOwnerRepoTemplates, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []WebhooksOwnerRepoTemplates and assigns it to the Templates field.
func (o *WebhooksPartialUpdate) SetTemplates(v []WebhooksOwnerRepoTemplates) {
	o.Templates = v
}

// GetVerifySsl returns the VerifySsl field value if set, zero value otherwise.
func (o *WebhooksPartialUpdate) GetVerifySsl() bool {
	if o == nil || o.VerifySsl == nil {
		var ret bool
		return ret
	}
	return *o.VerifySsl
}

// GetVerifySslOk returns a tuple with the VerifySsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksPartialUpdate) GetVerifySslOk() (*bool, bool) {
	if o == nil || o.VerifySsl == nil {
		return nil, false
	}
	return o.VerifySsl, true
}

// HasVerifySsl returns a boolean if a field has been set.
func (o *WebhooksPartialUpdate) HasVerifySsl() bool {
	if o != nil && o.VerifySsl != nil {
		return true
	}

	return false
}

// SetVerifySsl gets a reference to the given bool and assigns it to the VerifySsl field.
func (o *WebhooksPartialUpdate) SetVerifySsl(v bool) {
	o.VerifySsl = &v
}

func (o WebhooksPartialUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.IsActive != nil {
		toSerialize["is_active"] = o.IsActive
	}
	if o.PackageQuery != nil {
		toSerialize["package_query"] = o.PackageQuery
	}
	if o.RequestBodyFormat != nil {
		toSerialize["request_body_format"] = o.RequestBodyFormat
	}
	if o.RequestBodyTemplateFormat != nil {
		toSerialize["request_body_template_format"] = o.RequestBodyTemplateFormat
	}
	if o.RequestContentType != nil {
		toSerialize["request_content_type"] = o.RequestContentType
	}
	if o.SecretHeader != nil {
		toSerialize["secret_header"] = o.SecretHeader
	}
	if o.SecretValue != nil {
		toSerialize["secret_value"] = o.SecretValue
	}
	if o.SignatureKey != nil {
		toSerialize["signature_key"] = o.SignatureKey
	}
	if o.TargetUrl != nil {
		toSerialize["target_url"] = o.TargetUrl
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	if o.VerifySsl != nil {
		toSerialize["verify_ssl"] = o.VerifySsl
	}
	return json.Marshal(toSerialize)
}

type NullableWebhooksPartialUpdate struct {
	value *WebhooksPartialUpdate
	isSet bool
}

func (v NullableWebhooksPartialUpdate) Get() *WebhooksPartialUpdate {
	return v.value
}

func (v *NullableWebhooksPartialUpdate) Set(val *WebhooksPartialUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksPartialUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksPartialUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksPartialUpdate(val *WebhooksPartialUpdate) *NullableWebhooksPartialUpdate {
	return &NullableWebhooksPartialUpdate{value: val, isSet: true}
}

func (v NullableWebhooksPartialUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksPartialUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
