/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// QuotaResponse struct for QuotaResponse
type QuotaResponse struct {
	Usage UsageFieldset `json:"usage"`
}

// NewQuotaResponse instantiates a new QuotaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaResponse(usage UsageFieldset) *QuotaResponse {
	this := QuotaResponse{}
	this.Usage = usage
	return &this
}

// NewQuotaResponseWithDefaults instantiates a new QuotaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaResponseWithDefaults() *QuotaResponse {
	this := QuotaResponse{}
	return &this
}

// GetUsage returns the Usage field value
func (o *QuotaResponse) GetUsage() UsageFieldset {
	if o == nil {
		var ret UsageFieldset
		return ret
	}

	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *QuotaResponse) GetUsageOk() (*UsageFieldset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usage, true
}

// SetUsage sets field value
func (o *QuotaResponse) SetUsage(v UsageFieldset) {
	o.Usage = v
}

func (o QuotaResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["usage"] = o.Usage
	}
	return json.Marshal(toSerialize)
}

type NullableQuotaResponse struct {
	value *QuotaResponse
	isSet bool
}

func (v NullableQuotaResponse) Get() *QuotaResponse {
	return v.value
}

func (v *NullableQuotaResponse) Set(val *QuotaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaResponse(val *QuotaResponse) *NullableQuotaResponse {
	return &NullableQuotaResponse{value: val, isSet: true}
}

func (v NullableQuotaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
