/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.617.1
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// checks if the OrganizationMembershipVisibilityUpdateRequestPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationMembershipVisibilityUpdateRequestPatch{}

// OrganizationMembershipVisibilityUpdateRequestPatch struct for OrganizationMembershipVisibilityUpdateRequestPatch
type OrganizationMembershipVisibilityUpdateRequestPatch struct {
	Visibility           *string `json:"visibility,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationMembershipVisibilityUpdateRequestPatch OrganizationMembershipVisibilityUpdateRequestPatch

// NewOrganizationMembershipVisibilityUpdateRequestPatch instantiates a new OrganizationMembershipVisibilityUpdateRequestPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationMembershipVisibilityUpdateRequestPatch() *OrganizationMembershipVisibilityUpdateRequestPatch {
	this := OrganizationMembershipVisibilityUpdateRequestPatch{}
	var visibility string = "Public"
	this.Visibility = &visibility
	return &this
}

// NewOrganizationMembershipVisibilityUpdateRequestPatchWithDefaults instantiates a new OrganizationMembershipVisibilityUpdateRequestPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationMembershipVisibilityUpdateRequestPatchWithDefaults() *OrganizationMembershipVisibilityUpdateRequestPatch {
	this := OrganizationMembershipVisibilityUpdateRequestPatch{}
	var visibility string = "Public"
	this.Visibility = &visibility
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdateRequestPatch) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdateRequestPatch) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdateRequestPatch) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OrganizationMembershipVisibilityUpdateRequestPatch) SetVisibility(v string) {
	o.Visibility = &v
}

func (o OrganizationMembershipVisibilityUpdateRequestPatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationMembershipVisibilityUpdateRequestPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationMembershipVisibilityUpdateRequestPatch) UnmarshalJSON(data []byte) (err error) {
	varOrganizationMembershipVisibilityUpdateRequestPatch := _OrganizationMembershipVisibilityUpdateRequestPatch{}

	err = json.Unmarshal(data, &varOrganizationMembershipVisibilityUpdateRequestPatch)

	if err != nil {
		return err
	}

	*o = OrganizationMembershipVisibilityUpdateRequestPatch(varOrganizationMembershipVisibilityUpdateRequestPatch)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "visibility")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationMembershipVisibilityUpdateRequestPatch struct {
	value *OrganizationMembershipVisibilityUpdateRequestPatch
	isSet bool
}

func (v NullableOrganizationMembershipVisibilityUpdateRequestPatch) Get() *OrganizationMembershipVisibilityUpdateRequestPatch {
	return v.value
}

func (v *NullableOrganizationMembershipVisibilityUpdateRequestPatch) Set(val *OrganizationMembershipVisibilityUpdateRequestPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationMembershipVisibilityUpdateRequestPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationMembershipVisibilityUpdateRequestPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationMembershipVisibilityUpdateRequestPatch(val *OrganizationMembershipVisibilityUpdateRequestPatch) *NullableOrganizationMembershipVisibilityUpdateRequestPatch {
	return &NullableOrganizationMembershipVisibilityUpdateRequestPatch{value: val, isSet: true}
}

func (v NullableOrganizationMembershipVisibilityUpdateRequestPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationMembershipVisibilityUpdateRequestPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
