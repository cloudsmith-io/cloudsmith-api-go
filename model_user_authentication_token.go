/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.674.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"time"
)

// checks if the UserAuthenticationToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthenticationToken{}

// UserAuthenticationToken struct for UserAuthenticationToken
type UserAuthenticationToken struct {
	// The time at which the API key was created.
	Created *time.Time `json:"created,omitempty"`
	// The unique API key used for authentication. This will be obfuscated on read-only HTTP methods.
	Key *string `json:"key,omitempty"`
	// The slug_perm for token.
	SlugPerm             *string `json:"slug_perm,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserAuthenticationToken UserAuthenticationToken

// NewUserAuthenticationToken instantiates a new UserAuthenticationToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthenticationToken() *UserAuthenticationToken {
	this := UserAuthenticationToken{}
	return &this
}

// NewUserAuthenticationTokenWithDefaults instantiates a new UserAuthenticationToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthenticationTokenWithDefaults() *UserAuthenticationToken {
	this := UserAuthenticationToken{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *UserAuthenticationToken) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticationToken) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *UserAuthenticationToken) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *UserAuthenticationToken) SetCreated(v time.Time) {
	o.Created = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *UserAuthenticationToken) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticationToken) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *UserAuthenticationToken) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *UserAuthenticationToken) SetKey(v string) {
	o.Key = &v
}

// GetSlugPerm returns the SlugPerm field value if set, zero value otherwise.
func (o *UserAuthenticationToken) GetSlugPerm() string {
	if o == nil || IsNil(o.SlugPerm) {
		var ret string
		return ret
	}
	return *o.SlugPerm
}

// GetSlugPermOk returns a tuple with the SlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticationToken) GetSlugPermOk() (*string, bool) {
	if o == nil || IsNil(o.SlugPerm) {
		return nil, false
	}
	return o.SlugPerm, true
}

// HasSlugPerm returns a boolean if a field has been set.
func (o *UserAuthenticationToken) HasSlugPerm() bool {
	if o != nil && !IsNil(o.SlugPerm) {
		return true
	}

	return false
}

// SetSlugPerm gets a reference to the given string and assigns it to the SlugPerm field.
func (o *UserAuthenticationToken) SetSlugPerm(v string) {
	o.SlugPerm = &v
}

func (o UserAuthenticationToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthenticationToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.SlugPerm) {
		toSerialize["slug_perm"] = o.SlugPerm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserAuthenticationToken) UnmarshalJSON(data []byte) (err error) {
	varUserAuthenticationToken := _UserAuthenticationToken{}

	err = json.Unmarshal(data, &varUserAuthenticationToken)

	if err != nil {
		return err
	}

	*o = UserAuthenticationToken(varUserAuthenticationToken)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "key")
		delete(additionalProperties, "slug_perm")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserAuthenticationToken struct {
	value *UserAuthenticationToken
	isSet bool
}

func (v NullableUserAuthenticationToken) Get() *UserAuthenticationToken {
	return v.value
}

func (v *NullableUserAuthenticationToken) Set(val *UserAuthenticationToken) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthenticationToken) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthenticationToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthenticationToken(val *UserAuthenticationToken) *NullableUserAuthenticationToken {
	return &NullableUserAuthenticationToken{value: val, isSet: true}
}

func (v NullableUserAuthenticationToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthenticationToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
