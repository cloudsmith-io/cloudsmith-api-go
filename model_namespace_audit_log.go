/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.121.3
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// NamespaceAuditLog struct for NamespaceAuditLog
type NamespaceAuditLog struct {
	//
	Actor string `json:"actor"`
	//
	ActorIpAddress string `json:"actor_ip_address"`
	//
	ActorKind *string `json:"actor_kind,omitempty"`
	//
	ActorLocation map[string]interface{} `json:"actor_location"`
	//
	ActorSlugPerm string `json:"actor_slug_perm"`
	//
	ActorUrl *string `json:"actor_url,omitempty"`
	//
	Context string `json:"context"`
	//
	Event string `json:"event"`
	//
	EventAt string `json:"event_at"`
	//
	Object string `json:"object"`
	//
	ObjectKind string `json:"object_kind"`
	//
	ObjectSlugPerm string `json:"object_slug_perm"`
	//
	Target string `json:"target"`
	//
	TargetKind string `json:"target_kind"`
	//
	TargetSlugPerm *string `json:"target_slug_perm,omitempty"`
	//
	Uuid *string `json:"uuid,omitempty"`
}

// NewNamespaceAuditLog instantiates a new NamespaceAuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNamespaceAuditLog(actor string, actorIpAddress string, actorLocation map[string]interface{}, actorSlugPerm string, context string, event string, eventAt string, object string, objectKind string, objectSlugPerm string, target string, targetKind string) *NamespaceAuditLog {
	this := NamespaceAuditLog{}
	this.Actor = actor
	this.ActorIpAddress = actorIpAddress
	this.ActorLocation = actorLocation
	this.ActorSlugPerm = actorSlugPerm
	this.Context = context
	this.Event = event
	this.EventAt = eventAt
	this.Object = object
	this.ObjectKind = objectKind
	this.ObjectSlugPerm = objectSlugPerm
	this.Target = target
	this.TargetKind = targetKind
	return &this
}

// NewNamespaceAuditLogWithDefaults instantiates a new NamespaceAuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNamespaceAuditLogWithDefaults() *NamespaceAuditLog {
	this := NamespaceAuditLog{}
	return &this
}

// GetActor returns the Actor field value
func (o *NamespaceAuditLog) GetActor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Actor
}

// GetActorOk returns a tuple with the Actor field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actor, true
}

// SetActor sets field value
func (o *NamespaceAuditLog) SetActor(v string) {
	o.Actor = v
}

// GetActorIpAddress returns the ActorIpAddress field value
func (o *NamespaceAuditLog) GetActorIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorIpAddress
}

// GetActorIpAddressOk returns a tuple with the ActorIpAddress field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorIpAddress, true
}

// SetActorIpAddress sets field value
func (o *NamespaceAuditLog) SetActorIpAddress(v string) {
	o.ActorIpAddress = v
}

// GetActorKind returns the ActorKind field value if set, zero value otherwise.
func (o *NamespaceAuditLog) GetActorKind() string {
	if o == nil || o.ActorKind == nil {
		var ret string
		return ret
	}
	return *o.ActorKind
}

// GetActorKindOk returns a tuple with the ActorKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorKindOk() (*string, bool) {
	if o == nil || o.ActorKind == nil {
		return nil, false
	}
	return o.ActorKind, true
}

// HasActorKind returns a boolean if a field has been set.
func (o *NamespaceAuditLog) HasActorKind() bool {
	if o != nil && o.ActorKind != nil {
		return true
	}

	return false
}

// SetActorKind gets a reference to the given string and assigns it to the ActorKind field.
func (o *NamespaceAuditLog) SetActorKind(v string) {
	o.ActorKind = &v
}

// GetActorLocation returns the ActorLocation field value
func (o *NamespaceAuditLog) GetActorLocation() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ActorLocation
}

// GetActorLocationOk returns a tuple with the ActorLocation field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorLocationOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActorLocation, true
}

// SetActorLocation sets field value
func (o *NamespaceAuditLog) SetActorLocation(v map[string]interface{}) {
	o.ActorLocation = v
}

// GetActorSlugPerm returns the ActorSlugPerm field value
func (o *NamespaceAuditLog) GetActorSlugPerm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorSlugPerm
}

// GetActorSlugPermOk returns a tuple with the ActorSlugPerm field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorSlugPermOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorSlugPerm, true
}

// SetActorSlugPerm sets field value
func (o *NamespaceAuditLog) SetActorSlugPerm(v string) {
	o.ActorSlugPerm = v
}

// GetActorUrl returns the ActorUrl field value if set, zero value otherwise.
func (o *NamespaceAuditLog) GetActorUrl() string {
	if o == nil || o.ActorUrl == nil {
		var ret string
		return ret
	}
	return *o.ActorUrl
}

// GetActorUrlOk returns a tuple with the ActorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetActorUrlOk() (*string, bool) {
	if o == nil || o.ActorUrl == nil {
		return nil, false
	}
	return o.ActorUrl, true
}

// HasActorUrl returns a boolean if a field has been set.
func (o *NamespaceAuditLog) HasActorUrl() bool {
	if o != nil && o.ActorUrl != nil {
		return true
	}

	return false
}

// SetActorUrl gets a reference to the given string and assigns it to the ActorUrl field.
func (o *NamespaceAuditLog) SetActorUrl(v string) {
	o.ActorUrl = &v
}

// GetContext returns the Context field value
func (o *NamespaceAuditLog) GetContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *NamespaceAuditLog) SetContext(v string) {
	o.Context = v
}

// GetEvent returns the Event field value
func (o *NamespaceAuditLog) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *NamespaceAuditLog) SetEvent(v string) {
	o.Event = v
}

// GetEventAt returns the EventAt field value
func (o *NamespaceAuditLog) GetEventAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventAt
}

// GetEventAtOk returns a tuple with the EventAt field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetEventAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventAt, true
}

// SetEventAt sets field value
func (o *NamespaceAuditLog) SetEventAt(v string) {
	o.EventAt = v
}

// GetObject returns the Object field value
func (o *NamespaceAuditLog) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *NamespaceAuditLog) SetObject(v string) {
	o.Object = v
}

// GetObjectKind returns the ObjectKind field value
func (o *NamespaceAuditLog) GetObjectKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectKind
}

// GetObjectKindOk returns a tuple with the ObjectKind field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetObjectKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectKind, true
}

// SetObjectKind sets field value
func (o *NamespaceAuditLog) SetObjectKind(v string) {
	o.ObjectKind = v
}

// GetObjectSlugPerm returns the ObjectSlugPerm field value
func (o *NamespaceAuditLog) GetObjectSlugPerm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectSlugPerm
}

// GetObjectSlugPermOk returns a tuple with the ObjectSlugPerm field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetObjectSlugPermOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectSlugPerm, true
}

// SetObjectSlugPerm sets field value
func (o *NamespaceAuditLog) SetObjectSlugPerm(v string) {
	o.ObjectSlugPerm = v
}

// GetTarget returns the Target field value
func (o *NamespaceAuditLog) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *NamespaceAuditLog) SetTarget(v string) {
	o.Target = v
}

// GetTargetKind returns the TargetKind field value
func (o *NamespaceAuditLog) GetTargetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetKind
}

// GetTargetKindOk returns a tuple with the TargetKind field value
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetTargetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetKind, true
}

// SetTargetKind sets field value
func (o *NamespaceAuditLog) SetTargetKind(v string) {
	o.TargetKind = v
}

// GetTargetSlugPerm returns the TargetSlugPerm field value if set, zero value otherwise.
func (o *NamespaceAuditLog) GetTargetSlugPerm() string {
	if o == nil || o.TargetSlugPerm == nil {
		var ret string
		return ret
	}
	return *o.TargetSlugPerm
}

// GetTargetSlugPermOk returns a tuple with the TargetSlugPerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetTargetSlugPermOk() (*string, bool) {
	if o == nil || o.TargetSlugPerm == nil {
		return nil, false
	}
	return o.TargetSlugPerm, true
}

// HasTargetSlugPerm returns a boolean if a field has been set.
func (o *NamespaceAuditLog) HasTargetSlugPerm() bool {
	if o != nil && o.TargetSlugPerm != nil {
		return true
	}

	return false
}

// SetTargetSlugPerm gets a reference to the given string and assigns it to the TargetSlugPerm field.
func (o *NamespaceAuditLog) SetTargetSlugPerm(v string) {
	o.TargetSlugPerm = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *NamespaceAuditLog) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceAuditLog) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *NamespaceAuditLog) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *NamespaceAuditLog) SetUuid(v string) {
	o.Uuid = &v
}

func (o NamespaceAuditLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actor"] = o.Actor
	}
	if true {
		toSerialize["actor_ip_address"] = o.ActorIpAddress
	}
	if o.ActorKind != nil {
		toSerialize["actor_kind"] = o.ActorKind
	}
	if true {
		toSerialize["actor_location"] = o.ActorLocation
	}
	if true {
		toSerialize["actor_slug_perm"] = o.ActorSlugPerm
	}
	if o.ActorUrl != nil {
		toSerialize["actor_url"] = o.ActorUrl
	}
	if true {
		toSerialize["context"] = o.Context
	}
	if true {
		toSerialize["event"] = o.Event
	}
	if true {
		toSerialize["event_at"] = o.EventAt
	}
	if true {
		toSerialize["object"] = o.Object
	}
	if true {
		toSerialize["object_kind"] = o.ObjectKind
	}
	if true {
		toSerialize["object_slug_perm"] = o.ObjectSlugPerm
	}
	if true {
		toSerialize["target"] = o.Target
	}
	if true {
		toSerialize["target_kind"] = o.TargetKind
	}
	if o.TargetSlugPerm != nil {
		toSerialize["target_slug_perm"] = o.TargetSlugPerm
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableNamespaceAuditLog struct {
	value *NamespaceAuditLog
	isSet bool
}

func (v NullableNamespaceAuditLog) Get() *NamespaceAuditLog {
	return v.value
}

func (v *NullableNamespaceAuditLog) Set(val *NamespaceAuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullableNamespaceAuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullableNamespaceAuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNamespaceAuditLog(val *NamespaceAuditLog) *NullableNamespaceAuditLog {
	return &NullableNamespaceAuditLog{value: val, isSet: true}
}

func (v NullableNamespaceAuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNamespaceAuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
