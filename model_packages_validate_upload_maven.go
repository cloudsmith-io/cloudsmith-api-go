/*
Cloudsmith API

The API to the Cloudsmith Service

API version: 1.40.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackagesValidateUploadMaven struct for PackagesValidateUploadMaven
type PackagesValidateUploadMaven struct {
	// The ID of the artifact.
	ArtifactId *string `json:"artifact_id,omitempty"`
	// Artifact's group ID.
	GroupId *string `json:"group_id,omitempty"`
	// Adds bundled Java documentation to the Maven package
	JavadocFile *string `json:"javadoc_file,omitempty"`
	// The primary file for the package.
	PackageFile string `json:"package_file"`
	// Artifact's Maven packaging type.
	Packaging *string `json:"packaging,omitempty"`
	// The POM file is an XML file containing the Maven coordinates.
	PomFile *string `json:"pom_file,omitempty"`
	// If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.
	Republish *bool `json:"republish,omitempty"`
	// Adds bundled Java source code to the Maven package.
	SourcesFile *string `json:"sources_file,omitempty"`
	// A comma-separated values list of tags to add to the package.
	Tags *string `json:"tags,omitempty"`
	// Adds bundled Java tests to the Maven package.
	TestsFile *string `json:"tests_file,omitempty"`
	// The raw version for this package.
	Version *string `json:"version,omitempty"`
}

// NewPackagesValidateUploadMaven instantiates a new PackagesValidateUploadMaven object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackagesValidateUploadMaven(packageFile string) *PackagesValidateUploadMaven {
	this := PackagesValidateUploadMaven{}
	this.PackageFile = packageFile
	return &this
}

// NewPackagesValidateUploadMavenWithDefaults instantiates a new PackagesValidateUploadMaven object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackagesValidateUploadMavenWithDefaults() *PackagesValidateUploadMaven {
	this := PackagesValidateUploadMaven{}
	return &this
}

// GetArtifactId returns the ArtifactId field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetArtifactId() string {
	if o == nil || o.ArtifactId == nil {
		var ret string
		return ret
	}
	return *o.ArtifactId
}

// GetArtifactIdOk returns a tuple with the ArtifactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetArtifactIdOk() (*string, bool) {
	if o == nil || o.ArtifactId == nil {
		return nil, false
	}
	return o.ArtifactId, true
}

// HasArtifactId returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasArtifactId() bool {
	if o != nil && o.ArtifactId != nil {
		return true
	}

	return false
}

// SetArtifactId gets a reference to the given string and assigns it to the ArtifactId field.
func (o *PackagesValidateUploadMaven) SetArtifactId(v string) {
	o.ArtifactId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *PackagesValidateUploadMaven) SetGroupId(v string) {
	o.GroupId = &v
}

// GetJavadocFile returns the JavadocFile field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetJavadocFile() string {
	if o == nil || o.JavadocFile == nil {
		var ret string
		return ret
	}
	return *o.JavadocFile
}

// GetJavadocFileOk returns a tuple with the JavadocFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetJavadocFileOk() (*string, bool) {
	if o == nil || o.JavadocFile == nil {
		return nil, false
	}
	return o.JavadocFile, true
}

// HasJavadocFile returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasJavadocFile() bool {
	if o != nil && o.JavadocFile != nil {
		return true
	}

	return false
}

// SetJavadocFile gets a reference to the given string and assigns it to the JavadocFile field.
func (o *PackagesValidateUploadMaven) SetJavadocFile(v string) {
	o.JavadocFile = &v
}

// GetPackageFile returns the PackageFile field value
func (o *PackagesValidateUploadMaven) GetPackageFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageFile
}

// GetPackageFileOk returns a tuple with the PackageFile field value
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetPackageFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageFile, true
}

// SetPackageFile sets field value
func (o *PackagesValidateUploadMaven) SetPackageFile(v string) {
	o.PackageFile = v
}

// GetPackaging returns the Packaging field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetPackaging() string {
	if o == nil || o.Packaging == nil {
		var ret string
		return ret
	}
	return *o.Packaging
}

// GetPackagingOk returns a tuple with the Packaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetPackagingOk() (*string, bool) {
	if o == nil || o.Packaging == nil {
		return nil, false
	}
	return o.Packaging, true
}

// HasPackaging returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasPackaging() bool {
	if o != nil && o.Packaging != nil {
		return true
	}

	return false
}

// SetPackaging gets a reference to the given string and assigns it to the Packaging field.
func (o *PackagesValidateUploadMaven) SetPackaging(v string) {
	o.Packaging = &v
}

// GetPomFile returns the PomFile field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetPomFile() string {
	if o == nil || o.PomFile == nil {
		var ret string
		return ret
	}
	return *o.PomFile
}

// GetPomFileOk returns a tuple with the PomFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetPomFileOk() (*string, bool) {
	if o == nil || o.PomFile == nil {
		return nil, false
	}
	return o.PomFile, true
}

// HasPomFile returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasPomFile() bool {
	if o != nil && o.PomFile != nil {
		return true
	}

	return false
}

// SetPomFile gets a reference to the given string and assigns it to the PomFile field.
func (o *PackagesValidateUploadMaven) SetPomFile(v string) {
	o.PomFile = &v
}

// GetRepublish returns the Republish field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetRepublish() bool {
	if o == nil || o.Republish == nil {
		var ret bool
		return ret
	}
	return *o.Republish
}

// GetRepublishOk returns a tuple with the Republish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetRepublishOk() (*bool, bool) {
	if o == nil || o.Republish == nil {
		return nil, false
	}
	return o.Republish, true
}

// HasRepublish returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasRepublish() bool {
	if o != nil && o.Republish != nil {
		return true
	}

	return false
}

// SetRepublish gets a reference to the given bool and assigns it to the Republish field.
func (o *PackagesValidateUploadMaven) SetRepublish(v bool) {
	o.Republish = &v
}

// GetSourcesFile returns the SourcesFile field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetSourcesFile() string {
	if o == nil || o.SourcesFile == nil {
		var ret string
		return ret
	}
	return *o.SourcesFile
}

// GetSourcesFileOk returns a tuple with the SourcesFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetSourcesFileOk() (*string, bool) {
	if o == nil || o.SourcesFile == nil {
		return nil, false
	}
	return o.SourcesFile, true
}

// HasSourcesFile returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasSourcesFile() bool {
	if o != nil && o.SourcesFile != nil {
		return true
	}

	return false
}

// SetSourcesFile gets a reference to the given string and assigns it to the SourcesFile field.
func (o *PackagesValidateUploadMaven) SetSourcesFile(v string) {
	o.SourcesFile = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *PackagesValidateUploadMaven) SetTags(v string) {
	o.Tags = &v
}

// GetTestsFile returns the TestsFile field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetTestsFile() string {
	if o == nil || o.TestsFile == nil {
		var ret string
		return ret
	}
	return *o.TestsFile
}

// GetTestsFileOk returns a tuple with the TestsFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetTestsFileOk() (*string, bool) {
	if o == nil || o.TestsFile == nil {
		return nil, false
	}
	return o.TestsFile, true
}

// HasTestsFile returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasTestsFile() bool {
	if o != nil && o.TestsFile != nil {
		return true
	}

	return false
}

// SetTestsFile gets a reference to the given string and assigns it to the TestsFile field.
func (o *PackagesValidateUploadMaven) SetTestsFile(v string) {
	o.TestsFile = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PackagesValidateUploadMaven) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagesValidateUploadMaven) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PackagesValidateUploadMaven) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PackagesValidateUploadMaven) SetVersion(v string) {
	o.Version = &v
}

func (o PackagesValidateUploadMaven) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArtifactId != nil {
		toSerialize["artifact_id"] = o.ArtifactId
	}
	if o.GroupId != nil {
		toSerialize["group_id"] = o.GroupId
	}
	if o.JavadocFile != nil {
		toSerialize["javadoc_file"] = o.JavadocFile
	}
	if true {
		toSerialize["package_file"] = o.PackageFile
	}
	if o.Packaging != nil {
		toSerialize["packaging"] = o.Packaging
	}
	if o.PomFile != nil {
		toSerialize["pom_file"] = o.PomFile
	}
	if o.Republish != nil {
		toSerialize["republish"] = o.Republish
	}
	if o.SourcesFile != nil {
		toSerialize["sources_file"] = o.SourcesFile
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TestsFile != nil {
		toSerialize["tests_file"] = o.TestsFile
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullablePackagesValidateUploadMaven struct {
	value *PackagesValidateUploadMaven
	isSet bool
}

func (v NullablePackagesValidateUploadMaven) Get() *PackagesValidateUploadMaven {
	return v.value
}

func (v *NullablePackagesValidateUploadMaven) Set(val *PackagesValidateUploadMaven) {
	v.value = val
	v.isSet = true
}

func (v NullablePackagesValidateUploadMaven) IsSet() bool {
	return v.isSet
}

func (v *NullablePackagesValidateUploadMaven) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackagesValidateUploadMaven(val *PackagesValidateUploadMaven) *NullablePackagesValidateUploadMaven {
	return &NullablePackagesValidateUploadMaven{value: val, isSet: true}
}

func (v NullablePackagesValidateUploadMaven) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackagesValidateUploadMaven) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
