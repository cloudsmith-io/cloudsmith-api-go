/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.703.0
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationMembershipVisibilityUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationMembershipVisibilityUpdate{}

// OrganizationMembershipVisibilityUpdate struct for OrganizationMembershipVisibilityUpdate
type OrganizationMembershipVisibilityUpdate struct {
	Email                *string      `json:"email,omitempty"`
	HasTwoFactor         *bool        `json:"has_two_factor,omitempty"`
	JoinedAt             *time.Time   `json:"joined_at,omitempty"`
	LastLoginAt          NullableTime `json:"last_login_at,omitempty"`
	LastLoginMethod      *string      `json:"last_login_method,omitempty"`
	Role                 *string      `json:"role,omitempty"`
	User                 *string      `json:"user,omitempty"`
	UserId               *string      `json:"user_id,omitempty"`
	UserName             *string      `json:"user_name,omitempty"`
	UserUrl              *string      `json:"user_url,omitempty"`
	Visibility           *string      `json:"visibility,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationMembershipVisibilityUpdate OrganizationMembershipVisibilityUpdate

// NewOrganizationMembershipVisibilityUpdate instantiates a new OrganizationMembershipVisibilityUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationMembershipVisibilityUpdate() *OrganizationMembershipVisibilityUpdate {
	this := OrganizationMembershipVisibilityUpdate{}
	var visibility string = "Public"
	this.Visibility = &visibility
	return &this
}

// NewOrganizationMembershipVisibilityUpdateWithDefaults instantiates a new OrganizationMembershipVisibilityUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationMembershipVisibilityUpdateWithDefaults() *OrganizationMembershipVisibilityUpdate {
	this := OrganizationMembershipVisibilityUpdate{}
	var visibility string = "Public"
	this.Visibility = &visibility
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganizationMembershipVisibilityUpdate) SetEmail(v string) {
	o.Email = &v
}

// GetHasTwoFactor returns the HasTwoFactor field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetHasTwoFactor() bool {
	if o == nil || IsNil(o.HasTwoFactor) {
		var ret bool
		return ret
	}
	return *o.HasTwoFactor
}

// GetHasTwoFactorOk returns a tuple with the HasTwoFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetHasTwoFactorOk() (*bool, bool) {
	if o == nil || IsNil(o.HasTwoFactor) {
		return nil, false
	}
	return o.HasTwoFactor, true
}

// HasHasTwoFactor returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasHasTwoFactor() bool {
	if o != nil && !IsNil(o.HasTwoFactor) {
		return true
	}

	return false
}

// SetHasTwoFactor gets a reference to the given bool and assigns it to the HasTwoFactor field.
func (o *OrganizationMembershipVisibilityUpdate) SetHasTwoFactor(v bool) {
	o.HasTwoFactor = &v
}

// GetJoinedAt returns the JoinedAt field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetJoinedAt() time.Time {
	if o == nil || IsNil(o.JoinedAt) {
		var ret time.Time
		return ret
	}
	return *o.JoinedAt
}

// GetJoinedAtOk returns a tuple with the JoinedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetJoinedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.JoinedAt) {
		return nil, false
	}
	return o.JoinedAt, true
}

// HasJoinedAt returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasJoinedAt() bool {
	if o != nil && !IsNil(o.JoinedAt) {
		return true
	}

	return false
}

// SetJoinedAt gets a reference to the given time.Time and assigns it to the JoinedAt field.
func (o *OrganizationMembershipVisibilityUpdate) SetJoinedAt(v time.Time) {
	o.JoinedAt = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationMembershipVisibilityUpdate) GetLastLoginAt() time.Time {
	if o == nil || IsNil(o.LastLoginAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginAt.Get()
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationMembershipVisibilityUpdate) GetLastLoginAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastLoginAt.Get(), o.LastLoginAt.IsSet()
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasLastLoginAt() bool {
	if o != nil && o.LastLoginAt.IsSet() {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given NullableTime and assigns it to the LastLoginAt field.
func (o *OrganizationMembershipVisibilityUpdate) SetLastLoginAt(v time.Time) {
	o.LastLoginAt.Set(&v)
}

// SetLastLoginAtNil sets the value for LastLoginAt to be an explicit nil
func (o *OrganizationMembershipVisibilityUpdate) SetLastLoginAtNil() {
	o.LastLoginAt.Set(nil)
}

// UnsetLastLoginAt ensures that no value is present for LastLoginAt, not even an explicit nil
func (o *OrganizationMembershipVisibilityUpdate) UnsetLastLoginAt() {
	o.LastLoginAt.Unset()
}

// GetLastLoginMethod returns the LastLoginMethod field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetLastLoginMethod() string {
	if o == nil || IsNil(o.LastLoginMethod) {
		var ret string
		return ret
	}
	return *o.LastLoginMethod
}

// GetLastLoginMethodOk returns a tuple with the LastLoginMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetLastLoginMethodOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginMethod) {
		return nil, false
	}
	return o.LastLoginMethod, true
}

// HasLastLoginMethod returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasLastLoginMethod() bool {
	if o != nil && !IsNil(o.LastLoginMethod) {
		return true
	}

	return false
}

// SetLastLoginMethod gets a reference to the given string and assigns it to the LastLoginMethod field.
func (o *OrganizationMembershipVisibilityUpdate) SetLastLoginMethod(v string) {
	o.LastLoginMethod = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrganizationMembershipVisibilityUpdate) SetRole(v string) {
	o.Role = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *OrganizationMembershipVisibilityUpdate) SetUser(v string) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *OrganizationMembershipVisibilityUpdate) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *OrganizationMembershipVisibilityUpdate) SetUserName(v string) {
	o.UserName = &v
}

// GetUserUrl returns the UserUrl field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetUserUrl() string {
	if o == nil || IsNil(o.UserUrl) {
		var ret string
		return ret
	}
	return *o.UserUrl
}

// GetUserUrlOk returns a tuple with the UserUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetUserUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UserUrl) {
		return nil, false
	}
	return o.UserUrl, true
}

// HasUserUrl returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasUserUrl() bool {
	if o != nil && !IsNil(o.UserUrl) {
		return true
	}

	return false
}

// SetUserUrl gets a reference to the given string and assigns it to the UserUrl field.
func (o *OrganizationMembershipVisibilityUpdate) SetUserUrl(v string) {
	o.UserUrl = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OrganizationMembershipVisibilityUpdate) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipVisibilityUpdate) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *OrganizationMembershipVisibilityUpdate) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OrganizationMembershipVisibilityUpdate) SetVisibility(v string) {
	o.Visibility = &v
}

func (o OrganizationMembershipVisibilityUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationMembershipVisibilityUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.HasTwoFactor) {
		toSerialize["has_two_factor"] = o.HasTwoFactor
	}
	if !IsNil(o.JoinedAt) {
		toSerialize["joined_at"] = o.JoinedAt
	}
	if o.LastLoginAt.IsSet() {
		toSerialize["last_login_at"] = o.LastLoginAt.Get()
	}
	if !IsNil(o.LastLoginMethod) {
		toSerialize["last_login_method"] = o.LastLoginMethod
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.UserUrl) {
		toSerialize["user_url"] = o.UserUrl
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationMembershipVisibilityUpdate) UnmarshalJSON(data []byte) (err error) {
	varOrganizationMembershipVisibilityUpdate := _OrganizationMembershipVisibilityUpdate{}

	err = json.Unmarshal(data, &varOrganizationMembershipVisibilityUpdate)

	if err != nil {
		return err
	}

	*o = OrganizationMembershipVisibilityUpdate(varOrganizationMembershipVisibilityUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "has_two_factor")
		delete(additionalProperties, "joined_at")
		delete(additionalProperties, "last_login_at")
		delete(additionalProperties, "last_login_method")
		delete(additionalProperties, "role")
		delete(additionalProperties, "user")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "user_name")
		delete(additionalProperties, "user_url")
		delete(additionalProperties, "visibility")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationMembershipVisibilityUpdate struct {
	value *OrganizationMembershipVisibilityUpdate
	isSet bool
}

func (v NullableOrganizationMembershipVisibilityUpdate) Get() *OrganizationMembershipVisibilityUpdate {
	return v.value
}

func (v *NullableOrganizationMembershipVisibilityUpdate) Set(val *OrganizationMembershipVisibilityUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationMembershipVisibilityUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationMembershipVisibilityUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationMembershipVisibilityUpdate(val *OrganizationMembershipVisibilityUpdate) *NullableOrganizationMembershipVisibilityUpdate {
	return &NullableOrganizationMembershipVisibilityUpdate{value: val, isSet: true}
}

func (v NullableOrganizationMembershipVisibilityUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationMembershipVisibilityUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
