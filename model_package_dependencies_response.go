/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackageDependenciesResponse struct for PackageDependenciesResponse
type PackageDependenciesResponse struct {
	Dependencies []PackageDependency `json:"dependencies"`
}

// NewPackageDependenciesResponse instantiates a new PackageDependenciesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageDependenciesResponse(dependencies []PackageDependency) *PackageDependenciesResponse {
	this := PackageDependenciesResponse{}
	this.Dependencies = dependencies
	return &this
}

// NewPackageDependenciesResponseWithDefaults instantiates a new PackageDependenciesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageDependenciesResponseWithDefaults() *PackageDependenciesResponse {
	this := PackageDependenciesResponse{}
	return &this
}

// GetDependencies returns the Dependencies field value
func (o *PackageDependenciesResponse) GetDependencies() []PackageDependency {
	if o == nil {
		var ret []PackageDependency
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
func (o *PackageDependenciesResponse) GetDependenciesOk() ([]PackageDependency, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *PackageDependenciesResponse) SetDependencies(v []PackageDependency) {
	o.Dependencies = v
}

func (o PackageDependenciesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dependencies"] = o.Dependencies
	}
	return json.Marshal(toSerialize)
}

type NullablePackageDependenciesResponse struct {
	value *PackageDependenciesResponse
	isSet bool
}

func (v NullablePackageDependenciesResponse) Get() *PackageDependenciesResponse {
	return v.value
}

func (v *NullablePackageDependenciesResponse) Set(val *PackageDependenciesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageDependenciesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageDependenciesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageDependenciesResponse(val *PackageDependenciesResponse) *NullablePackageDependenciesResponse {
	return &NullablePackageDependenciesResponse{value: val, isSet: true}
}

func (v NullablePackageDependenciesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageDependenciesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
