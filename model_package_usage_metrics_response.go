/*
Cloudsmith API (v1)

The API to the Cloudsmith Service

API version: 1.181.6
Contact: support@cloudsmith.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudsmith

import (
	"encoding/json"
)

// PackageUsageMetricsResponse struct for PackageUsageMetricsResponse
type PackageUsageMetricsResponse struct {
	Packages CommonMetrics `json:"packages"`
}

// NewPackageUsageMetricsResponse instantiates a new PackageUsageMetricsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageUsageMetricsResponse(packages CommonMetrics) *PackageUsageMetricsResponse {
	this := PackageUsageMetricsResponse{}
	this.Packages = packages
	return &this
}

// NewPackageUsageMetricsResponseWithDefaults instantiates a new PackageUsageMetricsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageUsageMetricsResponseWithDefaults() *PackageUsageMetricsResponse {
	this := PackageUsageMetricsResponse{}
	return &this
}

// GetPackages returns the Packages field value
func (o *PackageUsageMetricsResponse) GetPackages() CommonMetrics {
	if o == nil {
		var ret CommonMetrics
		return ret
	}

	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value
// and a boolean to check if the value has been set.
func (o *PackageUsageMetricsResponse) GetPackagesOk() (*CommonMetrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Packages, true
}

// SetPackages sets field value
func (o *PackageUsageMetricsResponse) SetPackages(v CommonMetrics) {
	o.Packages = v
}

func (o PackageUsageMetricsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["packages"] = o.Packages
	}
	return json.Marshal(toSerialize)
}

type NullablePackageUsageMetricsResponse struct {
	value *PackageUsageMetricsResponse
	isSet bool
}

func (v NullablePackageUsageMetricsResponse) Get() *PackageUsageMetricsResponse {
	return v.value
}

func (v *NullablePackageUsageMetricsResponse) Set(val *PackageUsageMetricsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageUsageMetricsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageUsageMetricsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageUsageMetricsResponse(val *PackageUsageMetricsResponse) *NullablePackageUsageMetricsResponse {
	return &NullablePackageUsageMetricsResponse{value: val, isSet: true}
}

func (v NullablePackageUsageMetricsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageUsageMetricsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
